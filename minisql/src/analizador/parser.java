
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
//----------------------------------------------------

package analizador;

import java_cup.runtime.*;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Fri Nov 01 18:28:37 CST 2019
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0414\000\002\002\003\000\002\002\004\000\002\002" +
    "\004\000\002\002\003\000\002\002\003\000\002\002\003" +
    "\000\002\002\003\000\002\002\003\000\002\002\004\000" +
    "\002\002\003\000\002\002\003\000\002\002\003\000\002" +
    "\002\004\000\002\002\004\000\002\002\004\000\002\002" +
    "\003\000\002\002\004\000\002\002\003\000\002\u0182\006" +
    "\000\002\u0182\005\000\002\u015e\011\000\002\u015e\010\000" +
    "\002\u015f\003\000\002\u015f\003\000\002\u015f\002\000\002" +
    "\u0160\005\000\002\u0161\005\000\002\u0161\003\000\002\u0162" +
    "\007\000\002\u0165\004\000\002\u0165\002\000\002\u0166\006" +
    "\000\002\u0167\006\000\002\u0167\002\000\002\u0192\013\000" +
    "\002\u0192\012\000\002\u0192\011\000\002\u0192\010\000\002" +
    "\u0192\007\000\002\u0192\010\000\002\u016c\012\000\002\u016c" +
    "\010\000\002\u016c\007\000\002\u016c\002\000\002\u0193\003" +
    "\000\002\u0193\003\000\002\u0193\003\000\002\u0193\003\000" +
    "\002\u0168\011\000\002\u0168\006\000\002\u0168\002\000\002" +
    "\u0169\006\000\002\u0169\004\000\002\u016a\006\000\002\u016a" +
    "\002\000\002\u0163\007\000\002\u0163\004\000\002\u0163\002" +
    "\000\002\u0164\005\000\002\u0164\002\000\002\u016d\004\000" +
    "\002\u016d\004\000\002\u016d\003\000\002\u016e\004\000\002" +
    "\u016e\004\000\002\u016e\003\000\002\u016f\004\000\002\u016f" +
    "\004\000\002\u016f\004\000\002\u016f\004\000\002\u016f\003" +
    "\000\002\u0170\004\000\002\u0170\004\000\002\u0170\004\000" +
    "\002\u0170\003\000\002\u0171\003\000\002\u0171\002\000\002" +
    "\351\006\000\002\351\005\000\002\351\006\000\002\351" +
    "\007\000\002\351\007\000\002\351\006\000\002\351\007" +
    "\000\002\351\006\000\002\351\005\000\002\351\004\000" +
    "\002\351\005\000\002\351\004\000\002\351\007\000\002" +
    "\351\006\000\002\u0184\007\000\002\u0184\005\000\002\u0184" +
    "\005\000\002\u0184\005\000\002\u0191\004\000\002\u0191\004" +
    "\000\002\u0191\004\000\002\u0183\011\000\002\u0183\006\000" +
    "\002\u0183\006\000\002\u0183\002\000\002\u0185\005\000\002" +
    "\u0185\003\000\002\u0186\004\000\002\u0186\003\000\002\u0186" +
    "\005\000\002\u0186\004\000\002\u0186\002\000\002\u0187\003" +
    "\000\002\u0187\003\000\002\u0187\005\000\002\u0187\003\000" +
    "\002\u0187\003\000\002\u0187\003\000\002\u0187\007\000\002" +
    "\u0188\005\000\002\u0188\005\000\002\u0188\004\000\002\u0189" +
    "\004\000\002\u0189\002\000\002\u018a\006\000\002\u018a\004" +
    "\000\002\u018a\005\000\002\u018a\006\000\002\u018a\004\000" +
    "\002\u018a\003\000\002\u018b\004\000\002\u018d\005\000\002" +
    "\u018d\004\000\002\u018d\010\000\002\u018d\006\000\002\u018d" +
    "\006\000\002\u018d\002\000\002\u018c\004\000\002\u018e\004" +
    "\000\002\u018e\002\000\002\u018f\006\000\002\u018f\006\000" +
    "\002\u018f\004\000\002\u018f\005\000\002\u018f\005\000\002" +
    "\u018f\004\000\002\u0190\005\000\002\u0190\002\000\002\363" +
    "\003\000\002\363\003\000\002\364\005\000\002\365\004" +
    "\000\002\365\003\000\002\365\004\000\002\365\007\000" +
    "\002\365\003\000\002\365\003\000\002\365\003\000\002" +
    "\366\005\000\002\366\005\000\002\366\005\000\002\366" +
    "\002\000\002\367\005\000\002\367\005\000\002\367\005" +
    "\000\002\367\005\000\002\367\005\000\002\367\005\000" +
    "\002\367\005\000\002\367\005\000\002\367\005\000\002" +
    "\367\005\000\002\370\005\000\002\370\002\000\002\357" +
    "\005\000\002\360\005\000\002\360\005\000\002\360\005" +
    "\000\002\360\005\000\002\360\006\000\002\360\005\000" +
    "\002\360\005\000\002\360\005\000\002\360\005\000\002" +
    "\361\005\000\002\361\002\000\002\362\005\000\002\362" +
    "\002\000\002\352\004\000\002\352\004\000\002\353\006" +
    "\000\002\353\004\000\002\353\004\000\002\353\003\000" +
    "\002\354\007\000\002\354\007\000\002\354\005\000\002" +
    "\354\005\000\002\354\005\000\002\355\005\000\002\355" +
    "\002\000\002\356\005\000\002\356\005\000\002\356\002" +
    "\000\002\272\007\000\002\272\006\000\002\272\007\000" +
    "\002\272\006\000\002\272\006\000\002\272\007\000\002" +
    "\272\005\000\002\272\004\000\002\272\006\000\002\272" +
    "\005\000\002\272\004\000\002\272\005\000\002\272\004" +
    "\000\002\272\005\000\002\u0173\005\000\002\u0173\003\000" +
    "\002\112\003\000\002\112\002\000\002\u0174\010\000\002" +
    "\u0175\011\000\002\u0175\002\000\002\u0176\004\000\002\u0176" +
    "\002\000\002\u0177\003\000\002\u0177\002\000\002\u0178\012" +
    "\000\002\u0178\002\000\002\u0179\005\000\002\u0179\005\000" +
    "\002\u017a\011\000\002\u017b\007\000\002\u017b\005\000\002" +
    "\u0139\005\000\002\u0139\003\000\002\u013a\006\000\002\u013a" +
    "\006\000\002\u013b\004\000\002\u013b\002\000\002\u013c\013" +
    "\000\002\u013c\003\000\002\u0145\005\000\002\u0145\005\000" +
    "\002\u0145\005\000\002\u0145\003\000\002\u0146\005\000\002" +
    "\u0146\005\000\002\u0147\004\000\002\u0147\004\000\002\u0147" +
    "\004\000\002\u0147\004\000\002\u0147\004\000\002\u015d\005" +
    "\000\002\u015d\005\000\002\u015d\005\000\002\u015d\005\000" +
    "\002\u015d\005\000\002\u015d\002\000\002\u013d\003\000\002" +
    "\u013d\002\000\002\u013e\004\000\002\u013e\002\000\002\u013f" +
    "\003\000\002\u013f\003\000\002\u013f\002\000\002\u0140\003" +
    "\000\002\u0140\002\000\002\u0141\013\000\002\u0141\002\000" +
    "\002\u0142\005\000\002\u0142\003\000\002\u0143\007\000\002" +
    "\u0143\004\000\002\u0148\004\000\002\u0148\004\000\002\u0148" +
    "\004\000\002\u0148\006\000\002\u0149\004\000\002\u0149\004" +
    "\000\002\u0149\004\000\002\u0149\006\000\002\u0149\002\000" +
    "\002\u014a\003\000\002\u014a\003\000\002\u014a\003\000\002" +
    "\u014a\005\000\002\u014a\002\000\002\371\013\000\002\371" +
    "\011\000\002\372\004\000\002\372\004\000\002\372\004" +
    "\000\002\u0130\004\000\002\u0130\004\000\002\373\004\000" +
    "\002\373\002\000\002\374\004\000\002\374\004\000\002" +
    "\374\005\000\002\374\005\000\002\u0131\004\000\002\u0131" +
    "\004\000\002\375\004\000\002\375\004\000\002\375\004" +
    "\000\002\375\004\000\002\375\004\000\002\375\002\000" +
    "\002\u010e\010\000\002\u010e\006\000\002\u010e\005\000\002" +
    "\u010e\007\000\002\u010e\005\000\002\u010e\004\000\002\u0102" +
    "\005\000\002\u0102\003\000\002\u0103\005\000\002\u0103\004" +
    "\000\002\u0103\005\000\002\u0103\004\000\002\u0103\006\000" +
    "\002\u0104\004\000\002\u0104\004\000\002\u0104\003\000\002" +
    "\u0105\010\000\002\u0106\006\000\002\u0106\002\000\002\u0107" +
    "\007\000\002\u0107\003\000\002\u0108\003\000\002\u0109\010" +
    "\000\002\u010a\010\000\002\u010a\005\000\002\u010b\006\000" +
    "\002\u010b\003\000\002\u010c\006\000\002\u010c\003\000\002" +
    "\u010d\005\000\002\u010d\002\000\002\u0135\011\000\002\u0135" +
    "\006\000\002\u0110\004\000\002\u012c\004\000\002\u012c\003" +
    "\000\002\u012d\007\000\002\u012d\005\000\002\u012d\004\000" +
    "\002\u012d\007\000\002\u012d\011\000\002\u012d\002\000\002" +
    "\u012e\004\000\002\u012e\004\000\002\u012e\004\000\002\u012e" +
    "\004\000\002\u012e\004\000\002\u012e\004\000\002\u012e\004" +
    "\000\002\u012e\004\000\002\u012e\004\000\002\u012e\004\000" +
    "\002\u012e\004\000\002\u012e\004\000\002\u012e\004\000\002" +
    "\u012f\005\000\002\u012f\007\000\002\u012f\002\000\002\u0111" +
    "\004\000\002\u0111\003\000\002\u0112\005\000\002\u0112\003" +
    "\000\002\u0113\004\000\002\u0113\003\000\002\u0114\012\000" +
    "\002\u0114\003\000\002\u0115\007\000\002\u0115\003\000\002" +
    "\u0116\011\000\002\u0116\003\000\002\u0117\006\000\002\u0117" +
    "\003\000\002\u0118\011\000\002\u0118\011\000\002\u0118\003" +
    "\000\002\u0119\003\000\002\u0119\002\000\002\u011a\004\000" +
    "\002\u011a\005\000\002\u011a\003\000\002\u011b\004\000\002" +
    "\u011b\003\000\002\u011c\005\000\002\u011c\003\000\002\u011d" +
    "\003\000\002\u011d\002\000\002\u011e\005\000\002\u011e\004" +
    "\000\002\u011e\002\000\002\u011f\007\000\002\u011f\007\000" +
    "\002\u011f\006\000\002\u0121\005\000\002\u0121\003\000\002" +
    "\u0123\005\000\002\u0123\004\000\002\u0123\005\000\002\u0123" +
    "\004\000\002\u0123\004\000\002\u0123\006\000\002\u0124\004" +
    "\000\002\u0124\004\000\002\u0124\003\000\002\u0125\003\000" +
    "\002\u0126\004\000\002\u0127\004\000\002\u0128\005\000\002" +
    "\u0128\003\000\002\u0129\006\000\002\u0129\003\000\002\u012a" +
    "\006\000\002\u012a\003\000\002\u0133\006\000\002\u0133\003" +
    "\000\002\u0134\005\000\002\u0134\002\000\002\u0132\010\000" +
    "\002\u0132\005\000\002\376\004\000\002\376\004\000\002" +
    "\376\004\000\002\376\004\000\002\376\004\000\002\376" +
    "\002\000\002\377\014\000\002\377\014\000\002\377\013" +
    "\000\002\377\010\000\002\377\013\000\002\377\012\000" +
    "\002\u012b\004\000\002\u012b\003\000\002\u012b\004\000\002" +
    "\u012b\004\000\002\332\010\000\002\332\011\000\002\332" +
    "\011\000\002\332\010\000\002\332\010\000\002\332\007" +
    "\000\002\332\012\000\002\332\013\000\002\332\013\000" +
    "\002\332\012\000\002\332\012\000\002\332\011\000\002" +
    "\350\003\000\002\350\003\000\002\333\010\000\002\334" +
    "\006\000\002\334\002\000\002\335\007\000\002\335\003" +
    "\000\002\336\006\000\002\336\004\000\002\340\011\000" +
    "\002\340\004\000\002\340\004\000\002\340\004\000\002" +
    "\340\004\000\002\340\004\000\002\340\013\000\002\340" +
    "\002\000\002\337\004\000\002\337\004\000\002\337\002" +
    "\000\002\341\005\000\002\341\003\000\002\342\003\000" +
    "\002\342\003\000\002\343\010\000\002\344\005\000\002" +
    "\344\002\000\002\345\005\000\002\346\003\000\002\346" +
    "\004\000\002\346\003\000\002\346\003\000\002\346\003" +
    "\000\002\346\003\000\002\346\003\000\002\346\003\000" +
    "\002\346\003\000\002\346\003\000\002\346\003\000\002" +
    "\346\003\000\002\347\003\000\002\347\003\000\002\347" +
    "\002\000\002\312\006\000\002\312\003\000\002\313\005" +
    "\000\002\314\005\000\002\314\002\000\002\311\005\000" +
    "\002\311\005\000\002\311\005\000\002\311\005\000\002" +
    "\311\006\000\002\311\004\000\002\311\005\000\002\311" +
    "\005\000\002\311\006\000\002\311\006\000\002\311\002" +
    "\000\002\273\006\000\002\273\006\000\002\273\003\000" +
    "\002\274\005\000\002\274\004\000\002\274\003\000\002" +
    "\275\006\000\002\275\005\000\002\275\007\000\002\275" +
    "\003\000\002\310\006\000\002\310\002\000\002\276\005" +
    "\000\002\276\005\000\002\276\007\000\002\276\006\000" +
    "\002\276\004\000\002\276\004\000\002\276\002\000\002" +
    "\277\004\000\002\277\002\000\002\307\003\000\002\307" +
    "\003\000\002\307\003\000\002\307\003\000\002\307\002" +
    "\000\002\300\006\000\002\301\005\000\002\301\004\000" +
    "\002\301\003\000\002\301\004\000\002\301\002\000\002" +
    "\302\014\000\002\303\003\000\002\303\003\000\002\304" +
    "\010\000\002\304\003\000\002\305\010\000\002\305\010" +
    "\000\002\305\003\000\002\306\007\000\002\306\007\000" +
    "\002\306\002\000\002\u017c\003\000\002\u017c\003\000\002" +
    "\241\004\000\002\241\006\000\002\242\005\000\002\242" +
    "\002\000\002\266\004\000\002\267\005\000\002\267\003" +
    "\000\002\270\004\000\002\270\004\000\002\270\003\000" +
    "\002\271\004\000\002\271\002\000\002\245\004\000\002" +
    "\245\006\000\002\245\006\000\002\245\005\000\002\245" +
    "\010\000\002\246\004\000\002\246\004\000\002\247\004" +
    "\000\002\247\003\000\002\247\004\000\002\247\003\000" +
    "\002\247\002\000\002\251\004\000\002\252\004\000\002" +
    "\252\004\000\002\252\003\000\002\253\010\000\002\253" +
    "\003\000\002\250\004\000\002\250\002\000\002\265\004" +
    "\000\002\254\003\000\002\254\002\000\002\255\007\000" +
    "\002\255\005\000\002\255\003\000\002\256\006\000\002" +
    "\256\003\000\002\257\005\000\002\257\002\000\002\260" +
    "\005\000\002\260\003\000\002\261\006\000\002\261\003" +
    "\000\002\262\005\000\002\262\003\000\002\263\006\000" +
    "\002\263\003\000\002\264\004\000\002\264\003\000\002" +
    "\315\004\000\002\316\004\000\002\316\004\000\002\316" +
    "\003\000\002\317\010\000\002\317\003\000\002\331\004" +
    "\000\002\320\003\000\002\320\002\000\002\321\007\000" +
    "\002\321\005\000\002\321\003\000\002\322\006\000\002" +
    "\322\003\000\002\323\005\000\002\323\002\000\002\324" +
    "\005\000\002\324\003\000\002\325\006\000\002\325\003" +
    "\000\002\326\005\000\002\326\003\000\002\327\006\000" +
    "\002\327\003\000\002\330\003\000\002\234\004\000\002" +
    "\235\007\000\002\235\003\000\002\236\004\000\002\236" +
    "\003\000\002\237\004\000\002\237\003\000\002\240\004" +
    "\000\002\240\005\000\002\240\004\000\002\u0158\004\000" +
    "\002\u0159\007\000\002\u0159\003\000\002\u015a\004\000\002" +
    "\u015a\003\000\002\u015b\004\000\002\u015b\003\000\002\u015c" +
    "\004\000\002\u015c\005\000\002\u015c\004\000\002\143\003" +
    "\000\002\143\002\000\002\222\004\000\002\222\006\000" +
    "\002\222\002\000\002\223\004\000\002\223\004\000\002" +
    "\223\004\000\002\223\004\000\002\224\004\000\002\224" +
    "\003\000\002\144\004\000\002\144\010\000\002\144\010" +
    "\000\002\225\003\000\002\225\003\000\002\225\005\000" +
    "\002\145\004\000\002\145\005\000\002\145\004\000\002" +
    "\145\002\000\002\226\003\000\002\226\003\000\002\226" +
    "\003\000\002\226\003\000\002\147\006\000\002\147\007" +
    "\000\002\147\004\000\002\146\005\000\002\146\002\000" +
    "\002\150\005\000\002\150\006\000\002\151\004\000\002" +
    "\151\004\000\002\151\002\000\002\152\004\000\002\152" +
    "\003\000\002\153\004\000\002\153\006\000\002\154\003" +
    "\000\002\155\006\000\002\156\004\000\002\156\005\000" +
    "\002\157\004\000\002\157\004\000\002\160\004\000\002" +
    "\160\004\000\002\160\004\000\002\161\004\000\002\161" +
    "\013\000\002\163\003\000\002\163\003\000\002\163\004" +
    "\000\002\165\004\000\002\166\004\000\002\164\004\000" +
    "\002\164\003\000\002\162\005\000\002\162\006\000\002" +
    "\u014b\006\000\002\u014c\004\000\002\u014c\005\000\002\u014d" +
    "\004\000\002\u014d\004\000\002\u014e\004\000\002\u014e\004" +
    "\000\002\u014e\004\000\002\u014f\004\000\002\u014f\013\000" +
    "\002\u0151\003\000\002\u0151\003\000\002\u0151\004\000\002" +
    "\u0153\004\000\002\u0154\004\000\002\u0152\004\000\002\u0152" +
    "\003\000\002\u0150\005\000\002\u0150\006\000\002\u0155\004" +
    "\000\002\u0155\003\000\002\u0156\005\000\002\u0156\003\000" +
    "\002\u0157\005\000\002\u0157\010\000\002\u0157\007\000\002" +
    "\u0157\003\000\002\167\004\000\002\167\003\000\002\170" +
    "\005\000\002\170\003\000\002\171\006\000\002\171\005" +
    "\000\002\171\011\000\002\171\010\000\002\171\010\000" +
    "\002\171\007\000\002\171\004\000\002\171\003\000\002" +
    "\172\004\000\002\173\004\000\002\173\002\000\002\174" +
    "\007\000\002\174\003\000\002\175\004\000\002\175\003" +
    "\000\002\176\003\000\002\176\003\000\002\176\004\000" +
    "\002\177\006\000\002\177\005\000\002\177\006\000\002" +
    "\177\006\000\002\232\007\000\002\232\006\000\002\232" +
    "\002\000\002\233\007\000\002\233\006\000\002\227\004" +
    "\000\002\227\003\000\002\227\005\000\002\227\005\000" +
    "\002\227\005\000\002\231\003\000\002\231\002\000\002" +
    "\204\004\000\002\204\003\000\002\204\012\000\002\205" +
    "\004\000\002\205\003\000\002\205\002\000\002\206\005" +
    "\000\002\206\002\000\002\207\005\000\002\207\002\000" +
    "\002\210\004\000\002\210\003\000\002\210\002\000\002" +
    "\211\007\000\002\211\002\000\002\212\003\000\002\212" +
    "\003\000\002\212\002\000\002\073\005\000\002\137\005" +
    "\000\002\137\002\000\002\074\004\000\002\074\003\000" +
    "\002\111\005\000\002\111\002\000\002\075\005\000\002" +
    "\075\005\000\002\075\007\000\002\142\004\000\002\142" +
    "\002\000\002\076\004\000\002\076\002\000\002\077\005" +
    "\000\002\077\005\000\002\100\003\000\002\100\003\000" +
    "\002\040\005\000\002\041\003\000\002\041\003\000\002" +
    "\041\002\000\002\042\005\000\002\042\003\000\002\043" +
    "\004\000\002\043\003\000\002\117\006\000\002\117\004" +
    "\000\002\044\006\000\002\044\004\000\002\044\005\000" +
    "\002\045\005\000\002\045\003\000\002\113\004\000\002" +
    "\113\004\000\002\113\003\000\002\114\004\000\002\114" +
    "\004\000\002\114\004\000\002\114\004\000\002\114\004" +
    "\000\002\114\006\000\002\114\005\000\002\116\004\000" +
    "\002\116\004\000\002\116\004\000\002\116\004\000\002" +
    "\116\004\000\002\116\002\000\002\115\004\000\002\115" +
    "\002\000\002\054\004\000\002\055\005\000\002\055\005" +
    "\000\002\055\002\000\002\056\004\000\002\057\005\000" +
    "\002\057\005\000\002\057\002\000\002\060\004\000\002" +
    "\061\005\000\002\061\005\000\002\061\005\000\002\061" +
    "\005\000\002\061\005\000\002\061\005\000\002\061\005" +
    "\000\002\061\002\000\002\062\005\000\002\062\003\000" +
    "\002\063\003\000\002\063\003\000\002\063\003\000\002" +
    "\063\010\000\002\063\012\000\002\063\012\000\002\063" +
    "\006\000\002\063\006\000\002\063\007\000\002\063\004" +
    "\000\002\u0196\004\000\002\u0196\002\000\002\u0195\004\000" +
    "\002\u0195\003\000\002\u0195\003\000\002\064\003\000\002" +
    "\064\003\000\002\064\004\000\002\064\003\000\002\064" +
    "\004\000\002\064\003\000\002\065\006\000\002\065\007" +
    "\000\002\065\006\000\002\065\006\000\002\065\006\000" +
    "\002\066\004\000\002\066\004\000\002\066\003\000\002" +
    "\067\003\000\002\067\003\000\002\u0194\003\000\002\u0194" +
    "\003\000\002\u0194\002\000\002\047\004\000\002\050\005" +
    "\000\002\050\005\000\002\050\002\000\002\051\004\000" +
    "\002\052\005\000\002\052\005\000\002\052\002\000\002" +
    "\053\005\000\002\053\003\000\002\053\003\000\002\053" +
    "\004\000\002\053\003\000\002\035\006\000\002\035\005" +
    "\000\002\036\007\000\002\036\003\000\002\037\003\000" +
    "\002\037\003\000\002\120\004\000\002\120\003\000\002" +
    "\121\004\000\002\121\004\000\002\121\005\000\002\122" +
    "\006\000\002\122\003\000\002\123\004\000\002\123\003" +
    "\000\002\124\007\000\002\124\004\000\002\124\003\000" +
    "\002\125\004\000\002\125\004\000\002\125\006\000\002" +
    "\125\004\000\002\u0197\004\000\002\u0197\004\000\002\u0197" +
    "\005\000\002\u0197\004\000\002\u0197\004\000\002\u0197\002" +
    "\000\002\u0198\005\000\002\u0198\005\000\002\u0198\006\000" +
    "\002\u0198\005\000\002\u0198\005\000\002\u0198\002\000\002" +
    "\126\004\000\002\126\002\000\002\130\007\000\002\130" +
    "\002\000\002\140\004\000\002\141\005\000\002\141\002" +
    "\000\002\104\004\000\002\104\004\000\002\131\006\000" +
    "\002\132\004\000\002\133\007\000\002\133\003\000\002" +
    "\134\004\000\002\135\004\000\002\135\004\000\002\136" +
    "\007\000\002\031\004\000\002\031\007\000\002\031\006" +
    "\000\002\033\007\000\002\033\006\000\002\032\005\000" +
    "\002\032\002\000\002\034\003\000\002\034\002\000\002" +
    "\027\007\000\002\027\006\000\002\025\007\000\002\025" +
    "\006\000\002\026\003\000\002\026\003\000\002\021\007" +
    "\000\002\021\006\000\002\022\004\000\002\022\004\000" +
    "\002\022\002\000\002\023\003\000\002\023\004\000\002" +
    "\023\002\000\002\030\003\000\002\030\004\000\002\024" +
    "\010\000\002\024\010\000\002\024\002\000\002\010\003" +
    "\000\002\010\003\000\002\010\003\000\002\010\003\000" +
    "\002\010\003\000\002\010\003\000\002\010\003\000\002" +
    "\u0181\010\000\002\u0181\007\000\002\u017d\010\000\002\u017d" +
    "\007\000\002\u017e\003\000\002\u017e\003\000\002\u017f\004" +
    "\000\002\u017f\002\000\002\u0180\005\000\002\u0180\002\000" +
    "\002\u0136\010\000\002\u0136\007\000\002\u0136\006\000\002" +
    "\u0136\005\000\002\u0137\006\000\002\u0137\004\000\002\u0138" +
    "\007\000\002\u0138\004\000\002\u0138\002\000\002\016\010" +
    "\000\002\016\007\000\002\015\007\000\002\015\006\000" +
    "\002\014\010\000\002\014\007\000\002\020\005\000\002" +
    "\020\002\000\002\006\005\000\002\006\003\000\002\013" +
    "\010\000\002\013\007\000\002\017\005\000\002\017\002" +
    "\000\002\011\004\000\002\011\002\000\002\012\005\000" +
    "\002\012\002\000\002\004\007\000\002\004\006\000\002" +
    "\003\003\000\002\003\005\000\002\003\007\000\002\005" +
    "\003\000\002\005\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u08a5\000\046\003\027\005\010\006\ufccf\043\ufccf\047" +
    "\024\055\013\064\012\065\007\066\015\070\020\102\004" +
    "\103\035\131\031\161\032\173\006\175\017\247\022\350" +
    "\034\001\002\000\006\006\ufcd1\043\ufcd1\001\002\000\004" +
    "\002\ufffa\001\002\000\060\006\264\007\242\011\274\012" +
    "\243\034\253\043\271\046\237\071\u0876\104\262\105\272" +
    "\106\267\107\265\110\241\111\u0875\112\u0879\115\273\116" +
    "\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232" +
    "\001\002\000\006\056\u0844\057\u0843\001\002\000\004\004" +
    "\u086a\001\002\000\004\002\ufff8\001\002\000\006\056\u0844" +
    "\057\u0843\001\002\000\014\027\ufc29\056\u0858\057\u0856\060" +
    "\ufc29\233\ufc29\001\002\000\006\006\044\043\u02c8\001\002" +
    "\000\016\056\u0844\057\u0843\070\u0275\131\u0271\161\u0274\173" +
    "\231\001\002\000\004\002\ufffb\001\002\000\032\004\u0749" +
    "\052\u0750\053\u074e\054\u0748\122\u0745\234\u074c\235\u074f\236" +
    "\u074d\241\u0751\302\u046b\335\u0467\336\u0466\001\002\000\016" +
    "\006\044\043\u0283\071\u0280\073\365\074\357\101\u027f\001" +
    "\002\000\004\002\ufffd\001\002\000\022\004\u046a\052\u0469" +
    "\053\u0463\054\u0464\241\u0462\302\u046b\335\u0467\336\u0466\001" +
    "\002\000\004\002\ufffe\001\002\000\022\004\u041a\052\u0419" +
    "\053\u0410\054\u0412\241\u0411\302\u041c\335\u0418\336\u0416\001" +
    "\002\000\004\002\001\001\002\000\004\002\ufff6\001\002" +
    "\000\050\002\ufff0\003\027\005\010\006\ufccf\043\ufccf\047" +
    "\024\055\013\064\012\065\007\066\015\070\020\102\004" +
    "\103\035\131\031\161\032\173\006\175\017\247\022\350" +
    "\034\001\002\000\004\002\ufff2\001\002\000\014\006\044" +
    "\043\u0368\071\u0364\073\365\074\357\001\002\000\016\006" +
    "\044\043\u03b9\071\u03b5\073\365\074\357\154\u03bb\001\002" +
    "\000\004\002\ufffc\001\002\000\006\006\044\043\045\001" +
    "\002\000\006\006\ufcd0\043\ufcd0\001\002\000\004\002\ufff7" +
    "\001\002\000\004\002\040\001\002\000\004\002\000\001" +
    "\002\000\010\347\uffe9\351\175\352\176\001\002\000\004" +
    "\002\ufff4\001\002\000\004\002\ufff3\001\002\000\342\006" +
    "\ufbf2\007\ufbf2\010\ufbf2\011\ufbf2\012\ufbf2\013\ufbf2\014\ufbf2" +
    "\015\ufbf2\016\ufbf2\017\ufbf2\020\ufbf2\021\ufbf2\023\ufbf2\027" +
    "\ufbf2\030\ufbf2\031\170\034\ufbf2\035\ufbf2\041\ufbf2\043\ufbf2" +
    "\046\ufbf2\047\ufbf2\060\ufbf2\062\ufbf2\070\ufbf2\072\ufbf2\075" +
    "\ufbf2\076\ufbf2\100\ufbf2\101\ufbf2\102\ufbf2\103\ufbf2\115\ufbf2" +
    "\116\ufbf2\117\ufbf2\120\ufbf2\121\ufbf2\122\ufbf2\123\ufbf2\126" +
    "\ufbf2\127\ufbf2\130\ufbf2\131\ufbf2\132\ufbf2\134\ufbf2\136\ufbf2" +
    "\140\ufbf2\141\ufbf2\142\ufbf2\143\ufbf2\144\ufbf2\145\ufbf2\146" +
    "\ufbf2\150\ufbf2\151\ufbf2\152\ufbf2\153\ufbf2\154\ufbf2\155\ufbf2" +
    "\161\ufbf2\162\ufbf2\164\ufbf2\166\ufbf2\170\ufbf2\171\ufbf2\172" +
    "\ufbf2\173\ufbf2\174\ufbf2\201\ufbf2\231\ufbf2\233\ufbf2\234\ufbf2" +
    "\235\ufbf2\236\ufbf2\240\ufbf2\241\ufbf2\243\ufbf2\244\ufbf2\246" +
    "\ufbf2\247\ufbf2\255\ufbf2\256\ufbf2\257\ufbf2\260\ufbf2\261\ufbf2" +
    "\262\ufbf2\272\ufbf2\274\ufbf2\275\ufbf2\277\ufbf2\303\ufbf2\304" +
    "\ufbf2\310\ufbf2\312\ufbf2\315\ufbf2\316\ufbf2\317\ufbf2\320\ufbf2" +
    "\321\ufbf2\322\ufbf2\323\ufbf2\324\ufbf2\325\ufbf2\326\ufbf2\327" +
    "\ufbf2\330\ufbf2\331\ufbf2\347\ufbf2\351\ufbf2\352\ufbf2\354\ufbf2" +
    "\373\ufbf2\001\002\000\004\006\046\001\002\000\042\006" +
    "\uff27\117\047\315\uff27\316\uff27\317\uff27\320\uff27\321\uff27" +
    "\322\uff27\323\uff27\324\uff27\325\uff27\326\uff27\327\uff27\330" +
    "\uff27\331\uff27\347\050\001\002\000\042\006\uff28\066\uff28" +
    "\315\uff28\316\uff28\317\uff28\320\uff28\321\uff28\322\uff28\323" +
    "\uff28\324\uff28\325\uff28\326\uff28\327\uff28\330\uff28\331\uff28" +
    "\375\uff28\001\002\000\010\027\uffd6\030\122\233\uffd6\001" +
    "\002\000\036\006\067\315\062\316\053\317\055\320\071" +
    "\321\063\322\057\323\066\324\054\325\060\326\064\327" +
    "\056\330\070\331\061\001\002\000\076\021\ufeaa\027\ufeaa" +
    "\030\ufeaa\035\ufeaa\060\ufeaa\066\ufeaa\076\ufeaa\100\ufeaa\116" +
    "\ufeaa\117\ufeaa\120\ufeaa\136\ufeaa\166\ufeaa\172\ufeaa\201\ufeaa" +
    "\204\ufeaa\231\ufeaa\233\ufeaa\234\ufeaa\241\ufeaa\274\ufeaa\275" +
    "\ufeaa\300\ufeaa\301\ufeaa\303\ufeaa\304\ufeaa\312\ufeaa\344\ufeaa" +
    "\345\ufeaa\346\ufeaa\001\002\000\100\021\ufe94\027\ufe94\030" +
    "\ufe94\034\072\035\ufe94\060\ufe94\066\ufe94\076\ufe94\100\ufe94" +
    "\116\ufe94\117\ufe94\120\ufe94\136\ufe94\166\ufe94\172\ufe94\201" +
    "\ufe94\204\ufe94\231\ufe94\233\ufe94\234\ufe94\241\ufe94\274\ufe94" +
    "\275\ufe94\300\ufe94\301\ufe94\303\ufe94\304\ufe94\312\ufe94\344" +
    "\ufe94\345\ufe94\346\ufe94\001\002\000\100\021\ufe94\027\ufe94" +
    "\030\ufe94\034\072\035\ufe94\060\ufe94\066\ufe94\076\ufe94\100" +
    "\ufe94\116\ufe94\117\ufe94\120\ufe94\136\ufe94\166\ufe94\172\ufe94" +
    "\201\ufe94\204\ufe94\231\ufe94\233\ufe94\234\ufe94\241\ufe94\274" +
    "\ufe94\275\ufe94\300\ufe94\301\ufe94\303\ufe94\304\ufe94\312\ufe94" +
    "\344\ufe94\345\ufe94\346\ufe94\001\002\000\100\021\ufe94\027" +
    "\ufe94\030\ufe94\034\072\035\ufe94\060\ufe94\066\ufe94\076\ufe94" +
    "\100\ufe94\116\ufe94\117\ufe94\120\ufe94\136\ufe94\166\ufe94\172" +
    "\ufe94\201\ufe94\204\ufe94\231\ufe94\233\ufe94\234\ufe94\241\ufe94" +
    "\274\ufe94\275\ufe94\300\ufe94\301\ufe94\303\ufe94\304\ufe94\312" +
    "\ufe94\344\ufe94\345\ufe94\346\ufe94\001\002\000\100\021\ufe94" +
    "\027\ufe94\030\ufe94\034\072\035\ufe94\060\ufe94\066\ufe94\076" +
    "\ufe94\100\ufe94\116\ufe94\117\ufe94\120\ufe94\136\ufe94\166\ufe94" +
    "\172\ufe94\201\ufe94\204\ufe94\231\ufe94\233\ufe94\234\ufe94\241" +
    "\ufe94\274\ufe94\275\ufe94\300\ufe94\301\ufe94\303\ufe94\304\ufe94" +
    "\312\ufe94\344\ufe94\345\ufe94\346\ufe94\001\002\000\100\021" +
    "\ufe94\027\ufe94\030\ufe94\034\072\035\ufe94\060\ufe94\066\ufe94" +
    "\076\ufe94\100\ufe94\116\ufe94\117\ufe94\120\ufe94\136\ufe94\166" +
    "\ufe94\172\ufe94\201\ufe94\204\ufe94\231\ufe94\233\ufe94\234\ufe94" +
    "\241\ufe94\274\ufe94\275\ufe94\300\ufe94\301\ufe94\303\ufe94\304" +
    "\ufe94\312\ufe94\344\ufe94\345\ufe94\346\ufe94\001\002\000\100" +
    "\021\ufe94\027\ufe94\030\ufe94\034\072\035\ufe94\060\ufe94\066" +
    "\ufe94\076\ufe94\100\ufe94\116\ufe94\117\ufe94\120\ufe94\136\ufe94" +
    "\166\ufe94\172\ufe94\201\ufe94\204\ufe94\231\ufe94\233\ufe94\234" +
    "\ufe94\241\ufe94\274\ufe94\275\ufe94\300\ufe94\301\ufe94\303\ufe94" +
    "\304\ufe94\312\ufe94\344\ufe94\345\ufe94\346\ufe94\001\002\000" +
    "\100\021\ufe94\027\ufe94\030\ufe94\034\072\035\ufe94\060\ufe94" +
    "\066\ufe94\076\ufe94\100\ufe94\116\ufe94\117\ufe94\120\ufe94\136" +
    "\ufe94\166\ufe94\172\ufe94\201\ufe94\204\ufe94\231\ufe94\233\ufe94" +
    "\234\ufe94\241\ufe94\274\ufe94\275\ufe94\300\ufe94\301\ufe94\303" +
    "\ufe94\304\ufe94\312\ufe94\344\ufe94\345\ufe94\346\ufe94\001\002" +
    "\000\100\021\ufe94\027\ufe94\030\ufe94\034\072\035\ufe94\060" +
    "\ufe94\066\ufe94\076\ufe94\100\ufe94\116\ufe94\117\ufe94\120\ufe94" +
    "\136\ufe94\166\ufe94\172\ufe94\201\ufe94\204\ufe94\231\ufe94\233" +
    "\ufe94\234\ufe94\241\ufe94\274\ufe94\275\ufe94\300\ufe94\301\ufe94" +
    "\303\ufe94\304\ufe94\312\ufe94\344\ufe94\345\ufe94\346\ufe94\001" +
    "\002\000\100\021\ufe94\027\ufe94\030\ufe94\034\072\035\ufe94" +
    "\060\ufe94\066\ufe94\076\ufe94\100\ufe94\116\ufe94\117\ufe94\120" +
    "\ufe94\136\ufe94\166\ufe94\172\ufe94\201\ufe94\204\ufe94\231\ufe94" +
    "\233\ufe94\234\ufe94\241\ufe94\274\ufe94\275\ufe94\300\ufe94\301" +
    "\ufe94\303\ufe94\304\ufe94\312\ufe94\344\ufe94\345\ufe94\346\ufe94" +
    "\001\002\000\100\021\ufe94\027\ufe94\030\ufe94\034\072\035" +
    "\ufe94\060\ufe94\066\ufe94\076\ufe94\100\ufe94\116\ufe94\117\ufe94" +
    "\120\ufe94\136\ufe94\166\ufe94\172\ufe94\201\ufe94\204\ufe94\231" +
    "\ufe94\233\ufe94\234\ufe94\241\ufe94\274\ufe94\275\ufe94\300\ufe94" +
    "\301\ufe94\303\ufe94\304\ufe94\312\ufe94\344\ufe94\345\ufe94\346" +
    "\ufe94\001\002\000\012\021\124\027\uffd6\030\122\233\uffd6" +
    "\001\002\000\100\021\ufe94\027\ufe94\030\ufe94\034\072\035" +
    "\ufe94\060\ufe94\066\ufe94\076\ufe94\100\ufe94\116\ufe94\117\ufe94" +
    "\120\ufe94\136\ufe94\166\ufe94\172\ufe94\201\ufe94\204\ufe94\231" +
    "\ufe94\233\ufe94\234\ufe94\241\ufe94\274\ufe94\275\ufe94\300\ufe94" +
    "\301\ufe94\303\ufe94\304\ufe94\312\ufe94\344\ufe94\345\ufe94\346" +
    "\ufe94\001\002\000\102\021\ufea4\027\ufea4\030\ufea4\031\102" +
    "\034\103\035\ufea4\060\ufea4\066\ufea4\076\ufea4\100\ufea4\116" +
    "\ufea4\117\ufea4\120\ufea4\136\ufea4\166\ufea4\172\ufea4\201\ufea4" +
    "\204\ufea4\231\ufea4\233\ufea4\234\ufea4\241\ufea4\274\ufea4\275" +
    "\ufea4\300\ufea4\301\ufea4\303\ufea4\304\ufea4\312\ufea4\344\ufea4" +
    "\345\ufea4\346\ufea4\001\002\000\100\021\ufe94\027\ufe94\030" +
    "\ufe94\034\072\035\ufe94\060\ufe94\066\ufe94\076\ufe94\100\ufe94" +
    "\116\ufe94\117\ufe94\120\ufe94\136\ufe94\166\ufe94\172\ufe94\201" +
    "\ufe94\204\ufe94\231\ufe94\233\ufe94\234\ufe94\241\ufe94\274\ufe94" +
    "\275\ufe94\300\ufe94\301\ufe94\303\ufe94\304\ufe94\312\ufe94\344" +
    "\ufe94\345\ufe94\346\ufe94\001\002\000\100\021\ufe94\027\ufe94" +
    "\030\ufe94\034\072\035\ufe94\060\ufe94\066\ufe94\076\ufe94\100" +
    "\ufe94\116\ufe94\117\ufe94\120\ufe94\136\ufe94\166\ufe94\172\ufe94" +
    "\201\ufe94\204\ufe94\231\ufe94\233\ufe94\234\ufe94\241\ufe94\274" +
    "\ufe94\275\ufe94\300\ufe94\301\ufe94\303\ufe94\304\ufe94\312\ufe94" +
    "\344\ufe94\345\ufe94\346\ufe94\001\002\000\004\115\074\001" +
    "\002\000\076\021\ufea0\027\ufea0\030\ufea0\035\ufea0\060\ufea0" +
    "\066\ufea0\076\ufea0\100\ufea0\116\ufea0\117\ufea0\120\ufea0\136" +
    "\ufea0\166\ufea0\172\ufea0\201\ufea0\204\ufea0\231\ufea0\233\ufea0" +
    "\234\ufea0\241\ufea0\274\ufea0\275\ufea0\300\ufea0\301\ufea0\303" +
    "\ufea0\304\ufea0\312\ufea0\344\ufea0\345\ufea0\346\ufea0\001\002" +
    "\000\006\030\075\035\076\001\002\000\004\115\077\001" +
    "\002\000\076\021\ufe96\027\ufe96\030\ufe96\035\ufe96\060\ufe96" +
    "\066\ufe96\076\ufe96\100\ufe96\116\ufe96\117\ufe96\120\ufe96\136" +
    "\ufe96\166\ufe96\172\ufe96\201\ufe96\204\ufe96\231\ufe96\233\ufe96" +
    "\234\ufe96\241\ufe96\274\ufe96\275\ufe96\300\ufe96\301\ufe96\303" +
    "\ufe96\304\ufe96\312\ufe96\344\ufe96\345\ufe96\346\ufe96\001\002" +
    "\000\004\035\100\001\002\000\076\021\ufe95\027\ufe95\030" +
    "\ufe95\035\ufe95\060\ufe95\066\ufe95\076\ufe95\100\ufe95\116\ufe95" +
    "\117\ufe95\120\ufe95\136\ufe95\166\ufe95\172\ufe95\201\ufe95\204" +
    "\ufe95\231\ufe95\233\ufe95\234\ufe95\241\ufe95\274\ufe95\275\ufe95" +
    "\300\ufe95\301\ufe95\303\ufe95\304\ufe95\312\ufe95\344\ufe95\345" +
    "\ufe95\346\ufe95\001\002\000\076\021\ufe98\027\ufe98\030\ufe98" +
    "\035\ufe98\060\ufe98\066\ufe98\076\ufe98\100\ufe98\116\ufe98\117" +
    "\ufe98\120\ufe98\136\ufe98\166\ufe98\172\ufe98\201\ufe98\204\ufe98" +
    "\231\ufe98\233\ufe98\234\ufe98\241\ufe98\274\ufe98\275\ufe98\300" +
    "\ufe98\301\ufe98\303\ufe98\304\ufe98\312\ufe98\344\ufe98\345\ufe98" +
    "\346\ufe98\001\002\000\004\006\112\001\002\000\004\115" +
    "\105\001\002\000\076\021\ufeab\027\ufeab\030\ufeab\035\ufeab" +
    "\060\ufeab\066\ufeab\076\ufeab\100\ufeab\116\ufeab\117\ufeab\120" +
    "\ufeab\136\ufeab\166\ufeab\172\ufeab\201\ufeab\204\ufeab\231\ufeab" +
    "\233\ufeab\234\ufeab\241\ufeab\274\ufeab\275\ufeab\300\ufeab\301" +
    "\ufeab\303\ufeab\304\ufeab\312\ufeab\344\ufeab\345\ufeab\346\ufeab" +
    "\001\002\000\006\030\106\035\107\001\002\000\004\115" +
    "\110\001\002\000\076\021\ufea8\027\ufea8\030\ufea8\035\ufea8" +
    "\060\ufea8\066\ufea8\076\ufea8\100\ufea8\116\ufea8\117\ufea8\120" +
    "\ufea8\136\ufea8\166\ufea8\172\ufea8\201\ufea8\204\ufea8\231\ufea8" +
    "\233\ufea8\234\ufea8\241\ufea8\274\ufea8\275\ufea8\300\ufea8\301" +
    "\ufea8\303\ufea8\304\ufea8\312\ufea8\344\ufea8\345\ufea8\346\ufea8" +
    "\001\002\000\004\035\111\001\002\000\076\021\ufea6\027" +
    "\ufea6\030\ufea6\035\ufea6\060\ufea6\066\ufea6\076\ufea6\100\ufea6" +
    "\116\ufea6\117\ufea6\120\ufea6\136\ufea6\166\ufea6\172\ufea6\201" +
    "\ufea6\204\ufea6\231\ufea6\233\ufea6\234\ufea6\241\ufea6\274\ufea6" +
    "\275\ufea6\300\ufea6\301\ufea6\303\ufea6\304\ufea6\312\ufea6\344" +
    "\ufea6\345\ufea6\346\ufea6\001\002\000\100\021\ufea7\027\ufea7" +
    "\030\ufea7\034\113\035\ufea7\060\ufea7\066\ufea7\076\ufea7\100" +
    "\ufea7\116\ufea7\117\ufea7\120\ufea7\136\ufea7\166\ufea7\172\ufea7" +
    "\201\ufea7\204\ufea7\231\ufea7\233\ufea7\234\ufea7\241\ufea7\274" +
    "\ufea7\275\ufea7\300\ufea7\301\ufea7\303\ufea7\304\ufea7\312\ufea7" +
    "\344\ufea7\345\ufea7\346\ufea7\001\002\000\004\115\114\001" +
    "\002\000\006\030\115\035\116\001\002\000\004\115\117" +
    "\001\002\000\076\021\ufea9\027\ufea9\030\ufea9\035\ufea9\060" +
    "\ufea9\066\ufea9\076\ufea9\100\ufea9\116\ufea9\117\ufea9\120\ufea9" +
    "\136\ufea9\166\ufea9\172\ufea9\201\ufea9\204\ufea9\231\ufea9\233" +
    "\ufea9\234\ufea9\241\ufea9\274\ufea9\275\ufea9\300\ufea9\301\ufea9" +
    "\303\ufea9\304\ufea9\312\ufea9\344\ufea9\345\ufea9\346\ufea9\001" +
    "\002\000\004\035\120\001\002\000\076\021\ufea5\027\ufea5" +
    "\030\ufea5\035\ufea5\060\ufea5\066\ufea5\076\ufea5\100\ufea5\116" +
    "\ufea5\117\ufea5\120\ufea5\136\ufea5\166\ufea5\172\ufea5\201\ufea5" +
    "\204\ufea5\231\ufea5\233\ufea5\234\ufea5\241\ufea5\274\ufea5\275" +
    "\ufea5\300\ufea5\301\ufea5\303\ufea5\304\ufea5\312\ufea5\344\ufea5" +
    "\345\ufea5\346\ufea5\001\002\000\076\021\ufe9d\027\ufe9d\030" +
    "\ufe9d\035\ufe9d\060\ufe9d\066\ufe9d\076\ufe9d\100\ufe9d\116\ufe9d" +
    "\117\ufe9d\120\ufe9d\136\ufe9d\166\ufe9d\172\ufe9d\201\ufe9d\204" +
    "\ufe9d\231\ufe9d\233\ufe9d\234\ufe9d\241\ufe9d\274\ufe9d\275\ufe9d" +
    "\300\ufe9d\301\ufe9d\303\ufe9d\304\ufe9d\312\ufe9d\344\ufe9d\345" +
    "\ufe9d\346\ufe9d\001\002\000\004\043\141\001\002\000\006" +
    "\027\135\233\133\001\002\000\012\007\127\046\130\076" +
    "\125\115\131\001\002\000\010\027\uffd2\030\uffd2\233\uffd2" +
    "\001\002\000\010\027\uffd6\030\122\233\uffd6\001\002\000" +
    "\010\027\uffd3\030\uffd3\233\uffd3\001\002\000\010\027\uffd4" +
    "\030\uffd4\233\uffd4\001\002\000\010\027\uffd5\030\uffd5\233" +
    "\uffd5\001\002\000\006\027\135\233\133\001\002\000\072" +
    "\002\ufbee\003\ufbee\005\ufbee\006\ufbee\027\ufbee\035\ufbee\043" +
    "\ufbee\047\ufbee\055\ufbee\060\ufbee\064\ufbee\065\ufbee\066\ufbee" +
    "\070\ufbee\102\ufbee\103\ufbee\131\ufbee\136\ufbee\161\ufbee\173" +
    "\ufbee\175\ufbee\233\ufbee\247\ufbee\310\ufbee\350\ufbee\353\ufbee" +
    "\356\ufbee\375\ufbee\001\002\000\050\002\uffde\003\027\005" +
    "\010\006\ufccf\043\ufccf\047\024\055\013\064\012\065\007" +
    "\066\015\070\020\102\004\103\035\131\031\161\032\173" +
    "\006\175\017\247\022\350\034\001\002\000\072\002\ufbef" +
    "\003\ufbef\005\ufbef\006\ufbef\027\ufbef\035\ufbef\043\ufbef\047" +
    "\ufbef\055\ufbef\060\ufbef\064\ufbef\065\ufbef\066\ufbef\070\ufbef" +
    "\102\ufbef\103\ufbef\131\ufbef\136\ufbef\161\ufbef\173\ufbef\175" +
    "\ufbef\233\ufbef\247\ufbef\310\ufbef\350\ufbef\353\ufbef\356\ufbef" +
    "\375\ufbef\001\002\000\004\002\uffdf\001\002\000\050\002" +
    "\uffdc\003\027\005\010\006\ufccf\043\ufccf\047\024\055\013" +
    "\064\012\065\007\066\015\070\020\102\004\103\035\131" +
    "\031\161\032\173\006\175\017\247\022\350\034\001\002" +
    "\000\004\002\uffdd\001\002\000\004\006\142\001\002\000" +
    "\042\006\uff27\117\047\315\uff27\316\uff27\317\uff27\320\uff27" +
    "\321\uff27\322\uff27\323\uff27\324\uff27\325\uff27\326\uff27\327" +
    "\uff27\330\uff27\331\uff27\347\143\001\002\000\010\027\uffd6" +
    "\030\122\233\uffd6\001\002\000\036\006\067\315\062\316" +
    "\053\317\055\320\071\321\063\322\057\323\066\324\054" +
    "\325\060\326\064\327\056\330\070\331\061\001\002\000" +
    "\012\021\147\027\uffd6\030\122\233\uffd6\001\002\000\006" +
    "\027\uffd8\233\uffd8\001\002\000\012\007\127\046\130\076" +
    "\125\115\131\001\002\000\010\027\uffd6\030\122\233\uffd6" +
    "\001\002\000\006\027\uffd9\233\uffd9\001\002\000\006\027" +
    "\uffd7\233\uffd7\001\002\000\076\021\ufe9a\027\ufe9a\030\ufe9a" +
    "\035\ufe9a\060\ufe9a\066\ufe9a\076\ufe9a\100\ufe9a\116\ufe9a\117" +
    "\ufe9a\120\ufe9a\136\ufe9a\166\ufe9a\172\ufe9a\201\ufe9a\204\ufe9a" +
    "\231\ufe9a\233\ufe9a\234\ufe9a\241\ufe9a\274\ufe9a\275\ufe9a\300" +
    "\ufe9a\301\ufe9a\303\ufe9a\304\ufe9a\312\ufe9a\344\ufe9a\345\ufe9a" +
    "\346\ufe9a\001\002\000\076\021\ufe9f\027\ufe9f\030\ufe9f\035" +
    "\ufe9f\060\ufe9f\066\ufe9f\076\ufe9f\100\ufe9f\116\ufe9f\117\ufe9f" +
    "\120\ufe9f\136\ufe9f\166\ufe9f\172\ufe9f\201\ufe9f\204\ufe9f\231" +
    "\ufe9f\233\ufe9f\234\ufe9f\241\ufe9f\274\ufe9f\275\ufe9f\300\ufe9f" +
    "\301\ufe9f\303\ufe9f\304\ufe9f\312\ufe9f\344\ufe9f\345\ufe9f\346" +
    "\ufe9f\001\002\000\076\021\ufea3\027\ufea3\030\ufea3\035\ufea3" +
    "\060\ufea3\066\ufea3\076\ufea3\100\ufea3\116\ufea3\117\ufea3\120" +
    "\ufea3\136\ufea3\166\ufea3\172\ufea3\201\ufea3\204\ufea3\231\ufea3" +
    "\233\ufea3\234\ufea3\241\ufea3\274\ufea3\275\ufea3\300\ufea3\301" +
    "\ufea3\303\ufea3\304\ufea3\312\ufea3\344\ufea3\345\ufea3\346\ufea3" +
    "\001\002\000\076\021\ufe97\027\ufe97\030\ufe97\035\ufe97\060" +
    "\ufe97\066\ufe97\076\ufe97\100\ufe97\116\ufe97\117\ufe97\120\ufe97" +
    "\136\ufe97\166\ufe97\172\ufe97\201\ufe97\204\ufe97\231\ufe97\233" +
    "\ufe97\234\ufe97\241\ufe97\274\ufe97\275\ufe97\300\ufe97\301\ufe97" +
    "\303\ufe97\304\ufe97\312\ufe97\344\ufe97\345\ufe97\346\ufe97\001" +
    "\002\000\076\021\ufe9b\027\ufe9b\030\ufe9b\035\ufe9b\060\ufe9b" +
    "\066\ufe9b\076\ufe9b\100\ufe9b\116\ufe9b\117\ufe9b\120\ufe9b\136" +
    "\ufe9b\166\ufe9b\172\ufe9b\201\ufe9b\204\ufe9b\231\ufe9b\233\ufe9b" +
    "\234\ufe9b\241\ufe9b\274\ufe9b\275\ufe9b\300\ufe9b\301\ufe9b\303" +
    "\ufe9b\304\ufe9b\312\ufe9b\344\ufe9b\345\ufe9b\346\ufe9b\001\002" +
    "\000\076\021\ufe9e\027\ufe9e\030\ufe9e\035\ufe9e\060\ufe9e\066" +
    "\ufe9e\076\ufe9e\100\ufe9e\116\ufe9e\117\ufe9e\120\ufe9e\136\ufe9e" +
    "\166\ufe9e\172\ufe9e\201\ufe9e\204\ufe9e\231\ufe9e\233\ufe9e\234" +
    "\ufe9e\241\ufe9e\274\ufe9e\275\ufe9e\300\ufe9e\301\ufe9e\303\ufe9e" +
    "\304\ufe9e\312\ufe9e\344\ufe9e\345\ufe9e\346\ufe9e\001\002\000" +
    "\076\021\ufe99\027\ufe99\030\ufe99\035\ufe99\060\ufe99\066\ufe99" +
    "\076\ufe99\100\ufe99\116\ufe99\117\ufe99\120\ufe99\136\ufe99\166" +
    "\ufe99\172\ufe99\201\ufe99\204\ufe99\231\ufe99\233\ufe99\234\ufe99" +
    "\241\ufe99\274\ufe99\275\ufe99\300\ufe99\301\ufe99\303\ufe99\304" +
    "\ufe99\312\ufe99\344\ufe99\345\ufe99\346\ufe99\001\002\000\076" +
    "\021\ufea1\027\ufea1\030\ufea1\035\ufea1\060\ufea1\066\ufea1\076" +
    "\ufea1\100\ufea1\116\ufea1\117\ufea1\120\ufea1\136\ufea1\166\ufea1" +
    "\172\ufea1\201\ufea1\204\ufea1\231\ufea1\233\ufea1\234\ufea1\241" +
    "\ufea1\274\ufea1\275\ufea1\300\ufea1\301\ufea1\303\ufea1\304\ufea1" +
    "\312\ufea1\344\ufea1\345\ufea1\346\ufea1\001\002\000\076\021" +
    "\ufe9c\027\ufe9c\030\ufe9c\035\ufe9c\060\ufe9c\066\ufe9c\076\ufe9c" +
    "\100\ufe9c\116\ufe9c\117\ufe9c\120\ufe9c\136\ufe9c\166\ufe9c\172" +
    "\ufe9c\201\ufe9c\204\ufe9c\231\ufe9c\233\ufe9c\234\ufe9c\241\ufe9c" +
    "\274\ufe9c\275\ufe9c\300\ufe9c\301\ufe9c\303\ufe9c\304\ufe9c\312" +
    "\ufe9c\344\ufe9c\345\ufe9c\346\ufe9c\001\002\000\076\021\ufea2" +
    "\027\ufea2\030\ufea2\035\ufea2\060\ufea2\066\ufea2\076\ufea2\100" +
    "\ufea2\116\ufea2\117\ufea2\120\ufea2\136\ufea2\166\ufea2\172\ufea2" +
    "\201\ufea2\204\ufea2\231\ufea2\233\ufea2\234\ufea2\241\ufea2\274" +
    "\ufea2\275\ufea2\300\ufea2\301\ufea2\303\ufea2\304\ufea2\312\ufea2" +
    "\344\ufea2\345\ufea2\346\ufea2\001\002\000\006\027\135\233" +
    "\133\001\002\000\050\002\uffdb\003\027\005\010\006\ufccf" +
    "\043\ufccf\047\024\055\013\064\012\065\007\066\015\070" +
    "\020\102\004\103\035\131\031\161\032\173\006\175\017" +
    "\247\022\350\034\001\002\000\004\002\uffda\001\002\000" +
    "\004\006\171\001\002\000\344\006\ufbf1\007\ufbf1\010\ufbf1" +
    "\011\ufbf1\012\ufbf1\013\ufbf1\014\ufbf1\015\ufbf1\016\ufbf1\017" +
    "\ufbf1\020\ufbf1\021\ufbf1\023\ufbf1\027\ufbf1\030\ufbf1\031\172" +
    "\034\ufbf1\035\ufbf1\041\ufbf1\043\ufbf1\046\ufbf1\047\ufbf1\060" +
    "\ufbf1\062\ufbf1\070\ufbf1\072\ufbf1\075\ufbf1\076\ufbf1\100\ufbf1" +
    "\101\ufbf1\102\ufbf1\103\ufbf1\115\ufbf1\116\ufbf1\117\ufbf1\120" +
    "\ufbf1\121\ufbf1\122\ufbf1\123\ufbf1\126\ufbf1\127\ufbf1\130\ufbf1" +
    "\131\ufbf1\132\ufbf1\134\ufbf1\136\ufbf1\140\ufbf1\141\ufbf1\142" +
    "\ufbf1\143\ufbf1\144\ufbf1\145\ufbf1\146\ufbf1\150\ufbf1\151\ufbf1" +
    "\152\ufbf1\153\ufbf1\154\ufbf1\155\ufbf1\161\ufbf1\162\ufbf1\164" +
    "\ufbf1\166\ufbf1\170\ufbf1\171\ufbf1\172\ufbf1\173\ufbf1\174\ufbf1" +
    "\201\ufbf1\231\ufbf1\233\ufbf1\234\ufbf1\235\ufbf1\236\ufbf1\240" +
    "\ufbf1\241\ufbf1\243\ufbf1\244\ufbf1\246\ufbf1\247\ufbf1\255\ufbf1" +
    "\256\ufbf1\257\ufbf1\260\ufbf1\261\ufbf1\262\ufbf1\271\ufbf1\272" +
    "\ufbf1\274\ufbf1\275\ufbf1\277\ufbf1\303\ufbf1\304\ufbf1\310\ufbf1" +
    "\312\ufbf1\315\ufbf1\316\ufbf1\317\ufbf1\320\ufbf1\321\ufbf1\322" +
    "\ufbf1\323\ufbf1\324\ufbf1\325\ufbf1\326\ufbf1\327\ufbf1\330\ufbf1" +
    "\331\ufbf1\347\ufbf1\351\ufbf1\352\ufbf1\354\ufbf1\373\ufbf1\001" +
    "\002\000\004\006\173\001\002\000\342\006\ufbf0\007\ufbf0" +
    "\010\ufbf0\011\ufbf0\012\ufbf0\013\ufbf0\014\ufbf0\015\ufbf0\016" +
    "\ufbf0\017\ufbf0\020\ufbf0\021\ufbf0\023\ufbf0\027\ufbf0\030\ufbf0" +
    "\034\ufbf0\035\ufbf0\041\ufbf0\043\ufbf0\046\ufbf0\047\ufbf0\060" +
    "\ufbf0\062\ufbf0\070\ufbf0\072\ufbf0\075\ufbf0\076\ufbf0\100\ufbf0" +
    "\101\ufbf0\102\ufbf0\103\ufbf0\115\ufbf0\116\ufbf0\117\ufbf0\120" +
    "\ufbf0\121\ufbf0\122\ufbf0\123\ufbf0\126\ufbf0\127\ufbf0\130\ufbf0" +
    "\131\ufbf0\132\ufbf0\134\ufbf0\136\ufbf0\140\ufbf0\141\ufbf0\142" +
    "\ufbf0\143\ufbf0\144\ufbf0\145\ufbf0\146\ufbf0\150\ufbf0\151\ufbf0" +
    "\152\ufbf0\153\ufbf0\154\ufbf0\155\ufbf0\161\ufbf0\162\ufbf0\164" +
    "\ufbf0\166\ufbf0\170\ufbf0\171\ufbf0\172\ufbf0\173\ufbf0\174\ufbf0" +
    "\201\ufbf0\231\ufbf0\233\ufbf0\234\ufbf0\235\ufbf0\236\ufbf0\240" +
    "\ufbf0\241\ufbf0\243\ufbf0\244\ufbf0\246\ufbf0\247\ufbf0\255\ufbf0" +
    "\256\ufbf0\257\ufbf0\260\ufbf0\261\ufbf0\262\ufbf0\271\ufbf0\272" +
    "\ufbf0\274\ufbf0\275\ufbf0\277\ufbf0\303\ufbf0\304\ufbf0\310\ufbf0" +
    "\312\ufbf0\315\ufbf0\316\ufbf0\317\ufbf0\320\ufbf0\321\ufbf0\322" +
    "\ufbf0\323\ufbf0\324\ufbf0\325\ufbf0\326\ufbf0\327\ufbf0\330\ufbf0" +
    "\331\ufbf0\347\ufbf0\351\ufbf0\352\ufbf0\354\ufbf0\373\ufbf0\001" +
    "\002\000\004\347\177\001\002\000\004\347\uffeb\001\002" +
    "\000\004\347\uffea\001\002\000\034\136\uffb5\160\215\352" +
    "\214\357\212\360\220\361\202\362\204\363\217\364\206" +
    "\365\216\366\203\367\200\370\201\001\002\000\006\136" +
    "\uffb5\370\201\001\002\000\004\136\uffb6\001\002\000\014" +
    "\136\uffb5\365\216\366\203\367\200\370\201\001\002\000" +
    "\006\136\uffb5\370\201\001\002\000\014\136\uffb5\365\216" +
    "\366\203\367\200\370\201\001\002\000\004\136\uffb7\001" +
    "\002\000\014\136\uffb5\365\216\366\203\367\200\370\201" +
    "\001\002\000\004\136\uffbb\001\002\000\004\136\uffc0\001" +
    "\002\000\004\136\uffc3\001\002\000\030\136\uffb5\352\214" +
    "\360\220\361\202\362\204\363\217\364\206\365\216\366" +
    "\203\367\200\370\201\001\002\000\004\136\227\001\002" +
    "\000\024\136\uffb5\361\202\362\204\363\217\364\206\365" +
    "\216\366\203\367\200\370\201\001\002\000\030\136\uffb5" +
    "\352\214\360\220\361\202\362\204\363\217\364\206\365" +
    "\216\366\203\367\200\370\201\001\002\000\006\136\uffb5" +
    "\370\201\001\002\000\014\136\uffb5\365\216\366\203\367" +
    "\200\370\201\001\002\000\024\136\uffb5\361\202\362\204" +
    "\363\217\364\206\365\216\366\203\367\200\370\201\001" +
    "\002\000\004\136\uffc2\001\002\000\004\136\uffbd\001\002" +
    "\000\004\136\uffba\001\002\000\004\136\uffc4\001\002\000" +
    "\004\136\uffc1\001\002\000\006\027\135\233\133\001\002" +
    "\000\004\173\231\001\002\000\012\027\uffc8\136\u0258\233" +
    "\uffc8\353\u0259\001\002\000\060\006\264\007\242\011\274" +
    "\012\243\034\253\043\271\046\237\071\257\104\262\105" +
    "\272\106\267\107\265\110\241\111\240\112\260\115\273" +
    "\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103" +
    "\232\001\002\000\004\034\u0251\001\002\000\202\006\ufc9f" +
    "\007\ufc9f\010\ufc9f\011\ufc9f\012\ufc9f\013\ufc9f\014\ufc9f\015" +
    "\ufc9f\016\ufc9f\017\ufc9f\020\ufc9f\021\ufc9f\023\ufc9f\027\ufc9f" +
    "\030\ufc9f\034\ufc9f\035\ufc9f\062\ufc9f\070\ufc9f\076\ufc9f\100" +
    "\ufc9f\101\ufc9f\116\ufc9f\117\ufc9f\120\ufc9f\121\ufc9f\122\ufc9f" +
    "\123\ufc9f\126\ufc9f\127\ufc9f\130\ufc9f\131\ufc9f\134\ufc9f\142" +
    "\ufc9f\143\ufc9f\144\ufc9f\145\ufc9f\146\ufc9f\150\ufc9f\151\ufc9f" +
    "\152\ufc9f\153\ufc9f\154\ufc9f\155\ufc9f\161\ufc9f\162\ufc9f\164" +
    "\ufc9f\166\ufc9f\170\ufc9f\171\ufc9f\172\ufc9f\173\ufc9f\174\ufc9f" +
    "\201\ufc9f\231\ufc9f\233\ufc9f\234\ufc9f\241\ufc9f\274\ufc9f\275" +
    "\ufc9f\277\ufc9f\303\ufc9f\304\ufc9f\312\ufc9f\001\002\000\034" +
    "\027\ufd9c\035\ufd9c\060\ufd9c\070\ufd9c\131\ufd9c\136\ufd9c\161" +
    "\ufd9c\173\ufd9c\233\ufd9c\310\ufd9c\353\ufd9c\356\ufd9c\375\ufd9c" +
    "\001\002\000\034\027\ufd9f\035\ufd9f\060\ufd9f\070\ufd9f\131" +
    "\ufd9f\136\ufd9f\161\ufd9f\173\ufd9f\233\ufd9f\310\ufd9f\353\ufd9f" +
    "\356\ufd9f\375\ufd9f\001\002\000\004\034\u024a\001\002\000" +
    "\204\006\ufc8c\007\ufc8c\010\ufc8c\011\ufc8c\012\ufc8c\013\ufc8c" +
    "\014\ufc8c\015\ufc8c\016\ufc8c\017\ufc8c\020\ufc8c\021\ufc8c\023" +
    "\ufc8c\027\ufc8c\030\ufc8c\034\ufc8c\035\ufc8c\062\ufc8c\070\ufc8c" +
    "\076\ufc8c\100\ufc8c\101\ufc8c\116\ufc8c\117\ufc8c\120\ufc8c\121" +
    "\ufc8c\122\ufc8c\123\ufc8c\126\ufc8c\127\ufc8c\130\ufc8c\131\ufc8c" +
    "\134\ufc8c\142\ufc8c\143\ufc8c\144\ufc8c\145\ufc8c\146\ufc8c\150" +
    "\ufc8c\151\ufc8c\152\ufc8c\153\ufc8c\154\ufc8c\155\ufc8c\161\ufc8c" +
    "\162\ufc8c\164\ufc8c\166\ufc8c\170\ufc8c\171\ufc8c\172\ufc8c\173" +
    "\ufc8c\174\ufc8c\201\ufc8c\231\ufc8c\233\ufc8c\234\ufc8c\240\ufc8c" +
    "\241\ufc8c\274\ufc8c\275\ufc8c\277\ufc8c\303\ufc8c\304\ufc8c\312" +
    "\ufc8c\001\002\000\054\006\264\007\242\011\274\012\243" +
    "\034\253\043\271\046\237\071\257\104\262\105\272\106" +
    "\267\107\265\110\241\115\273\116\270\376\254\377\256" +
    "\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\004\034" +
    "\u0246\001\002\000\204\006\ufc8a\007\ufc8a\010\ufc8a\011\ufc8a" +
    "\012\ufc8a\013\ufc8a\014\ufc8a\015\ufc8a\016\ufc8a\017\ufc8a\020" +
    "\ufc8a\021\ufc8a\023\ufc8a\027\ufc8a\030\ufc8a\034\ufc8a\035\ufc8a" +
    "\062\ufc8a\070\ufc8a\076\ufc8a\100\ufc8a\101\ufc8a\116\ufc8a\117" +
    "\ufc8a\120\ufc8a\121\ufc8a\122\ufc8a\123\ufc8a\126\ufc8a\127\ufc8a" +
    "\130\ufc8a\131\ufc8a\134\ufc8a\142\ufc8a\143\ufc8a\144\ufc8a\145" +
    "\ufc8a\146\ufc8a\150\ufc8a\151\ufc8a\152\ufc8a\153\ufc8a\154\ufc8a" +
    "\155\ufc8a\161\ufc8a\162\ufc8a\164\ufc8a\166\ufc8a\170\ufc8a\171" +
    "\ufc8a\172\ufc8a\173\ufc8a\174\ufc8a\201\ufc8a\231\ufc8a\233\ufc8a" +
    "\234\ufc8a\240\ufc8a\241\ufc8a\274\ufc8a\275\ufc8a\277\ufc8a\303" +
    "\ufc8a\304\ufc8a\312\ufc8a\001\002\000\024\027\ufdb4\030\u01eb" +
    "\101\ufdb4\134\ufdb4\154\ufdb4\162\ufdb4\164\ufdb4\174\ufdb4\233" +
    "\ufdb4\001\002\000\004\034\u0242\001\002\000\032\006\u023c" +
    "\007\u023b\027\ufdbc\030\ufdbc\101\ufdbc\117\u023a\134\ufdbc\154" +
    "\ufdbc\162\ufdbc\164\ufdbc\174\ufdbc\233\ufdbc\001\002\000\062" +
    "\006\ufc9e\007\ufc9e\010\ufc9e\011\ufc9e\012\ufc9e\013\ufc9e\014" +
    "\ufc9e\015\ufc9e\016\ufc9e\017\ufc9e\020\ufc9e\021\ufc9e\023\ufc9e" +
    "\027\ufc9e\030\ufc9e\034\u0232\101\ufc9e\117\ufc9e\134\ufc9e\154" +
    "\ufc9e\162\ufc9e\164\ufc9e\174\ufc9e\233\ufc9e\001\002\000\034" +
    "\027\ufd9a\035\ufd9a\060\ufd9a\070\ufd9a\131\ufd9a\136\ufd9a\161" +
    "\ufd9a\173\ufd9a\233\ufd9a\310\ufd9a\353\ufd9a\356\ufd9a\375\ufd9a" +
    "\001\002\000\202\006\ufca1\007\ufca1\010\ufca1\011\ufca1\012" +
    "\ufca1\013\ufca1\014\u021e\015\u0222\016\u021c\017\u0220\020\u021d" +
    "\021\u021f\023\u0221\027\ufca1\030\ufca1\034\ufca1\035\ufca1\062" +
    "\ufca1\070\ufca1\076\ufca1\100\ufca1\101\ufca1\116\ufca1\117\ufca1" +
    "\120\ufca1\121\ufca1\122\ufca1\123\ufca1\126\ufca1\127\ufca1\130" +
    "\ufca1\131\ufca1\134\ufca1\142\ufca1\143\ufca1\144\ufca1\145\ufca1" +
    "\146\ufca1\150\ufca1\151\ufca1\152\ufca1\153\ufca1\154\ufca1\155" +
    "\ufca1\161\ufca1\162\ufca1\164\ufca1\166\ufca1\170\ufca1\171\ufca1" +
    "\172\ufca1\173\ufca1\174\ufca1\201\ufca1\231\ufca1\233\ufca1\234" +
    "\ufca1\241\ufca1\274\ufca1\275\ufca1\277\ufca1\303\ufca1\304\ufca1" +
    "\312\ufca1\001\002\000\160\006\ufcae\007\ufcae\010\u0216\011" +
    "\u0215\027\ufcae\030\ufcae\034\ufcae\035\ufcae\062\ufcae\070\ufcae" +
    "\076\ufcae\100\ufcae\101\ufcae\116\ufcae\117\ufcae\120\ufcae\121" +
    "\ufcae\122\ufcae\123\ufcae\126\ufcae\127\ufcae\130\ufcae\131\ufcae" +
    "\134\ufcae\142\ufcae\143\ufcae\144\ufcae\145\ufcae\146\ufcae\150" +
    "\ufcae\151\ufcae\152\ufcae\153\ufcae\154\ufcae\155\ufcae\161\ufcae" +
    "\162\ufcae\164\ufcae\166\ufcae\170\ufcae\171\ufcae\172\ufcae\173" +
    "\ufcae\174\ufcae\201\ufcae\231\ufcae\233\ufcae\234\ufcae\241\ufcae" +
    "\274\ufcae\275\ufcae\277\ufcae\303\ufcae\304\ufcae\312\ufcae\001" +
    "\002\000\004\034\u0212\001\002\000\050\006\044\007\242" +
    "\011\274\034\253\043\271\046\237\104\262\105\272\106" +
    "\267\107\265\110\241\115\273\116\270\376\254\377\256" +
    "\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\004\034" +
    "\u020d\001\002\000\202\006\ufc9c\007\ufc9c\010\ufc9c\011\ufc9c" +
    "\012\ufc9c\013\ufc9c\014\ufc9c\015\ufc9c\016\ufc9c\017\ufc9c\020" +
    "\ufc9c\021\ufc9c\023\ufc9c\027\ufc9c\030\ufc9c\034\ufc9c\035\ufc9c" +
    "\062\ufc9c\070\ufc9c\076\ufc9c\100\ufc9c\101\ufc9c\116\ufc9c\117" +
    "\ufc9c\120\ufc9c\121\ufc9c\122\ufc9c\123\ufc9c\126\ufc9c\127\ufc9c" +
    "\130\ufc9c\131\ufc9c\134\ufc9c\142\ufc9c\143\ufc9c\144\ufc9c\145" +
    "\ufc9c\146\ufc9c\150\ufc9c\151\ufc9c\152\ufc9c\153\ufc9c\154\ufc9c" +
    "\155\ufc9c\161\ufc9c\162\ufc9c\164\ufc9c\166\ufc9c\170\ufc9c\171" +
    "\ufc9c\172\ufc9c\173\ufc9c\174\ufc9c\201\ufc9c\231\ufc9c\233\ufc9c" +
    "\234\ufc9c\241\ufc9c\274\ufc9c\275\ufc9c\277\ufc9c\303\ufc9c\304" +
    "\ufc9c\312\ufc9c\001\002\000\004\034\u0202\001\002\000\004" +
    "\034\u01fc\001\002\000\054\006\264\007\242\011\274\012" +
    "\243\034\253\043\271\046\237\071\257\104\262\105\272" +
    "\106\267\107\265\110\241\115\273\116\270\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\202" +
    "\006\ufc9d\007\ufc9d\010\ufc9d\011\ufc9d\012\ufc9d\013\ufc9d\014" +
    "\ufc9d\015\ufc9d\016\ufc9d\017\ufc9d\020\ufc9d\021\ufc9d\023\ufc9d" +
    "\027\ufc9d\030\ufc9d\034\ufc9d\035\ufc9d\062\ufc9d\070\ufc9d\076" +
    "\ufc9d\100\ufc9d\101\ufc9d\116\ufc9d\117\ufc9d\120\ufc9d\121\ufc9d" +
    "\122\ufc9d\123\ufc9d\126\ufc9d\127\ufc9d\130\ufc9d\131\ufc9d\134" +
    "\ufc9d\142\ufc9d\143\ufc9d\144\ufc9d\145\ufc9d\146\ufc9d\150\ufc9d" +
    "\151\ufc9d\152\ufc9d\153\ufc9d\154\ufc9d\155\ufc9d\161\ufc9d\162" +
    "\ufc9d\164\ufc9d\166\ufc9d\170\ufc9d\171\ufc9d\172\ufc9d\173\ufc9d" +
    "\174\ufc9d\201\ufc9d\231\ufc9d\233\ufc9d\234\ufc9d\241\ufc9d\274" +
    "\ufc9d\275\ufc9d\277\ufc9d\303\ufc9d\304\ufc9d\312\ufc9d\001\002" +
    "\000\004\034\u01f8\001\002\000\164\006\ufcaa\007\ufcaa\010" +
    "\ufcaa\011\ufcaa\012\u01f3\013\u01f2\027\ufcaa\030\ufcaa\034\ufcaa" +
    "\035\ufcaa\062\ufcaa\070\ufcaa\076\ufcaa\100\ufcaa\101\ufcaa\116" +
    "\ufcaa\117\ufcaa\120\ufcaa\121\ufcaa\122\ufcaa\123\ufcaa\126\ufcaa" +
    "\127\ufcaa\130\ufcaa\131\ufcaa\134\ufcaa\142\ufcaa\143\ufcaa\144" +
    "\ufcaa\145\ufcaa\146\ufcaa\150\ufcaa\151\ufcaa\152\ufcaa\153\ufcaa" +
    "\154\ufcaa\155\ufcaa\161\ufcaa\162\ufcaa\164\ufcaa\166\ufcaa\170" +
    "\ufcaa\171\ufcaa\172\ufcaa\173\ufcaa\174\ufcaa\201\ufcaa\231\ufcaa" +
    "\233\ufcaa\234\ufcaa\241\ufcaa\274\ufcaa\275\ufcaa\277\ufcaa\303" +
    "\ufcaa\304\ufcaa\312\ufcaa\001\002\000\064\006\ufbf2\007\ufbf2" +
    "\010\ufbf2\011\ufbf2\012\ufbf2\013\ufbf2\014\ufbf2\015\ufbf2\016" +
    "\ufbf2\017\ufbf2\020\ufbf2\021\ufbf2\023\ufbf2\027\ufbf2\030\ufbf2" +
    "\031\u01e7\034\ufbf2\101\ufbf2\117\ufbf2\134\ufbf2\154\ufbf2\162" +
    "\ufbf2\164\ufbf2\174\ufbf2\233\ufbf2\001\002\000\004\034\u01e4" +
    "\001\002\000\022\027\135\101\322\134\321\154\332\162" +
    "\336\164\323\174\325\233\133\001\002\000\004\034\311" +
    "\001\002\000\204\006\ufc8f\007\ufc8f\010\ufc8f\011\ufc8f\012" +
    "\ufc8f\013\ufc8f\014\ufc8f\015\ufc8f\016\ufc8f\017\ufc8f\020\ufc8f" +
    "\021\ufc8f\023\ufc8f\027\ufc8f\030\ufc8f\034\ufc8f\035\ufc8f\062" +
    "\ufc8f\070\ufc8f\076\ufc8f\100\ufc8f\101\ufc8f\116\ufc8f\117\ufc8f" +
    "\120\ufc8f\121\ufc8f\122\ufc8f\123\ufc8f\126\ufc8f\127\ufc8f\130" +
    "\ufc8f\131\ufc8f\134\ufc8f\142\ufc8f\143\ufc8f\144\ufc8f\145\ufc8f" +
    "\146\ufc8f\150\ufc8f\151\ufc8f\152\ufc8f\153\ufc8f\154\ufc8f\155" +
    "\ufc8f\161\ufc8f\162\ufc8f\164\ufc8f\166\ufc8f\170\ufc8f\171\ufc8f" +
    "\172\ufc8f\173\ufc8f\174\ufc8f\201\ufc8f\231\ufc8f\233\ufc8f\234" +
    "\ufc8f\240\ufc8f\241\ufc8f\274\ufc8f\275\ufc8f\277\ufc8f\303\ufc8f" +
    "\304\ufc8f\312\ufc8f\001\002\000\004\006\310\001\002\000" +
    "\004\034\277\001\002\000\204\006\ufc8e\007\ufc8e\010\ufc8e" +
    "\011\ufc8e\012\ufc8e\013\ufc8e\014\ufc8e\015\ufc8e\016\ufc8e\017" +
    "\ufc8e\020\ufc8e\021\ufc8e\023\ufc8e\027\ufc8e\030\ufc8e\034\ufc8e" +
    "\035\ufc8e\062\ufc8e\070\ufc8e\076\ufc8e\100\ufc8e\101\ufc8e\116" +
    "\ufc8e\117\ufc8e\120\ufc8e\121\ufc8e\122\ufc8e\123\ufc8e\126\ufc8e" +
    "\127\ufc8e\130\ufc8e\131\ufc8e\134\ufc8e\142\ufc8e\143\ufc8e\144" +
    "\ufc8e\145\ufc8e\146\ufc8e\150\ufc8e\151\ufc8e\152\ufc8e\153\ufc8e" +
    "\154\ufc8e\155\ufc8e\161\ufc8e\162\ufc8e\164\ufc8e\166\ufc8e\170" +
    "\ufc8e\171\ufc8e\172\ufc8e\173\ufc8e\174\ufc8e\201\ufc8e\231\ufc8e" +
    "\233\ufc8e\234\ufc8e\240\ufc8e\241\ufc8e\274\ufc8e\275\ufc8e\277" +
    "\ufc8e\303\ufc8e\304\ufc8e\312\ufc8e\001\002\000\006\046\275" +
    "\115\276\001\002\000\204\006\ufc8b\007\ufc8b\010\ufc8b\011" +
    "\ufc8b\012\ufc8b\013\ufc8b\014\ufc8b\015\ufc8b\016\ufc8b\017\ufc8b" +
    "\020\ufc8b\021\ufc8b\023\ufc8b\027\ufc8b\030\ufc8b\034\ufc8b\035" +
    "\ufc8b\062\ufc8b\070\ufc8b\076\ufc8b\100\ufc8b\101\ufc8b\116\ufc8b" +
    "\117\ufc8b\120\ufc8b\121\ufc8b\122\ufc8b\123\ufc8b\126\ufc8b\127" +
    "\ufc8b\130\ufc8b\131\ufc8b\134\ufc8b\142\ufc8b\143\ufc8b\144\ufc8b" +
    "\145\ufc8b\146\ufc8b\150\ufc8b\151\ufc8b\152\ufc8b\153\ufc8b\154" +
    "\ufc8b\155\ufc8b\161\ufc8b\162\ufc8b\164\ufc8b\166\ufc8b\170\ufc8b" +
    "\171\ufc8b\172\ufc8b\173\ufc8b\174\ufc8b\201\ufc8b\231\ufc8b\233" +
    "\ufc8b\234\ufc8b\240\ufc8b\241\ufc8b\274\ufc8b\275\ufc8b\277\ufc8b" +
    "\303\ufc8b\304\ufc8b\312\ufc8b\001\002\000\204\006\ufc8d\007" +
    "\ufc8d\010\ufc8d\011\ufc8d\012\ufc8d\013\ufc8d\014\ufc8d\015\ufc8d" +
    "\016\ufc8d\017\ufc8d\020\ufc8d\021\ufc8d\023\ufc8d\027\ufc8d\030" +
    "\ufc8d\034\ufc8d\035\ufc8d\062\ufc8d\070\ufc8d\076\ufc8d\100\ufc8d" +
    "\101\ufc8d\116\ufc8d\117\ufc8d\120\ufc8d\121\ufc8d\122\ufc8d\123" +
    "\ufc8d\126\ufc8d\127\ufc8d\130\ufc8d\131\ufc8d\134\ufc8d\142\ufc8d" +
    "\143\ufc8d\144\ufc8d\145\ufc8d\146\ufc8d\150\ufc8d\151\ufc8d\152" +
    "\ufc8d\153\ufc8d\154\ufc8d\155\ufc8d\161\ufc8d\162\ufc8d\164\ufc8d" +
    "\166\ufc8d\170\ufc8d\171\ufc8d\172\ufc8d\173\ufc8d\174\ufc8d\201" +
    "\ufc8d\231\ufc8d\233\ufc8d\234\ufc8d\240\ufc8d\241\ufc8d\274\ufc8d" +
    "\275\ufc8d\277\ufc8d\303\ufc8d\304\ufc8d\312\ufc8d\001\002\000" +
    "\056\006\ufc7d\007\ufc7d\011\ufc7d\012\ufc7d\034\ufc7d\043\ufc7d" +
    "\046\ufc7d\104\ufc7d\105\ufc7d\106\ufc7d\107\ufc7d\110\ufc7d\111" +
    "\302\112\301\115\ufc7d\116\ufc7d\376\ufc7d\377\ufc7d\u0100\ufc7d" +
    "\u0101\ufc7d\u0102\ufc7d\u0103\ufc7d\001\002\000\052\006\044\007" +
    "\242\011\274\012\303\034\253\043\271\046\237\104\262" +
    "\105\272\106\267\107\265\110\241\115\273\116\270\376" +
    "\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002" +
    "\000\052\006\ufc7e\007\ufc7e\011\ufc7e\012\ufc7e\034\ufc7e\043" +
    "\ufc7e\046\ufc7e\104\ufc7e\105\ufc7e\106\ufc7e\107\ufc7e\110\ufc7e" +
    "\115\ufc7e\116\ufc7e\376\ufc7e\377\ufc7e\u0100\ufc7e\u0101\ufc7e\u0102" +
    "\ufc7e\u0103\ufc7e\001\002\000\052\006\ufc7f\007\ufc7f\011\ufc7f" +
    "\012\ufc7f\034\ufc7f\043\ufc7f\046\ufc7f\104\ufc7f\105\ufc7f\106" +
    "\ufc7f\107\ufc7f\110\ufc7f\115\ufc7f\116\ufc7f\376\ufc7f\377\ufc7f" +
    "\u0100\ufc7f\u0101\ufc7f\u0102\ufc7f\u0103\ufc7f\001\002\000\004\035" +
    "\ufc81\001\002\000\004\035\ufc80\001\002\000\202\006\ufc9e" +
    "\007\ufc9e\010\ufc9e\011\ufc9e\012\ufc9e\013\ufc9e\014\ufc9e\015" +
    "\ufc9e\016\ufc9e\017\ufc9e\020\ufc9e\021\ufc9e\023\ufc9e\027\ufc9e" +
    "\030\ufc9e\034\ufc9e\035\ufc9e\062\ufc9e\070\ufc9e\076\ufc9e\100" +
    "\ufc9e\101\ufc9e\116\ufc9e\117\ufc9e\120\ufc9e\121\ufc9e\122\ufc9e" +
    "\123\ufc9e\126\ufc9e\127\ufc9e\130\ufc9e\131\ufc9e\134\ufc9e\142" +
    "\ufc9e\143\ufc9e\144\ufc9e\145\ufc9e\146\ufc9e\150\ufc9e\151\ufc9e" +
    "\152\ufc9e\153\ufc9e\154\ufc9e\155\ufc9e\161\ufc9e\162\ufc9e\164" +
    "\ufc9e\166\ufc9e\170\ufc9e\171\ufc9e\172\ufc9e\173\ufc9e\174\ufc9e" +
    "\201\ufc9e\231\ufc9e\233\ufc9e\234\ufc9e\241\ufc9e\274\ufc9e\275" +
    "\ufc9e\277\ufc9e\303\ufc9e\304\ufc9e\312\ufc9e\001\002\000\004" +
    "\035\307\001\002\000\202\006\ufc88\007\ufc88\010\ufc88\011" +
    "\ufc88\012\ufc88\013\ufc88\014\ufc88\015\ufc88\016\ufc88\017\ufc88" +
    "\020\ufc88\021\ufc88\023\ufc88\027\ufc88\030\ufc88\034\ufc88\035" +
    "\ufc88\062\ufc88\070\ufc88\076\ufc88\100\ufc88\101\ufc88\116\ufc88" +
    "\117\ufc88\120\ufc88\121\ufc88\122\ufc88\123\ufc88\126\ufc88\127" +
    "\ufc88\130\ufc88\131\ufc88\134\ufc88\142\ufc88\143\ufc88\144\ufc88" +
    "\145\ufc88\146\ufc88\150\ufc88\151\ufc88\152\ufc88\153\ufc88\154" +
    "\ufc88\155\ufc88\161\ufc88\162\ufc88\164\ufc88\166\ufc88\170\ufc88" +
    "\171\ufc88\172\ufc88\173\ufc88\174\ufc88\201\ufc88\231\ufc88\233" +
    "\ufc88\234\ufc88\241\ufc88\274\ufc88\275\ufc88\277\ufc88\303\ufc88" +
    "\304\ufc88\312\ufc88\001\002\000\202\006\ufc95\007\ufc95\010" +
    "\ufc95\011\ufc95\012\ufc95\013\ufc95\014\ufc95\015\ufc95\016\ufc95" +
    "\017\ufc95\020\ufc95\021\ufc95\023\ufc95\027\ufc95\030\ufc95\034" +
    "\ufc95\035\ufc95\062\ufc95\070\ufc95\076\ufc95\100\ufc95\101\ufc95" +
    "\116\ufc95\117\ufc95\120\ufc95\121\ufc95\122\ufc95\123\ufc95\126" +
    "\ufc95\127\ufc95\130\ufc95\131\ufc95\134\ufc95\142\ufc95\143\ufc95" +
    "\144\ufc95\145\ufc95\146\ufc95\150\ufc95\151\ufc95\152\ufc95\153" +
    "\ufc95\154\ufc95\155\ufc95\161\ufc95\162\ufc95\164\ufc95\166\ufc95" +
    "\170\ufc95\171\ufc95\172\ufc95\173\ufc95\174\ufc95\201\ufc95\231" +
    "\ufc95\233\ufc95\234\ufc95\241\ufc95\274\ufc95\275\ufc95\277\ufc95" +
    "\303\ufc95\304\ufc95\312\ufc95\001\002\000\054\006\044\007" +
    "\242\011\274\034\253\043\271\046\237\104\262\105\272" +
    "\106\267\107\265\110\241\111\312\112\314\115\273\116" +
    "\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232" +
    "\001\002\000\050\006\044\007\242\011\274\034\253\043" +
    "\271\046\237\104\262\105\272\106\267\107\265\110\241" +
    "\115\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102" +
    "\244\u0103\232\001\002\000\004\035\ufc82\001\002\000\050" +
    "\006\044\007\242\011\274\034\253\043\271\046\237\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001" +
    "\002\000\004\035\316\001\002\000\202\006\ufc87\007\ufc87" +
    "\010\ufc87\011\ufc87\012\ufc87\013\ufc87\014\ufc87\015\ufc87\016" +
    "\ufc87\017\ufc87\020\ufc87\021\ufc87\023\ufc87\027\ufc87\030\ufc87" +
    "\034\ufc87\035\ufc87\062\ufc87\070\ufc87\076\ufc87\100\ufc87\101" +
    "\ufc87\116\ufc87\117\ufc87\120\ufc87\121\ufc87\122\ufc87\123\ufc87" +
    "\126\ufc87\127\ufc87\130\ufc87\131\ufc87\134\ufc87\142\ufc87\143" +
    "\ufc87\144\ufc87\145\ufc87\146\ufc87\150\ufc87\151\ufc87\152\ufc87" +
    "\153\ufc87\154\ufc87\155\ufc87\161\ufc87\162\ufc87\164\ufc87\166" +
    "\ufc87\170\ufc87\171\ufc87\172\ufc87\173\ufc87\174\ufc87\201\ufc87" +
    "\231\ufc87\233\ufc87\234\ufc87\241\ufc87\274\ufc87\275\ufc87\277" +
    "\ufc87\303\ufc87\304\ufc87\312\ufc87\001\002\000\004\035\ufc83" +
    "\001\002\000\004\035\ufc84\001\002\000\056\006\ufd71\007" +
    "\ufd71\011\ufd71\034\u0112\043\ufd71\046\ufd71\104\ufd71\105\ufd71" +
    "\106\ufd71\107\ufd71\110\ufd71\115\ufd71\116\ufd71\120\u0111\124" +
    "\ufd71\125\ufd71\376\ufd71\377\ufd71\u0100\ufd71\u0101\ufd71\u0102\ufd71" +
    "\u0103\ufd71\001\002\000\004\006\044\001\002\000\056\006" +
    "\ufd71\007\ufd71\011\ufd71\034\u0112\043\ufd71\046\ufd71\104\ufd71" +
    "\105\ufd71\106\ufd71\107\ufd71\110\ufd71\115\ufd71\116\ufd71\120" +
    "\u0111\124\ufd71\125\ufd71\376\ufd71\377\ufd71\u0100\ufd71\u0101\ufd71" +
    "\u0102\ufd71\u0103\ufd71\001\002\000\034\027\ufd88\035\ufd88\060" +
    "\ufd88\070\ufd88\131\ufd88\136\ufd88\161\ufd88\173\ufd88\233\ufd88" +
    "\310\ufd88\353\ufd88\356\ufd88\375\ufd88\001\002\000\004\163" +
    "\u01cf\001\002\000\034\027\ufd8c\035\ufd8c\060\ufd8c\070\ufd8c" +
    "\131\ufd8c\136\ufd8c\161\ufd8c\173\ufd8c\233\ufd8c\310\ufd8c\353" +
    "\ufd8c\356\ufd8c\375\ufd8c\001\002\000\034\027\ufd8a\035\ufd8a" +
    "\060\ufd8a\070\ufd8a\131\ufd8a\136\ufd8a\161\ufd8a\173\ufd8a\233" +
    "\ufd8a\310\ufd8a\353\ufd8a\356\ufd8a\375\ufd8a\001\002\000\034" +
    "\027\ufd8e\035\ufd8e\060\ufd8e\070\ufd8e\131\ufd8e\136\ufd8e\161" +
    "\ufd8e\173\ufd8e\233\ufd8e\310\ufd8e\353\ufd8e\356\ufd8e\375\ufd8e" +
    "\001\002\000\034\027\ufd92\035\ufd92\060\ufd92\070\ufd92\131" +
    "\ufd92\136\ufd92\161\ufd92\173\ufd92\233\ufd92\310\ufd92\353\ufd92" +
    "\356\ufd92\375\ufd92\001\002\000\014\006\044\034\361\043" +
    "\364\073\365\074\357\001\002\000\034\027\ufd94\035\ufd94" +
    "\060\ufd94\070\ufd94\131\ufd94\136\ufd94\161\ufd94\173\ufd94\233" +
    "\ufd94\310\ufd94\353\ufd94\356\ufd94\375\ufd94\001\002\000\034" +
    "\027\ufd99\035\ufd99\060\ufd99\070\ufd99\131\ufd99\136\ufd99\161" +
    "\ufd99\173\ufd99\233\ufd99\310\ufd99\353\ufd99\356\ufd99\375\ufd99" +
    "\001\002\000\034\027\ufd87\035\ufd87\060\ufd87\070\ufd87\131" +
    "\ufd87\136\ufd87\161\ufd87\173\ufd87\233\ufd87\310\ufd87\353\ufd87" +
    "\356\ufd87\375\ufd87\001\002\000\004\163\337\001\002\000" +
    "\050\006\044\007\242\011\274\034\253\043\271\046\237" +
    "\104\262\105\272\106\267\107\265\110\241\115\273\116" +
    "\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232" +
    "\001\002\000\006\027\135\233\133\001\002\000\016\027" +
    "\ufdc8\030\343\170\345\171\346\172\344\233\ufdc8\001\002" +
    "\000\006\027\ufdcf\233\ufdcf\001\002\000\050\006\044\007" +
    "\242\011\274\034\253\043\271\046\237\104\262\105\272" +
    "\106\267\107\265\110\241\115\273\116\270\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\004" +
    "\006\353\001\002\000\010\027\ufdc8\030\343\233\ufdc8\001" +
    "\002\000\010\027\ufdc8\030\343\233\ufdc8\001\002\000\006" +
    "\027\ufdca\233\ufdca\001\002\000\006\027\ufdcd\233\ufdcd\001" +
    "\002\000\006\027\ufdcb\233\ufdcb\001\002\000\006\027\ufdcc" +
    "\233\ufdcc\001\002\000\014\027\ufdc8\030\343\170\345\171" +
    "\346\233\ufdc8\001\002\000\006\027\ufdce\233\ufdce\001\002" +
    "\000\006\027\ufdc9\233\ufdc9\001\002\000\034\027\ufd89\035" +
    "\ufd89\060\ufd89\070\ufd89\131\ufd89\136\ufd89\161\ufd89\173\ufd89" +
    "\233\ufd89\310\ufd89\353\ufd89\356\ufd89\375\ufd89\001\002\000" +
    "\004\034\u01bc\001\002\000\046\006\u0185\027\ufcea\030\ufcea" +
    "\035\ufcea\062\ufcea\117\u0184\134\ufcea\140\ufcea\142\ufcea\143" +
    "\ufcea\144\ufcea\145\ufcea\146\ufcea\155\ufcea\162\ufcea\164\ufcea" +
    "\174\ufcea\233\ufcea\001\002\000\014\006\044\034\361\043" +
    "\364\073\365\074\357\001\002\000\020\027\ufd90\030\u0189" +
    "\134\ufd90\162\ufd90\164\ufd90\174\ufd90\233\ufd90\001\002\000" +
    "\044\006\u0185\027\ufcea\030\ufcea\035\ufcea\062\ufcea\117\u0184" +
    "\134\ufcea\142\ufcea\143\ufcea\144\ufcea\145\ufcea\146\ufcea\155" +
    "\ufcea\162\ufcea\164\ufcea\174\ufcea\233\ufcea\001\002\000\004" +
    "\006\374\001\002\000\004\034\367\001\002\000\066\006" +
    "\ufc45\027\ufc45\030\ufc45\034\ufc45\035\ufc45\043\ufc45\062\ufc45" +
    "\075\ufc45\076\ufc45\100\ufc45\102\ufc45\103\ufc45\117\ufc45\132" +
    "\ufc45\134\ufc45\142\ufc45\143\ufc45\144\ufc45\145\ufc45\146\ufc45" +
    "\154\ufc45\155\ufc45\162\ufc45\164\ufc45\174\ufc45\233\ufc45\001" +
    "\002\000\004\006\370\001\002\000\004\030\371\001\002" +
    "\000\004\007\372\001\002\000\004\035\373\001\002\000" +
    "\066\006\ufc3d\027\ufc3d\030\ufc3d\034\ufc3d\035\ufc3d\043\ufc3d" +
    "\062\ufc3d\075\ufc3d\076\ufc3d\100\ufc3d\102\ufc3d\103\ufc3d\117" +
    "\ufc3d\132\ufc3d\134\ufc3d\142\ufc3d\143\ufc3d\144\ufc3d\145\ufc3d" +
    "\146\ufc3d\154\ufc3d\155\ufc3d\162\ufc3d\164\ufc3d\174\ufc3d\233" +
    "\ufc3d\001\002\000\010\006\377\031\375\117\376\001\002" +
    "\000\004\006\u0174\001\002\000\004\006\u0173\001\002\000" +
    "\040\027\ufcf5\030\ufcf5\035\ufcf5\062\ufcf5\134\ufcf5\142\ufcf5" +
    "\143\ufcf5\144\ufcf5\145\ufcf5\146\ufcf5\155\ufcf5\162\ufcf5\164" +
    "\ufcf5\174\ufcf5\233\ufcf5\001\002\000\040\027\ufd00\030\ufd00" +
    "\035\ufd00\062\ufd00\134\ufd00\142\u0108\143\u0103\144\u0101\145" +
    "\u0105\146\u0107\155\u0102\162\ufd00\164\ufd00\174\ufd00\233\ufd00" +
    "\001\002\000\006\143\ufcf7\147\u010c\001\002\000\004\143" +
    "\u0170\001\002\000\014\006\ufcfc\034\ufcfc\043\ufcfc\073\ufcfc" +
    "\074\ufcfc\001\002\000\040\027\ufd04\030\ufd04\035\ufd04\062" +
    "\ufd04\134\ufd04\142\ufd04\143\ufd04\144\ufd04\145\ufd04\146\ufd04" +
    "\155\ufd04\162\ufd04\164\ufd04\174\ufd04\233\ufd04\001\002\000" +
    "\006\143\ufcf7\147\u010c\001\002\000\014\006\044\034\361" +
    "\043\364\073\365\074\357\001\002\000\006\143\ufcf7\147" +
    "\u010c\001\002\000\004\143\u0109\001\002\000\014\006\044" +
    "\034\361\043\364\073\365\074\357\001\002\000\040\027" +
    "\ufd00\030\ufd00\035\ufd00\062\ufd00\134\ufd00\142\u0108\143\u0103" +
    "\144\u0101\145\u0105\146\u0107\155\u0102\162\ufd00\164\ufd00\174" +
    "\ufd00\233\ufd00\001\002\000\040\027\ufd01\030\ufd01\035\ufd01" +
    "\062\ufd01\134\ufd01\142\ufd01\143\ufd01\144\ufd01\145\ufd01\146" +
    "\ufd01\155\ufd01\162\ufd01\164\ufd01\174\ufd01\233\ufd01\001\002" +
    "\000\004\143\ufcf8\001\002\000\004\143\u010e\001\002\000" +
    "\014\006\ufcf9\034\ufcf9\043\ufcf9\073\ufcf9\074\ufcf9\001\002" +
    "\000\004\062\u0110\001\002\000\056\006\ufd71\007\ufd71\011" +
    "\ufd71\034\u0112\043\ufd71\046\ufd71\104\ufd71\105\ufd71\106\ufd71" +
    "\107\ufd71\110\ufd71\115\ufd71\116\ufd71\120\u0111\124\ufd71\125" +
    "\ufd71\376\ufd71\377\ufd71\u0100\ufd71\u0101\ufd71\u0102\ufd71\u0103\ufd71" +
    "\001\002\000\062\006\ufd72\007\ufd72\011\ufd72\034\ufd72\043" +
    "\ufd72\046\ufd72\104\ufd72\105\ufd72\106\ufd72\107\ufd72\110\ufd72" +
    "\115\ufd72\116\ufd72\123\ufd72\124\ufd72\125\ufd72\127\ufd72\130" +
    "\ufd72\376\ufd72\377\ufd72\u0100\ufd72\u0101\ufd72\u0102\ufd72\u0103\ufd72" +
    "\001\002\000\056\006\ufd71\007\ufd71\011\ufd71\034\u0112\043" +
    "\ufd71\046\ufd71\104\ufd71\105\ufd71\106\ufd71\107\ufd71\110\ufd71" +
    "\115\ufd71\116\ufd71\120\u0111\124\ufd71\125\ufd71\376\ufd71\377" +
    "\ufd71\u0100\ufd71\u0101\ufd71\u0102\ufd71\u0103\ufd71\001\002\000\054" +
    "\006\044\007\242\011\274\034\253\043\271\046\237\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\124\u0119\125\u0117\376\254\377\256\u0100\236\u0101\252\u0102" +
    "\244\u0103\232\001\002\000\040\027\ufd00\030\ufd00\035\ufd00" +
    "\062\ufd00\134\ufd00\142\u0108\143\u0103\144\u0101\145\u0105\146" +
    "\u0107\155\u0102\162\ufd00\164\ufd00\174\ufd00\233\ufd00\001\002" +
    "\000\040\027\ufd02\030\ufd02\035\ufd02\062\ufd02\134\ufd02\142" +
    "\ufd02\143\ufd02\144\ufd02\145\ufd02\146\ufd02\155\ufd02\162\ufd02" +
    "\164\ufd02\174\ufd02\233\ufd02\001\002\000\044\027\ufd50\030" +
    "\ufd50\035\ufd50\062\ufd50\121\u0159\122\u015b\134\ufd50\142\ufd50" +
    "\143\ufd50\144\ufd50\145\ufd50\146\ufd50\155\ufd50\162\ufd50\164" +
    "\ufd50\174\ufd50\233\ufd50\001\002\000\004\034\u0154\001\002" +
    "\000\066\027\ufd5e\030\ufd5e\035\ufd5e\062\ufd5e\120\u0111\121" +
    "\ufd5e\122\ufd5e\123\ufd71\126\u0141\127\ufd71\130\ufd71\134\ufd5e" +
    "\142\ufd5e\143\ufd5e\144\ufd5e\145\ufd5e\146\ufd5e\150\u013f\151" +
    "\u013e\152\u013b\153\u013a\155\ufd5e\162\ufd5e\164\ufd5e\174\ufd5e" +
    "\233\ufd5e\001\002\000\004\034\u011a\001\002\000\010\006" +
    "\u011d\012\u011e\034\u011c\001\002\000\004\030\u0126\001\002" +
    "\000\004\006\u011f\001\002\000\004\030\ufd64\001\002\000" +
    "\004\030\ufd63\001\002\000\006\030\u0122\035\ufc47\001\002" +
    "\000\004\035\u0121\001\002\000\004\030\ufd62\001\002\000" +
    "\004\006\u0124\001\002\000\004\035\ufc49\001\002\000\006" +
    "\030\u0122\035\ufc47\001\002\000\004\035\ufc48\001\002\000" +
    "\010\007\u0128\034\u0129\035\ufd6e\001\002\000\004\035\u0139" +
    "\001\002\000\012\024\u012f\025\u012d\121\u012e\122\u0130\001" +
    "\002\000\010\007\u0128\034\u0129\035\ufd6e\001\002\000\004" +
    "\035\u012b\001\002\000\012\024\u012f\025\u012d\121\u012e\122" +
    "\u0130\001\002\000\004\035\ufd6f\001\002\000\010\007\u0128" +
    "\034\u0129\035\ufd6e\001\002\000\012\007\u0128\034\u0129\035" +
    "\ufd6e\120\u0135\001\002\000\010\007\u0128\034\u0129\035\ufd6e" +
    "\001\002\000\010\007\u0128\034\u0129\035\ufd6e\001\002\000" +
    "\004\035\ufd6c\001\002\000\004\035\ufd6a\001\002\000\004" +
    "\035\ufd6d\001\002\000\004\035\ufd68\001\002\000\010\007" +
    "\u0128\034\u0129\035\ufd6e\001\002\000\004\035\ufd69\001\002" +
    "\000\004\035\ufd6b\001\002\000\004\035\ufd70\001\002\000" +
    "\044\027\ufd66\030\ufd66\035\ufd66\062\ufd66\121\ufd66\122\ufd66" +
    "\134\ufd66\142\ufd66\143\ufd66\144\ufd66\145\ufd66\146\ufd66\155" +
    "\ufd66\162\ufd66\164\ufd66\174\ufd66\233\ufd66\001\002\000\050" +
    "\006\ufd5a\007\ufd5a\011\ufd5a\034\ufd5a\043\ufd5a\046\ufd5a\104" +
    "\ufd5a\105\ufd5a\106\ufd5a\107\ufd5a\110\ufd5a\115\ufd5a\116\ufd5a" +
    "\376\ufd5a\377\ufd5a\u0100\ufd5a\u0101\ufd5a\u0102\ufd5a\u0103\ufd5a\001" +
    "\002\000\050\006\ufd5b\007\ufd5b\011\ufd5b\034\ufd5b\043\ufd5b" +
    "\046\ufd5b\104\ufd5b\105\ufd5b\106\ufd5b\107\ufd5b\110\ufd5b\115" +
    "\ufd5b\116\ufd5b\376\ufd5b\377\ufd5b\u0100\ufd5b\u0101\ufd5b\u0102\ufd5b" +
    "\u0103\ufd5b\001\002\000\050\006\044\007\242\011\274\034" +
    "\253\043\271\046\237\104\262\105\272\106\267\107\265" +
    "\110\241\115\273\116\270\376\254\377\256\u0100\236\u0101" +
    "\252\u0102\244\u0103\232\001\002\000\010\123\u0144\127\u0146" +
    "\130\u0145\001\002\000\050\006\ufd5c\007\ufd5c\011\ufd5c\034" +
    "\ufd5c\043\ufd5c\046\ufd5c\104\ufd5c\105\ufd5c\106\ufd5c\107\ufd5c" +
    "\110\ufd5c\115\ufd5c\116\ufd5c\376\ufd5c\377\ufd5c\u0100\ufd5c\u0101" +
    "\ufd5c\u0102\ufd5c\u0103\ufd5c\001\002\000\050\006\ufd5d\007\ufd5d" +
    "\011\ufd5d\034\ufd5d\043\ufd5d\046\ufd5d\104\ufd5d\105\ufd5d\106" +
    "\ufd5d\107\ufd5d\110\ufd5d\115\ufd5d\116\ufd5d\376\ufd5d\377\ufd5d" +
    "\u0100\ufd5d\u0101\ufd5d\u0102\ufd5d\u0103\ufd5d\001\002\000\044\027" +
    "\ufd67\030\ufd67\035\ufd67\062\ufd67\121\ufd67\122\ufd67\134\ufd67" +
    "\142\ufd67\143\ufd67\144\ufd67\145\ufd67\146\ufd67\155\ufd67\162" +
    "\ufd67\164\ufd67\174\ufd67\233\ufd67\001\002\000\006\116\ufd71" +
    "\120\u0111\001\002\000\004\116\u0143\001\002\000\044\027" +
    "\ufd60\030\ufd60\035\ufd60\062\ufd60\121\ufd60\122\ufd60\134\ufd60" +
    "\142\ufd60\143\ufd60\144\ufd60\145\ufd60\146\ufd60\155\ufd60\162" +
    "\ufd60\164\ufd60\174\ufd60\233\ufd60\001\002\000\004\007\u0152" +
    "\001\002\000\004\034\u014b\001\002\000\050\006\044\007" +
    "\242\011\274\034\253\043\271\046\237\104\262\105\272" +
    "\106\267\107\265\110\241\115\273\116\270\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\044" +
    "\027\ufd5f\030\ufd5f\035\ufd5f\062\ufd5f\121\ufd5f\122\ufd5f\134" +
    "\ufd5f\142\ufd5f\143\ufd5f\144\ufd5f\145\ufd5f\146\ufd5f\155\ufd5f" +
    "\162\ufd5f\164\ufd5f\174\ufd5f\233\ufd5f\001\002\000\004\121" +
    "\u0149\001\002\000\050\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\104\262\105\272\106\267\107\265\110" +
    "\241\115\273\116\270\376\254\377\256\u0100\236\u0101\252" +
    "\u0102\244\u0103\232\001\002\000\044\027\ufd59\030\ufd59\035" +
    "\ufd59\062\ufd59\121\ufd59\122\ufd59\134\ufd59\142\ufd59\143\ufd59" +
    "\144\ufd59\145\ufd59\146\ufd59\155\ufd59\162\ufd59\164\ufd59\174" +
    "\ufd59\233\ufd59\001\002\000\050\006\044\007\242\011\274" +
    "\034\253\043\271\046\237\104\262\105\272\106\267\107" +
    "\265\110\241\115\273\116\270\376\254\377\256\u0100\236" +
    "\u0101\252\u0102\244\u0103\232\001\002\000\006\030\u014d\035" +
    "\ufd55\001\002\000\050\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\104\262\105\272\106\267\107\265\110" +
    "\241\115\273\116\270\376\254\377\256\u0100\236\u0101\252" +
    "\u0102\244\u0103\232\001\002\000\004\035\u014f\001\002\000" +
    "\044\027\ufd58\030\ufd58\035\ufd58\062\ufd58\121\ufd58\122\ufd58" +
    "\134\ufd58\142\ufd58\143\ufd58\144\ufd58\145\ufd58\146\ufd58\155" +
    "\ufd58\162\ufd58\164\ufd58\174\ufd58\233\ufd58\001\002\000\006" +
    "\030\u014d\035\ufd55\001\002\000\004\035\ufd56\001\002\000" +
    "\044\027\ufd57\030\ufd57\035\ufd57\062\ufd57\121\ufd57\122\ufd57" +
    "\134\ufd57\142\ufd57\143\ufd57\144\ufd57\145\ufd57\146\ufd57\155" +
    "\ufd57\162\ufd57\164\ufd57\174\ufd57\233\ufd57\001\002\000\044" +
    "\027\ufd61\030\ufd61\035\ufd61\062\ufd61\121\ufd61\122\ufd61\134" +
    "\ufd61\142\ufd61\143\ufd61\144\ufd61\145\ufd61\146\ufd61\155\ufd61" +
    "\162\ufd61\164\ufd61\174\ufd61\233\ufd61\001\002\000\010\006" +
    "\u011d\012\u011e\034\u011c\001\002\000\004\030\u0156\001\002" +
    "\000\004\007\u0157\001\002\000\004\035\u0158\001\002\000" +
    "\044\027\ufd65\030\ufd65\035\ufd65\062\ufd65\121\ufd65\122\ufd65" +
    "\134\ufd65\142\ufd65\143\ufd65\144\ufd65\145\ufd65\146\ufd65\155" +
    "\ufd65\162\ufd65\164\ufd65\174\ufd65\233\ufd65\001\002\000\056" +
    "\006\044\007\242\011\274\034\u0160\043\271\046\237\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\120\u015d\124\u0119\125\u0117\376\254\377\256\u0100\236\u0101" +
    "\252\u0102\244\u0103\232\001\002\000\040\027\ufd54\030\ufd54" +
    "\035\ufd54\062\ufd54\134\ufd54\142\ufd54\143\ufd54\144\ufd54\145" +
    "\ufd54\146\ufd54\155\ufd54\162\ufd54\164\ufd54\174\ufd54\233\ufd54" +
    "\001\002\000\056\006\044\007\242\011\274\034\u0160\043" +
    "\271\046\237\104\262\105\272\106\267\107\265\110\241" +
    "\115\273\116\270\120\u015d\124\u0119\125\u0117\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\044" +
    "\027\ufd50\030\ufd50\035\ufd50\062\ufd50\121\u0159\122\u015b\134" +
    "\ufd50\142\ufd50\143\ufd50\144\ufd50\145\ufd50\146\ufd50\155\ufd50" +
    "\162\ufd50\164\ufd50\174\ufd50\233\ufd50\001\002\000\054\006" +
    "\044\007\242\011\274\034\u0160\043\271\046\237\104\262" +
    "\105\272\106\267\107\265\110\241\115\273\116\270\124" +
    "\u0119\125\u0117\376\254\377\256\u0100\236\u0101\252\u0102\244" +
    "\u0103\232\001\002\000\040\027\ufd4e\030\ufd4e\035\ufd4e\062" +
    "\ufd4e\134\ufd4e\142\ufd4e\143\ufd4e\144\ufd4e\145\ufd4e\146\ufd4e" +
    "\155\ufd4e\162\ufd4e\164\ufd4e\174\ufd4e\233\ufd4e\001\002\000" +
    "\040\027\ufd51\030\ufd51\035\ufd51\062\ufd51\134\ufd51\142\ufd51" +
    "\143\ufd51\144\ufd51\145\ufd51\146\ufd51\155\ufd51\162\ufd51\164" +
    "\ufd51\174\ufd51\233\ufd51\001\002\000\056\006\044\007\242" +
    "\011\274\034\u0163\043\271\046\237\104\262\105\272\106" +
    "\267\107\265\110\241\115\273\116\270\120\u0111\124\ufd71" +
    "\125\ufd71\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103" +
    "\232\001\002\000\004\035\u016a\001\002\000\004\035\u0167" +
    "\001\002\000\056\006\044\007\242\011\274\034\u0163\043" +
    "\271\046\237\104\262\105\272\106\267\107\265\110\241" +
    "\115\273\116\270\120\u0111\124\ufd71\125\ufd71\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\004" +
    "\035\u0165\001\002\000\044\027\ufd50\030\ufd50\035\ufd50\062" +
    "\ufd50\121\u0159\122\u015b\134\ufd50\142\ufd50\143\ufd50\144\ufd50" +
    "\145\ufd50\146\ufd50\155\ufd50\162\ufd50\164\ufd50\174\ufd50\233" +
    "\ufd50\001\002\000\040\027\ufd53\030\ufd53\035\ufd53\062\ufd53" +
    "\134\ufd53\142\ufd53\143\ufd53\144\ufd53\145\ufd53\146\ufd53\155" +
    "\ufd53\162\ufd53\164\ufd53\174\ufd53\233\ufd53\001\002\000\044" +
    "\027\ufd50\030\ufd50\035\ufd50\062\ufd50\121\u0159\122\u015b\134" +
    "\ufd50\142\ufd50\143\ufd50\144\ufd50\145\ufd50\146\ufd50\155\ufd50" +
    "\162\ufd50\164\ufd50\174\ufd50\233\ufd50\001\002\000\040\027" +
    "\ufd4c\030\ufd4c\035\ufd4c\062\ufd4c\134\ufd4c\142\ufd4c\143\ufd4c" +
    "\144\ufd4c\145\ufd4c\146\ufd4c\155\ufd4c\162\ufd4c\164\ufd4c\174" +
    "\ufd4c\233\ufd4c\001\002\000\040\027\ufd4b\030\ufd4b\035\ufd4b" +
    "\062\ufd4b\134\ufd4b\142\ufd4b\143\ufd4b\144\ufd4b\145\ufd4b\146" +
    "\ufd4b\155\ufd4b\162\ufd4b\164\ufd4b\174\ufd4b\233\ufd4b\001\002" +
    "\000\202\006\ufca0\007\ufca0\010\ufca0\011\ufca0\012\ufca0\013" +
    "\ufca0\014\ufca0\015\ufca0\016\ufca0\017\ufca0\020\ufca0\021\ufca0" +
    "\023\ufca0\027\ufca0\030\ufca0\034\ufca0\035\ufca0\062\ufca0\070" +
    "\ufca0\076\ufca0\100\ufca0\101\ufca0\116\ufca0\117\ufca0\120\ufca0" +
    "\121\ufca0\122\ufca0\123\ufca0\126\ufca0\127\ufca0\130\ufca0\131" +
    "\ufca0\134\ufca0\142\ufca0\143\ufca0\144\ufca0\145\ufca0\146\ufca0" +
    "\150\ufca0\151\ufca0\152\ufca0\153\ufca0\154\ufca0\155\ufca0\161" +
    "\ufca0\162\ufca0\164\ufca0\166\ufca0\170\ufca0\171\ufca0\172\ufca0" +
    "\173\ufca0\174\ufca0\201\ufca0\231\ufca0\233\ufca0\234\ufca0\241" +
    "\ufca0\274\ufca0\275\ufca0\277\ufca0\303\ufca0\304\ufca0\312\ufca0" +
    "\001\002\000\040\027\ufd4f\030\ufd4f\035\ufd4f\062\ufd4f\134" +
    "\ufd4f\142\ufd4f\143\ufd4f\144\ufd4f\145\ufd4f\146\ufd4f\155\ufd4f" +
    "\162\ufd4f\164\ufd4f\174\ufd4f\233\ufd4f\001\002\000\040\027" +
    "\ufd4d\030\ufd4d\035\ufd4d\062\ufd4d\134\ufd4d\142\ufd4d\143\ufd4d" +
    "\144\ufd4d\145\ufd4d\146\ufd4d\155\ufd4d\162\ufd4d\164\ufd4d\174" +
    "\ufd4d\233\ufd4d\001\002\000\040\027\ufd52\030\ufd52\035\ufd52" +
    "\062\ufd52\134\ufd52\142\ufd52\143\ufd52\144\ufd52\145\ufd52\146" +
    "\ufd52\155\ufd52\162\ufd52\164\ufd52\174\ufd52\233\ufd52\001\002" +
    "\000\004\143\u016f\001\002\000\014\006\ufcfa\034\ufcfa\043" +
    "\ufcfa\073\ufcfa\074\ufcfa\001\002\000\014\006\ufcfd\034\ufcfd" +
    "\043\ufcfd\073\ufcfd\074\ufcfd\001\002\000\004\143\u0172\001" +
    "\002\000\014\006\ufcfb\034\ufcfb\043\ufcfb\073\ufcfb\074\ufcfb" +
    "\001\002\000\040\027\ufcf6\030\ufcf6\035\ufcf6\062\ufcf6\134" +
    "\ufcf6\142\ufcf6\143\ufcf6\144\ufcf6\145\ufcf6\146\ufcf6\155\ufcf6" +
    "\162\ufcf6\164\ufcf6\174\ufcf6\233\ufcf6\001\002\000\004\034" +
    "\u0175\001\002\000\050\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\104\262\105\272\106\267\107\265\110" +
    "\241\115\273\116\270\376\254\377\256\u0100\236\u0101\252" +
    "\u0102\244\u0103\232\001\002\000\006\030\u0177\035\ufced\001" +
    "\002\000\050\006\044\007\242\011\274\034\253\043\271" +
    "\046\237\104\262\105\272\106\267\107\265\110\241\115" +
    "\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244" +
    "\u0103\232\001\002\000\004\035\u0179\001\002\000\046\006" +
    "\u017b\027\ufcf1\030\ufcf1\034\ufcf1\035\ufcf1\062\ufcf1\117\u017a" +
    "\134\ufcf1\142\ufcf1\143\ufcf1\144\ufcf1\145\ufcf1\146\ufcf1\155" +
    "\ufcf1\162\ufcf1\164\ufcf1\174\ufcf1\233\ufcf1\001\002\000\004" +
    "\006\u0181\001\002\000\042\027\ufcf2\030\ufcf2\034\ufcf2\035" +
    "\ufcf2\062\ufcf2\134\ufcf2\142\ufcf2\143\ufcf2\144\ufcf2\145\ufcf2" +
    "\146\ufcf2\155\ufcf2\162\ufcf2\164\ufcf2\174\ufcf2\233\ufcf2\001" +
    "\002\000\042\027\ufcef\030\ufcef\034\u017d\035\ufcef\062\ufcef" +
    "\134\ufcef\142\ufcef\143\ufcef\144\ufcef\145\ufcef\146\ufcef\155" +
    "\ufcef\162\ufcef\164\ufcef\174\ufcef\233\ufcef\001\002\000\004" +
    "\006\u011f\001\002\000\040\027\ufcf4\030\ufcf4\035\ufcf4\062" +
    "\ufcf4\134\ufcf4\142\ufcf4\143\ufcf4\144\ufcf4\145\ufcf4\146\ufcf4" +
    "\155\ufcf4\162\ufcf4\164\ufcf4\174\ufcf4\233\ufcf4\001\002\000" +
    "\004\035\u0180\001\002\000\040\027\ufcf0\030\ufcf0\035\ufcf0" +
    "\062\ufcf0\134\ufcf0\142\ufcf0\143\ufcf0\144\ufcf0\145\ufcf0\146" +
    "\ufcf0\155\ufcf0\162\ufcf0\164\ufcf0\174\ufcf0\233\ufcf0\001\002" +
    "\000\042\027\ufcf3\030\ufcf3\034\ufcf3\035\ufcf3\062\ufcf3\134" +
    "\ufcf3\142\ufcf3\143\ufcf3\144\ufcf3\145\ufcf3\146\ufcf3\155\ufcf3" +
    "\162\ufcf3\164\ufcf3\174\ufcf3\233\ufcf3\001\002\000\006\030" +
    "\u0177\035\ufced\001\002\000\004\035\ufcee\001\002\000\004" +
    "\006\u0188\001\002\000\042\027\ufceb\030\ufceb\035\ufceb\062" +
    "\ufceb\134\ufceb\140\ufceb\142\ufceb\143\ufceb\144\ufceb\145\ufceb" +
    "\146\ufceb\155\ufceb\162\ufceb\164\ufceb\174\ufceb\233\ufceb\001" +
    "\002\000\040\027\ufd00\030\ufd00\035\ufd00\062\ufd00\134\ufd00" +
    "\142\u0108\143\u0103\144\u0101\145\u0105\146\u0107\155\u0102\162" +
    "\ufd00\164\ufd00\174\ufd00\233\ufd00\001\002\000\040\027\ufd05" +
    "\030\ufd05\035\ufd05\062\ufd05\134\ufd05\142\ufd05\143\ufd05\144" +
    "\ufd05\145\ufd05\146\ufd05\155\ufd05\162\ufd05\164\ufd05\174\ufd05" +
    "\233\ufd05\001\002\000\042\027\ufcec\030\ufcec\035\ufcec\062" +
    "\ufcec\134\ufcec\140\ufcec\142\ufcec\143\ufcec\144\ufcec\145\ufcec" +
    "\146\ufcec\155\ufcec\162\ufcec\164\ufcec\174\ufcec\233\ufcec\001" +
    "\002\000\014\006\044\034\361\043\364\073\365\074\357" +
    "\001\002\000\016\027\135\134\321\162\336\164\323\174" +
    "\325\233\133\001\002\000\034\027\ufd93\035\ufd93\060\ufd93" +
    "\070\ufd93\131\ufd93\136\ufd93\161\ufd93\173\ufd93\233\ufd93\310" +
    "\ufd93\353\ufd93\356\ufd93\375\ufd93\001\002\000\020\027\ufd90" +
    "\030\u0189\134\ufd90\162\ufd90\164\ufd90\174\ufd90\233\ufd90\001" +
    "\002\000\016\027\ufd91\134\ufd91\162\ufd91\164\ufd91\174\ufd91" +
    "\233\ufd91\001\002\000\016\142\u0191\143\u0103\144\u0101\145" +
    "\u0105\146\u0107\155\u0102\001\002\000\040\027\ufd00\030\ufd00" +
    "\035\ufd00\062\ufd00\134\ufd00\142\u0108\143\u0103\144\u0101\145" +
    "\u0105\146\u0107\155\u0102\162\ufd00\164\ufd00\174\ufd00\233\ufd00" +
    "\001\002\000\014\006\044\034\361\043\364\073\365\074" +
    "\357\001\002\000\004\143\u0192\001\002\000\014\006\044" +
    "\034\361\043\364\073\365\074\357\001\002\000\004\035" +
    "\u0194\001\002\000\040\027\ufcfe\030\ufcfe\035\ufcfe\062\ufcfe" +
    "\134\ufcfe\142\ufcfe\143\ufcfe\144\ufcfe\145\ufcfe\146\ufcfe\155" +
    "\ufcfe\162\ufcfe\164\ufcfe\174\ufcfe\233\ufcfe\001\002\000\004" +
    "\062\u0196\001\002\000\056\006\ufd71\007\ufd71\011\ufd71\034" +
    "\u0112\043\ufd71\046\ufd71\104\ufd71\105\ufd71\106\ufd71\107\ufd71" +
    "\110\ufd71\115\ufd71\116\ufd71\120\u0111\124\ufd71\125\ufd71\376" +
    "\ufd71\377\ufd71\u0100\ufd71\u0101\ufd71\u0102\ufd71\u0103\ufd71\001\002" +
    "\000\004\035\u0198\001\002\000\040\027\ufcff\030\ufcff\035" +
    "\ufcff\062\ufcff\134\ufcff\142\ufcff\143\ufcff\144\ufcff\145\ufcff" +
    "\146\ufcff\155\ufcff\162\ufcff\164\ufcff\174\ufcff\233\ufcff\001" +
    "\002\000\040\027\ufd03\030\ufd03\035\ufd03\062\ufd03\134\ufd03" +
    "\142\ufd03\143\ufd03\144\ufd03\145\ufd03\146\ufd03\155\ufd03\162" +
    "\ufd03\164\ufd03\174\ufd03\233\ufd03\001\002\000\042\027\ufce8" +
    "\030\ufce8\035\ufce8\062\ufce8\134\ufce8\140\u019b\142\ufce8\143" +
    "\ufce8\144\ufce8\145\ufce8\146\ufce8\155\ufce8\162\ufce8\164\ufce8" +
    "\174\ufce8\233\ufce8\001\002\000\004\034\u019e\001\002\000" +
    "\040\027\ufd00\030\ufd00\035\ufd00\062\ufd00\134\ufd00\142\u0108" +
    "\143\u0103\144\u0101\145\u0105\146\u0107\155\u0102\162\ufd00\164" +
    "\ufd00\174\ufd00\233\ufd00\001\002\000\040\027\ufd06\030\ufd06" +
    "\035\ufd06\062\ufd06\134\ufd06\142\ufd06\143\ufd06\144\ufd06\145" +
    "\ufd06\146\ufd06\155\ufd06\162\ufd06\164\ufd06\174\ufd06\233\ufd06" +
    "\001\002\000\014\006\044\034\u01a3\043\u01a4\046\u01a5\115" +
    "\u019f\001\002\000\054\006\ufc73\010\ufc73\011\ufc73\012\ufc73" +
    "\013\ufc73\027\ufc73\030\ufc73\035\ufc73\043\ufc73\072\ufc73\075" +
    "\ufc73\076\ufc73\101\ufc73\102\ufc73\103\ufc73\117\ufc73\134\ufc73" +
    "\141\ufc73\154\ufc73\233\ufc73\310\ufc73\001\002\000\054\006" +
    "\ufc70\010\ufc70\011\ufc70\012\ufc70\013\ufc70\027\ufc70\030\ufc70" +
    "\035\ufc70\043\ufc70\072\ufc70\075\ufc70\076\ufc70\101\ufc70\102" +
    "\ufc70\103\ufc70\117\ufc70\134\ufc70\141\ufc70\154\ufc70\233\ufc70" +
    "\310\ufc70\001\002\000\010\035\ufce5\072\u01b9\141\u01b8\001" +
    "\002\000\050\006\ufc79\010\u01b3\011\u01b1\027\ufc79\030\ufc79" +
    "\035\ufc79\043\ufc79\072\ufc79\075\ufc79\076\ufc79\101\ufc79\102" +
    "\ufc79\103\ufc79\117\ufc79\134\ufc79\141\ufc79\154\ufc79\233\ufc79" +
    "\310\ufc79\001\002\000\014\006\044\034\u01a3\043\u01a4\046" +
    "\u01a5\115\u019f\001\002\000\004\006\u01ae\001\002\000\054" +
    "\006\ufc72\010\ufc72\011\ufc72\012\ufc72\013\ufc72\027\ufc72\030" +
    "\ufc72\035\ufc72\043\ufc72\072\ufc72\075\ufc72\076\ufc72\101\ufc72" +
    "\102\ufc72\103\ufc72\117\ufc72\134\ufc72\141\ufc72\154\ufc72\233" +
    "\ufc72\310\ufc72\001\002\000\054\006\ufc75\010\ufc75\011\ufc75" +
    "\012\u01a9\013\u01a7\027\ufc75\030\ufc75\035\ufc75\043\ufc75\072" +
    "\ufc75\075\ufc75\076\ufc75\101\ufc75\102\ufc75\103\ufc75\117\ufc75" +
    "\134\ufc75\141\ufc75\154\ufc75\233\ufc75\310\ufc75\001\002\000" +
    "\014\006\044\034\u01a3\043\u01a4\046\u01a5\115\u019f\001\002" +
    "\000\050\006\ufc78\010\ufc78\011\ufc78\027\ufc78\030\ufc78\035" +
    "\ufc78\043\ufc78\072\ufc78\075\ufc78\076\ufc78\101\ufc78\102\ufc78" +
    "\103\ufc78\117\ufc78\134\ufc78\141\ufc78\154\ufc78\233\ufc78\310" +
    "\ufc78\001\002\000\014\006\044\034\u01a3\043\u01a4\046\u01a5" +
    "\115\u019f\001\002\000\054\006\ufc75\010\ufc75\011\ufc75\012" +
    "\u01a9\013\u01a7\027\ufc75\030\ufc75\035\ufc75\043\ufc75\072\ufc75" +
    "\075\ufc75\076\ufc75\101\ufc75\102\ufc75\103\ufc75\117\ufc75\134" +
    "\ufc75\141\ufc75\154\ufc75\233\ufc75\310\ufc75\001\002\000\050" +
    "\006\ufc77\010\ufc77\011\ufc77\027\ufc77\030\ufc77\035\ufc77\043" +
    "\ufc77\072\ufc77\075\ufc77\076\ufc77\101\ufc77\102\ufc77\103\ufc77" +
    "\117\ufc77\134\ufc77\141\ufc77\154\ufc77\233\ufc77\310\ufc77\001" +
    "\002\000\054\006\ufc75\010\ufc75\011\ufc75\012\u01a9\013\u01a7" +
    "\027\ufc75\030\ufc75\035\ufc75\043\ufc75\072\ufc75\075\ufc75\076" +
    "\ufc75\101\ufc75\102\ufc75\103\ufc75\117\ufc75\134\ufc75\141\ufc75" +
    "\154\ufc75\233\ufc75\310\ufc75\001\002\000\050\006\ufc76\010" +
    "\ufc76\011\ufc76\027\ufc76\030\ufc76\035\ufc76\043\ufc76\072\ufc76" +
    "\075\ufc76\076\ufc76\101\ufc76\102\ufc76\103\ufc76\117\ufc76\134" +
    "\ufc76\141\ufc76\154\ufc76\233\ufc76\310\ufc76\001\002\000\054" +
    "\006\ufc71\010\ufc71\011\ufc71\012\ufc71\013\ufc71\027\ufc71\030" +
    "\ufc71\035\ufc71\043\ufc71\072\ufc71\075\ufc71\076\ufc71\101\ufc71" +
    "\102\ufc71\103\ufc71\117\ufc71\134\ufc71\141\ufc71\154\ufc71\233" +
    "\ufc71\310\ufc71\001\002\000\004\035\u01b0\001\002\000\054" +
    "\006\ufc74\010\ufc74\011\ufc74\012\ufc74\013\ufc74\027\ufc74\030" +
    "\ufc74\035\ufc74\043\ufc74\072\ufc74\075\ufc74\076\ufc74\101\ufc74" +
    "\102\ufc74\103\ufc74\117\ufc74\134\ufc74\141\ufc74\154\ufc74\233" +
    "\ufc74\310\ufc74\001\002\000\014\006\044\034\u01a3\043\u01a4" +
    "\046\u01a5\115\u019f\001\002\000\044\006\ufc7c\027\ufc7c\030" +
    "\ufc7c\035\ufc7c\043\ufc7c\072\ufc7c\075\ufc7c\076\ufc7c\101\ufc7c" +
    "\102\ufc7c\103\ufc7c\117\ufc7c\134\ufc7c\141\ufc7c\154\ufc7c\233" +
    "\ufc7c\310\ufc7c\001\002\000\014\006\044\034\u01a3\043\u01a4" +
    "\046\u01a5\115\u019f\001\002\000\050\006\ufc79\010\u01b3\011" +
    "\u01b1\027\ufc79\030\ufc79\035\ufc79\043\ufc79\072\ufc79\075\ufc79" +
    "\076\ufc79\101\ufc79\102\ufc79\103\ufc79\117\ufc79\134\ufc79\141" +
    "\ufc79\154\ufc79\233\ufc79\310\ufc79\001\002\000\044\006\ufc7b" +
    "\027\ufc7b\030\ufc7b\035\ufc7b\043\ufc7b\072\ufc7b\075\ufc7b\076" +
    "\ufc7b\101\ufc7b\102\ufc7b\103\ufc7b\117\ufc7b\134\ufc7b\141\ufc7b" +
    "\154\ufc7b\233\ufc7b\310\ufc7b\001\002\000\050\006\ufc79\010" +
    "\u01b3\011\u01b1\027\ufc79\030\ufc79\035\ufc79\043\ufc79\072\ufc79" +
    "\075\ufc79\076\ufc79\101\ufc79\102\ufc79\103\ufc79\117\ufc79\134" +
    "\ufc79\141\ufc79\154\ufc79\233\ufc79\310\ufc79\001\002\000\044" +
    "\006\ufc7a\027\ufc7a\030\ufc7a\035\ufc7a\043\ufc7a\072\ufc7a\075" +
    "\ufc7a\076\ufc7a\101\ufc7a\102\ufc7a\103\ufc7a\117\ufc7a\134\ufc7a" +
    "\141\ufc7a\154\ufc7a\233\ufc7a\310\ufc7a\001\002\000\004\035" +
    "\ufce6\001\002\000\004\035\ufce7\001\002\000\004\035\u01bb" +
    "\001\002\000\040\027\ufce9\030\ufce9\035\ufce9\062\ufce9\134" +
    "\ufce9\142\ufce9\143\ufce9\144\ufce9\145\ufce9\146\ufce9\155\ufce9" +
    "\162\ufce9\164\ufce9\174\ufce9\233\ufce9\001\002\000\004\007" +
    "\u01be\001\002\000\066\006\ufc46\027\ufc46\030\ufc46\034\ufc46" +
    "\035\ufc46\043\ufc46\062\ufc46\075\ufc46\076\ufc46\100\ufc46\102" +
    "\ufc46\103\ufc46\117\ufc46\132\ufc46\134\ufc46\142\ufc46\143\ufc46" +
    "\144\ufc46\145\ufc46\146\ufc46\154\ufc46\155\ufc46\162\ufc46\164" +
    "\ufc46\174\ufc46\233\ufc46\001\002\000\004\030\u01bf\001\002" +
    "\000\004\007\u01c0\001\002\000\006\027\u01c5\030\u01c2\001" +
    "\002\000\066\006\ufc44\027\ufc44\030\ufc44\034\ufc44\035\ufc44" +
    "\043\ufc44\062\ufc44\075\ufc44\076\ufc44\100\ufc44\102\ufc44\103" +
    "\ufc44\117\ufc44\132\ufc44\134\ufc44\142\ufc44\143\ufc44\144\ufc44" +
    "\145\ufc44\146\ufc44\154\ufc44\155\ufc44\162\ufc44\164\ufc44\174" +
    "\ufc44\233\ufc44\001\002\000\006\006\044\007\u01ca\001\002" +
    "\000\066\006\ufc41\027\ufc41\030\ufc41\034\ufc41\035\ufc41\043" +
    "\ufc41\062\ufc41\075\ufc41\076\ufc41\100\ufc41\102\ufc41\103\ufc41" +
    "\117\ufc41\132\ufc41\134\ufc41\142\ufc41\143\ufc41\144\ufc41\145" +
    "\ufc41\146\ufc41\154\ufc41\155\ufc41\162\ufc41\164\ufc41\174\ufc41" +
    "\233\ufc41\001\002\000\066\006\ufc43\027\ufc43\030\ufc43\034" +
    "\ufc43\035\ufc43\043\ufc43\062\ufc43\075\ufc43\076\ufc43\100\ufc43" +
    "\102\ufc43\103\ufc43\117\ufc43\132\ufc43\134\ufc43\142\ufc43\143" +
    "\ufc43\144\ufc43\145\ufc43\146\ufc43\154\ufc43\155\ufc43\162\ufc43" +
    "\164\ufc43\174\ufc43\233\ufc43\001\002\000\004\007\u01c6\001" +
    "\002\000\004\027\u01c7\001\002\000\004\007\u01c8\001\002" +
    "\000\004\030\u01c2\001\002\000\066\006\ufc42\027\ufc42\030" +
    "\ufc42\034\ufc42\035\ufc42\043\ufc42\062\ufc42\075\ufc42\076\ufc42" +
    "\100\ufc42\102\ufc42\103\ufc42\117\ufc42\132\ufc42\134\ufc42\142" +
    "\ufc42\143\ufc42\144\ufc42\145\ufc42\146\ufc42\154\ufc42\155\ufc42" +
    "\162\ufc42\164\ufc42\174\ufc42\233\ufc42\001\002\000\004\035" +
    "\u01ce\001\002\000\004\035\u01cd\001\002\000\066\006\ufc40" +
    "\027\ufc40\030\ufc40\034\ufc40\035\ufc40\043\ufc40\062\ufc40\075" +
    "\ufc40\076\ufc40\100\ufc40\102\ufc40\103\ufc40\117\ufc40\132\ufc40" +
    "\134\ufc40\142\ufc40\143\ufc40\144\ufc40\145\ufc40\146\ufc40\154" +
    "\ufc40\155\ufc40\162\ufc40\164\ufc40\174\ufc40\233\ufc40\001\002" +
    "\000\066\006\ufc3f\027\ufc3f\030\ufc3f\034\ufc3f\035\ufc3f\043" +
    "\ufc3f\062\ufc3f\075\ufc3f\076\ufc3f\100\ufc3f\102\ufc3f\103\ufc3f" +
    "\117\ufc3f\132\ufc3f\134\ufc3f\142\ufc3f\143\ufc3f\144\ufc3f\145" +
    "\ufc3f\146\ufc3f\154\ufc3f\155\ufc3f\162\ufc3f\164\ufc3f\174\ufc3f" +
    "\233\ufc3f\001\002\000\066\006\ufc3e\027\ufc3e\030\ufc3e\034" +
    "\ufc3e\035\ufc3e\043\ufc3e\062\ufc3e\075\ufc3e\076\ufc3e\100\ufc3e" +
    "\102\ufc3e\103\ufc3e\117\ufc3e\132\ufc3e\134\ufc3e\142\ufc3e\143" +
    "\ufc3e\144\ufc3e\145\ufc3e\146\ufc3e\154\ufc3e\155\ufc3e\162\ufc3e" +
    "\164\ufc3e\174\ufc3e\233\ufc3e\001\002\000\050\006\044\007" +
    "\242\011\274\034\u01d2\043\271\046\237\104\262\105\272" +
    "\106\267\107\265\110\241\115\273\116\270\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\012" +
    "\027\135\162\336\164\323\233\133\001\002\000\014\027" +
    "\ufdd0\030\u01d4\162\ufdd0\164\ufdd0\233\ufdd0\001\002\000\050" +
    "\006\044\007\242\011\274\034\253\043\271\046\237\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001" +
    "\002\000\010\030\u01d4\034\ufdd0\035\u016a\001\002\000\050" +
    "\006\044\007\242\011\274\034\253\043\271\046\237\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001" +
    "\002\000\004\034\u01d6\001\002\000\012\027\ufdd2\162\ufdd2" +
    "\164\ufdd2\233\ufdd2\001\002\000\016\027\ufdd0\030\u01d4\034" +
    "\ufdd0\162\ufdd0\164\ufdd0\233\ufdd0\001\002\000\014\027\ufdd1" +
    "\034\ufdd1\162\ufdd1\164\ufdd1\233\ufdd1\001\002\000\012\027" +
    "\ufdd3\162\ufdd3\164\ufdd3\233\ufdd3\001\002\000\034\027\ufd8d" +
    "\035\ufd8d\060\ufd8d\070\ufd8d\131\ufd8d\136\ufd8d\161\ufd8d\173" +
    "\ufd8d\233\ufd8d\310\ufd8d\353\ufd8d\356\ufd8d\375\ufd8d\001\002" +
    "\000\010\027\135\162\336\233\133\001\002\000\034\027" +
    "\ufd8b\035\ufd8b\060\ufd8b\070\ufd8b\131\ufd8b\136\ufd8b\161\ufd8b" +
    "\173\ufd8b\233\ufd8b\310\ufd8b\353\ufd8b\356\ufd8b\375\ufd8b\001" +
    "\002\000\022\027\135\062\u01de\134\321\154\332\162\336" +
    "\164\323\174\325\233\133\001\002\000\004\006\u01e0\001" +
    "\002\000\034\027\ufd95\035\ufd95\060\ufd95\070\ufd95\131\ufd95" +
    "\136\ufd95\161\ufd95\173\ufd95\233\ufd95\310\ufd95\353\ufd95\356" +
    "\ufd95\375\ufd95\001\002\000\020\027\135\134\321\154\332" +
    "\162\336\164\323\174\325\233\133\001\002\000\034\027" +
    "\ufd96\035\ufd96\060\ufd96\070\ufd96\131\ufd96\136\ufd96\161\ufd96" +
    "\173\ufd96\233\ufd96\310\ufd96\353\ufd96\356\ufd96\375\ufd96\001" +
    "\002\000\014\027\135\162\336\164\323\174\325\233\133" +
    "\001\002\000\034\027\ufd8f\035\ufd8f\060\ufd8f\070\ufd8f\131" +
    "\ufd8f\136\ufd8f\161\ufd8f\173\ufd8f\233\ufd8f\310\ufd8f\353\ufd8f" +
    "\356\ufd8f\375\ufd8f\001\002\000\054\006\044\007\242\011" +
    "\274\034\253\043\271\046\237\104\262\105\272\106\267" +
    "\107\265\110\241\111\312\112\314\115\273\116\270\376" +
    "\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002" +
    "\000\004\035\u01e6\001\002\000\202\006\ufc86\007\ufc86\010" +
    "\ufc86\011\ufc86\012\ufc86\013\ufc86\014\ufc86\015\ufc86\016\ufc86" +
    "\017\ufc86\020\ufc86\021\ufc86\023\ufc86\027\ufc86\030\ufc86\034" +
    "\ufc86\035\ufc86\062\ufc86\070\ufc86\076\ufc86\100\ufc86\101\ufc86" +
    "\116\ufc86\117\ufc86\120\ufc86\121\ufc86\122\ufc86\123\ufc86\126" +
    "\ufc86\127\ufc86\130\ufc86\131\ufc86\134\ufc86\142\ufc86\143\ufc86" +
    "\144\ufc86\145\ufc86\146\ufc86\150\ufc86\151\ufc86\152\ufc86\153" +
    "\ufc86\154\ufc86\155\ufc86\161\ufc86\162\ufc86\164\ufc86\166\ufc86" +
    "\170\ufc86\171\ufc86\172\ufc86\173\ufc86\174\ufc86\201\ufc86\231" +
    "\ufc86\233\ufc86\234\ufc86\241\ufc86\274\ufc86\275\ufc86\277\ufc86" +
    "\303\ufc86\304\ufc86\312\ufc86\001\002\000\010\006\171\012" +
    "\u01ea\165\u01e9\001\002\000\024\027\ufdb4\030\u01eb\101\ufdb4" +
    "\134\ufdb4\154\ufdb4\162\ufdb4\164\ufdb4\174\ufdb4\233\ufdb4\001" +
    "\002\000\006\166\u01ee\167\u01ef\001\002\000\024\027\ufdb4" +
    "\030\u01eb\101\ufdb4\134\ufdb4\154\ufdb4\162\ufdb4\164\ufdb4\174" +
    "\ufdb4\233\ufdb4\001\002\000\052\006\264\007\242\011\274" +
    "\012\243\034\253\043\271\046\237\104\262\105\272\106" +
    "\267\107\265\110\241\115\273\116\270\376\254\377\256" +
    "\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\022\027" +
    "\ufdc6\101\ufdc6\134\ufdc6\154\ufdc6\162\ufdc6\164\ufdc6\174\ufdc6" +
    "\233\ufdc6\001\002\000\022\027\ufdb5\101\ufdb5\134\ufdb5\154" +
    "\ufdb5\162\ufdb5\164\ufdb5\174\ufdb5\233\ufdb5\001\002\000\024" +
    "\027\ufdc2\030\ufdc2\101\ufdc2\134\ufdc2\154\ufdc2\162\ufdc2\164" +
    "\ufdc2\174\ufdc2\233\ufdc2\001\002\000\024\027\ufdc1\030\ufdc1" +
    "\101\ufdc1\134\ufdc1\154\ufdc1\162\ufdc1\164\ufdc1\174\ufdc1\233" +
    "\ufdc1\001\002\000\022\027\ufdc5\101\ufdc5\134\ufdc5\154\ufdc5" +
    "\162\ufdc5\164\ufdc5\174\ufdc5\233\ufdc5\001\002\000\160\006" +
    "\ufcad\007\ufcad\010\ufcad\011\ufcad\027\ufcad\030\ufcad\034\ufcad" +
    "\035\ufcad\062\ufcad\070\ufcad\076\ufcad\100\ufcad\101\ufcad\116" +
    "\ufcad\117\ufcad\120\ufcad\121\ufcad\122\ufcad\123\ufcad\126\ufcad" +
    "\127\ufcad\130\ufcad\131\ufcad\134\ufcad\142\ufcad\143\ufcad\144" +
    "\ufcad\145\ufcad\146\ufcad\150\ufcad\151\ufcad\152\ufcad\153\ufcad" +
    "\154\ufcad\155\ufcad\161\ufcad\162\ufcad\164\ufcad\166\ufcad\170" +
    "\ufcad\171\ufcad\172\ufcad\173\ufcad\174\ufcad\201\ufcad\231\ufcad" +
    "\233\ufcad\234\ufcad\241\ufcad\274\ufcad\275\ufcad\277\ufcad\303" +
    "\ufcad\304\ufcad\312\ufcad\001\002\000\050\006\044\007\242" +
    "\011\274\034\253\043\271\046\237\104\262\105\272\106" +
    "\267\107\265\110\241\115\273\116\270\376\254\377\256" +
    "\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\050\006" +
    "\044\007\242\011\274\034\253\043\271\046\237\104\262" +
    "\105\272\106\267\107\265\110\241\115\273\116\270\376" +
    "\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002" +
    "\000\164\006\ufcaa\007\ufcaa\010\ufcaa\011\ufcaa\012\u01f3\013" +
    "\u01f2\027\ufcaa\030\ufcaa\034\ufcaa\035\ufcaa\062\ufcaa\070\ufcaa" +
    "\076\ufcaa\100\ufcaa\101\ufcaa\116\ufcaa\117\ufcaa\120\ufcaa\121" +
    "\ufcaa\122\ufcaa\123\ufcaa\126\ufcaa\127\ufcaa\130\ufcaa\131\ufcaa" +
    "\134\ufcaa\142\ufcaa\143\ufcaa\144\ufcaa\145\ufcaa\146\ufcaa\150" +
    "\ufcaa\151\ufcaa\152\ufcaa\153\ufcaa\154\ufcaa\155\ufcaa\161\ufcaa" +
    "\162\ufcaa\164\ufcaa\166\ufcaa\170\ufcaa\171\ufcaa\172\ufcaa\173" +
    "\ufcaa\174\ufcaa\201\ufcaa\231\ufcaa\233\ufcaa\234\ufcaa\241\ufcaa" +
    "\274\ufcaa\275\ufcaa\277\ufcaa\303\ufcaa\304\ufcaa\312\ufcaa\001" +
    "\002\000\160\006\ufcac\007\ufcac\010\ufcac\011\ufcac\027\ufcac" +
    "\030\ufcac\034\ufcac\035\ufcac\062\ufcac\070\ufcac\076\ufcac\100" +
    "\ufcac\101\ufcac\116\ufcac\117\ufcac\120\ufcac\121\ufcac\122\ufcac" +
    "\123\ufcac\126\ufcac\127\ufcac\130\ufcac\131\ufcac\134\ufcac\142" +
    "\ufcac\143\ufcac\144\ufcac\145\ufcac\146\ufcac\150\ufcac\151\ufcac" +
    "\152\ufcac\153\ufcac\154\ufcac\155\ufcac\161\ufcac\162\ufcac\164" +
    "\ufcac\166\ufcac\170\ufcac\171\ufcac\172\ufcac\173\ufcac\174\ufcac" +
    "\201\ufcac\231\ufcac\233\ufcac\234\ufcac\241\ufcac\274\ufcac\275" +
    "\ufcac\277\ufcac\303\ufcac\304\ufcac\312\ufcac\001\002\000\164" +
    "\006\ufcaa\007\ufcaa\010\ufcaa\011\ufcaa\012\u01f3\013\u01f2\027" +
    "\ufcaa\030\ufcaa\034\ufcaa\035\ufcaa\062\ufcaa\070\ufcaa\076\ufcaa" +
    "\100\ufcaa\101\ufcaa\116\ufcaa\117\ufcaa\120\ufcaa\121\ufcaa\122" +
    "\ufcaa\123\ufcaa\126\ufcaa\127\ufcaa\130\ufcaa\131\ufcaa\134\ufcaa" +
    "\142\ufcaa\143\ufcaa\144\ufcaa\145\ufcaa\146\ufcaa\150\ufcaa\151" +
    "\ufcaa\152\ufcaa\153\ufcaa\154\ufcaa\155\ufcaa\161\ufcaa\162\ufcaa" +
    "\164\ufcaa\166\ufcaa\170\ufcaa\171\ufcaa\172\ufcaa\173\ufcaa\174" +
    "\ufcaa\201\ufcaa\231\ufcaa\233\ufcaa\234\ufcaa\241\ufcaa\274\ufcaa" +
    "\275\ufcaa\277\ufcaa\303\ufcaa\304\ufcaa\312\ufcaa\001\002\000" +
    "\160\006\ufcab\007\ufcab\010\ufcab\011\ufcab\027\ufcab\030\ufcab" +
    "\034\ufcab\035\ufcab\062\ufcab\070\ufcab\076\ufcab\100\ufcab\101" +
    "\ufcab\116\ufcab\117\ufcab\120\ufcab\121\ufcab\122\ufcab\123\ufcab" +
    "\126\ufcab\127\ufcab\130\ufcab\131\ufcab\134\ufcab\142\ufcab\143" +
    "\ufcab\144\ufcab\145\ufcab\146\ufcab\150\ufcab\151\ufcab\152\ufcab" +
    "\153\ufcab\154\ufcab\155\ufcab\161\ufcab\162\ufcab\164\ufcab\166" +
    "\ufcab\170\ufcab\171\ufcab\172\ufcab\173\ufcab\174\ufcab\201\ufcab" +
    "\231\ufcab\233\ufcab\234\ufcab\241\ufcab\274\ufcab\275\ufcab\277" +
    "\ufcab\303\ufcab\304\ufcab\312\ufcab\001\002\000\054\006\044" +
    "\007\242\011\274\034\253\043\271\046\237\104\262\105" +
    "\272\106\267\107\265\110\241\111\312\112\314\115\273" +
    "\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103" +
    "\232\001\002\000\004\035\u01fa\001\002\000\202\006\ufc89" +
    "\007\ufc89\010\ufc89\011\ufc89\012\ufc89\013\ufc89\014\ufc89\015" +
    "\ufc89\016\ufc89\017\ufc89\020\ufc89\021\ufc89\023\ufc89\027\ufc89" +
    "\030\ufc89\034\ufc89\035\ufc89\062\ufc89\070\ufc89\076\ufc89\100" +
    "\ufc89\101\ufc89\116\ufc89\117\ufc89\120\ufc89\121\ufc89\122\ufc89" +
    "\123\ufc89\126\ufc89\127\ufc89\130\ufc89\131\ufc89\134\ufc89\142" +
    "\ufc89\143\ufc89\144\ufc89\145\ufc89\146\ufc89\150\ufc89\151\ufc89" +
    "\152\ufc89\153\ufc89\154\ufc89\155\ufc89\161\ufc89\162\ufc89\164" +
    "\ufc89\166\ufc89\170\ufc89\171\ufc89\172\ufc89\173\ufc89\174\ufc89" +
    "\201\ufc89\231\ufc89\233\ufc89\234\ufc89\241\ufc89\274\ufc89\275" +
    "\ufc89\277\ufc89\303\ufc89\304\ufc89\312\ufc89\001\002\000\034" +
    "\027\ufd9d\035\ufd9d\060\ufd9d\070\ufd9d\131\ufd9d\136\ufd9d\161" +
    "\ufd9d\173\ufd9d\233\ufd9d\310\ufd9d\353\ufd9d\356\ufd9d\375\ufd9d" +
    "\001\002\000\014\006\044\034\u01a3\043\u01a4\046\u01a5\115" +
    "\u019f\001\002\000\004\035\u01fe\001\002\000\054\006\ufd97" +
    "\007\ufd97\011\ufd97\012\ufd97\034\ufd97\043\ufd97\046\ufd97\072" +
    "\u0200\104\ufd97\105\ufd97\106\ufd97\107\ufd97\110\ufd97\115\ufd97" +
    "\116\ufd97\376\ufd97\377\ufd97\u0100\ufd97\u0101\ufd97\u0102\ufd97\u0103" +
    "\ufd97\001\002\000\052\006\264\007\242\011\274\012\243" +
    "\034\253\043\271\046\237\104\262\105\272\106\267\107" +
    "\265\110\241\115\273\116\270\376\254\377\256\u0100\236" +
    "\u0101\252\u0102\244\u0103\232\001\002\000\052\006\ufd98\007" +
    "\ufd98\011\ufd98\012\ufd98\034\ufd98\043\ufd98\046\ufd98\104\ufd98" +
    "\105\ufd98\106\ufd98\107\ufd98\110\ufd98\115\ufd98\116\ufd98\376" +
    "\ufd98\377\ufd98\u0100\ufd98\u0101\ufd98\u0102\ufd98\u0103\ufd98\001\002" +
    "\000\034\027\ufd9b\035\ufd9b\060\ufd9b\070\ufd9b\131\ufd9b\136" +
    "\ufd9b\161\ufd9b\173\ufd9b\233\ufd9b\310\ufd9b\353\ufd9b\356\ufd9b" +
    "\375\ufd9b\001\002\000\010\006\u0204\007\u0203\043\u0205\001" +
    "\002\000\010\030\ufc91\035\ufc91\154\ufc91\001\002\000\010" +
    "\030\ufc90\035\ufc90\154\ufc90\001\002\000\004\006\u020c\001" +
    "\002\000\004\030\u0207\001\002\000\014\006\044\034\u01a3" +
    "\043\u01a4\046\u01a5\115\u019f\001\002\000\004\030\u0209\001" +
    "\002\000\014\006\044\034\u01a3\043\u01a4\046\u01a5\115\u019f" +
    "\001\002\000\004\035\u020b\001\002\000\202\006\ufc9a\007" +
    "\ufc9a\010\ufc9a\011\ufc9a\012\ufc9a\013\ufc9a\014\ufc9a\015\ufc9a" +
    "\016\ufc9a\017\ufc9a\020\ufc9a\021\ufc9a\023\ufc9a\027\ufc9a\030" +
    "\ufc9a\034\ufc9a\035\ufc9a\062\ufc9a\070\ufc9a\076\ufc9a\100\ufc9a" +
    "\101\ufc9a\116\ufc9a\117\ufc9a\120\ufc9a\121\ufc9a\122\ufc9a\123" +
    "\ufc9a\126\ufc9a\127\ufc9a\130\ufc9a\131\ufc9a\134\ufc9a\142\ufc9a" +
    "\143\ufc9a\144\ufc9a\145\ufc9a\146\ufc9a\150\ufc9a\151\ufc9a\152" +
    "\ufc9a\153\ufc9a\154\ufc9a\155\ufc9a\161\ufc9a\162\ufc9a\164\ufc9a" +
    "\166\ufc9a\170\ufc9a\171\ufc9a\172\ufc9a\173\ufc9a\174\ufc9a\201" +
    "\ufc9a\231\ufc9a\233\ufc9a\234\ufc9a\241\ufc9a\274\ufc9a\275\ufc9a" +
    "\277\ufc9a\303\ufc9a\304\ufc9a\312\ufc9a\001\002\000\010\030" +
    "\ufc92\035\ufc92\154\ufc92\001\002\000\014\006\044\034\u01a3" +
    "\043\u01a4\046\u01a5\115\u019f\001\002\000\004\030\u020f\001" +
    "\002\000\014\006\044\034\u01a3\043\u01a4\046\u01a5\115\u019f" +
    "\001\002\000\004\035\u0211\001\002\000\202\006\ufc9b\007" +
    "\ufc9b\010\ufc9b\011\ufc9b\012\ufc9b\013\ufc9b\014\ufc9b\015\ufc9b" +
    "\016\ufc9b\017\ufc9b\020\ufc9b\021\ufc9b\023\ufc9b\027\ufc9b\030" +
    "\ufc9b\034\ufc9b\035\ufc9b\062\ufc9b\070\ufc9b\076\ufc9b\100\ufc9b" +
    "\101\ufc9b\116\ufc9b\117\ufc9b\120\ufc9b\121\ufc9b\122\ufc9b\123" +
    "\ufc9b\126\ufc9b\127\ufc9b\130\ufc9b\131\ufc9b\134\ufc9b\142\ufc9b" +
    "\143\ufc9b\144\ufc9b\145\ufc9b\146\ufc9b\150\ufc9b\151\ufc9b\152" +
    "\ufc9b\153\ufc9b\154\ufc9b\155\ufc9b\161\ufc9b\162\ufc9b\164\ufc9b" +
    "\166\ufc9b\170\ufc9b\171\ufc9b\172\ufc9b\173\ufc9b\174\ufc9b\201" +
    "\ufc9b\231\ufc9b\233\ufc9b\234\ufc9b\241\ufc9b\274\ufc9b\275\ufc9b" +
    "\277\ufc9b\303\ufc9b\304\ufc9b\312\ufc9b\001\002\000\010\006" +
    "\u0204\007\u0203\043\u0205\001\002\000\004\035\u0214\001\002" +
    "\000\202\006\ufc98\007\ufc98\010\ufc98\011\ufc98\012\ufc98\013" +
    "\ufc98\014\ufc98\015\ufc98\016\ufc98\017\ufc98\020\ufc98\021\ufc98" +
    "\023\ufc98\027\ufc98\030\ufc98\034\ufc98\035\ufc98\062\ufc98\070" +
    "\ufc98\076\ufc98\100\ufc98\101\ufc98\116\ufc98\117\ufc98\120\ufc98" +
    "\121\ufc98\122\ufc98\123\ufc98\126\ufc98\127\ufc98\130\ufc98\131" +
    "\ufc98\134\ufc98\142\ufc98\143\ufc98\144\ufc98\145\ufc98\146\ufc98" +
    "\150\ufc98\151\ufc98\152\ufc98\153\ufc98\154\ufc98\155\ufc98\161" +
    "\ufc98\162\ufc98\164\ufc98\166\ufc98\170\ufc98\171\ufc98\172\ufc98" +
    "\173\ufc98\174\ufc98\201\ufc98\231\ufc98\233\ufc98\234\ufc98\241" +
    "\ufc98\274\ufc98\275\ufc98\277\ufc98\303\ufc98\304\ufc98\312\ufc98" +
    "\001\002\000\050\006\044\007\242\011\274\034\253\043" +
    "\271\046\237\104\262\105\272\106\267\107\265\110\241" +
    "\115\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102" +
    "\244\u0103\232\001\002\000\050\006\044\007\242\011\274" +
    "\034\253\043\271\046\237\104\262\105\272\106\267\107" +
    "\265\110\241\115\273\116\270\376\254\377\256\u0100\236" +
    "\u0101\252\u0102\244\u0103\232\001\002\000\154\006\ufcb1\007" +
    "\ufcb1\027\ufcb1\030\ufcb1\034\ufcb1\035\ufcb1\062\ufcb1\070\ufcb1" +
    "\076\ufcb1\100\ufcb1\101\ufcb1\116\ufcb1\117\ufcb1\120\ufcb1\121" +
    "\ufcb1\122\ufcb1\123\ufcb1\126\ufcb1\127\ufcb1\130\ufcb1\131\ufcb1" +
    "\134\ufcb1\142\ufcb1\143\ufcb1\144\ufcb1\145\ufcb1\146\ufcb1\150" +
    "\ufcb1\151\ufcb1\152\ufcb1\153\ufcb1\154\ufcb1\155\ufcb1\161\ufcb1" +
    "\162\ufcb1\164\ufcb1\166\ufcb1\170\ufcb1\171\ufcb1\172\ufcb1\173" +
    "\ufcb1\174\ufcb1\201\ufcb1\231\ufcb1\233\ufcb1\234\ufcb1\241\ufcb1" +
    "\274\ufcb1\275\ufcb1\277\ufcb1\303\ufcb1\304\ufcb1\312\ufcb1\001" +
    "\002\000\160\006\ufcae\007\ufcae\010\u0216\011\u0215\027\ufcae" +
    "\030\ufcae\034\ufcae\035\ufcae\062\ufcae\070\ufcae\076\ufcae\100" +
    "\ufcae\101\ufcae\116\ufcae\117\ufcae\120\ufcae\121\ufcae\122\ufcae" +
    "\123\ufcae\126\ufcae\127\ufcae\130\ufcae\131\ufcae\134\ufcae\142" +
    "\ufcae\143\ufcae\144\ufcae\145\ufcae\146\ufcae\150\ufcae\151\ufcae" +
    "\152\ufcae\153\ufcae\154\ufcae\155\ufcae\161\ufcae\162\ufcae\164" +
    "\ufcae\166\ufcae\170\ufcae\171\ufcae\172\ufcae\173\ufcae\174\ufcae" +
    "\201\ufcae\231\ufcae\233\ufcae\234\ufcae\241\ufcae\274\ufcae\275" +
    "\ufcae\277\ufcae\303\ufcae\304\ufcae\312\ufcae\001\002\000\154" +
    "\006\ufcb0\007\ufcb0\027\ufcb0\030\ufcb0\034\ufcb0\035\ufcb0\062" +
    "\ufcb0\070\ufcb0\076\ufcb0\100\ufcb0\101\ufcb0\116\ufcb0\117\ufcb0" +
    "\120\ufcb0\121\ufcb0\122\ufcb0\123\ufcb0\126\ufcb0\127\ufcb0\130" +
    "\ufcb0\131\ufcb0\134\ufcb0\142\ufcb0\143\ufcb0\144\ufcb0\145\ufcb0" +
    "\146\ufcb0\150\ufcb0\151\ufcb0\152\ufcb0\153\ufcb0\154\ufcb0\155" +
    "\ufcb0\161\ufcb0\162\ufcb0\164\ufcb0\166\ufcb0\170\ufcb0\171\ufcb0" +
    "\172\ufcb0\173\ufcb0\174\ufcb0\201\ufcb0\231\ufcb0\233\ufcb0\234" +
    "\ufcb0\241\ufcb0\274\ufcb0\275\ufcb0\277\ufcb0\303\ufcb0\304\ufcb0" +
    "\312\ufcb0\001\002\000\160\006\ufcae\007\ufcae\010\u0216\011" +
    "\u0215\027\ufcae\030\ufcae\034\ufcae\035\ufcae\062\ufcae\070\ufcae" +
    "\076\ufcae\100\ufcae\101\ufcae\116\ufcae\117\ufcae\120\ufcae\121" +
    "\ufcae\122\ufcae\123\ufcae\126\ufcae\127\ufcae\130\ufcae\131\ufcae" +
    "\134\ufcae\142\ufcae\143\ufcae\144\ufcae\145\ufcae\146\ufcae\150" +
    "\ufcae\151\ufcae\152\ufcae\153\ufcae\154\ufcae\155\ufcae\161\ufcae" +
    "\162\ufcae\164\ufcae\166\ufcae\170\ufcae\171\ufcae\172\ufcae\173" +
    "\ufcae\174\ufcae\201\ufcae\231\ufcae\233\ufcae\234\ufcae\241\ufcae" +
    "\274\ufcae\275\ufcae\277\ufcae\303\ufcae\304\ufcae\312\ufcae\001" +
    "\002\000\154\006\ufcaf\007\ufcaf\027\ufcaf\030\ufcaf\034\ufcaf" +
    "\035\ufcaf\062\ufcaf\070\ufcaf\076\ufcaf\100\ufcaf\101\ufcaf\116" +
    "\ufcaf\117\ufcaf\120\ufcaf\121\ufcaf\122\ufcaf\123\ufcaf\126\ufcaf" +
    "\127\ufcaf\130\ufcaf\131\ufcaf\134\ufcaf\142\ufcaf\143\ufcaf\144" +
    "\ufcaf\145\ufcaf\146\ufcaf\150\ufcaf\151\ufcaf\152\ufcaf\153\ufcaf" +
    "\154\ufcaf\155\ufcaf\161\ufcaf\162\ufcaf\164\ufcaf\166\ufcaf\170" +
    "\ufcaf\171\ufcaf\172\ufcaf\173\ufcaf\174\ufcaf\201\ufcaf\231\ufcaf" +
    "\233\ufcaf\234\ufcaf\241\ufcaf\274\ufcaf\275\ufcaf\277\ufcaf\303" +
    "\ufcaf\304\ufcaf\312\ufcaf\001\002\000\050\006\044\007\242" +
    "\011\274\034\253\043\271\046\237\104\262\105\272\106" +
    "\267\107\265\110\241\115\273\116\270\376\254\377\256" +
    "\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\050\006" +
    "\044\007\242\011\274\034\253\043\271\046\237\104\262" +
    "\105\272\106\267\107\265\110\241\115\273\116\270\376" +
    "\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002" +
    "\000\050\006\044\007\242\011\274\034\253\043\271\046" +
    "\237\104\262\105\272\106\267\107\265\110\241\115\273" +
    "\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103" +
    "\232\001\002\000\050\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\104\262\105\272\106\267\107\265\110" +
    "\241\115\273\116\270\376\254\377\256\u0100\236\u0101\252" +
    "\u0102\244\u0103\232\001\002\000\050\006\044\007\242\011" +
    "\274\034\253\043\271\046\237\104\262\105\272\106\267" +
    "\107\265\110\241\115\273\116\270\376\254\377\256\u0100" +
    "\236\u0101\252\u0102\244\u0103\232\001\002\000\050\006\044" +
    "\007\242\011\274\034\253\043\271\046\237\104\262\105" +
    "\272\106\267\107\265\110\241\115\273\116\270\376\254" +
    "\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000" +
    "\050\006\044\007\242\011\274\034\253\043\271\046\237" +
    "\104\262\105\272\106\267\107\265\110\241\115\273\116" +
    "\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232" +
    "\001\002\000\164\006\ufca9\007\ufca9\010\ufca9\011\ufca9\012" +
    "\ufca9\013\ufca9\027\ufca9\030\ufca9\034\ufca9\035\ufca9\062\ufca9" +
    "\070\ufca9\076\ufca9\100\ufca9\101\ufca9\116\ufca9\117\ufca9\120" +
    "\ufca9\121\ufca9\122\ufca9\123\ufca9\126\ufca9\127\ufca9\130\ufca9" +
    "\131\ufca9\134\ufca9\142\ufca9\143\ufca9\144\ufca9\145\ufca9\146" +
    "\ufca9\150\ufca9\151\ufca9\152\ufca9\153\ufca9\154\ufca9\155\ufca9" +
    "\161\ufca9\162\ufca9\164\ufca9\166\ufca9\170\ufca9\171\ufca9\172" +
    "\ufca9\173\ufca9\174\ufca9\201\ufca9\231\ufca9\233\ufca9\234\ufca9" +
    "\241\ufca9\274\ufca9\275\ufca9\277\ufca9\303\ufca9\304\ufca9\312" +
    "\ufca9\001\002\000\202\006\ufca1\007\ufca1\010\ufca1\011\ufca1" +
    "\012\ufca1\013\ufca1\014\u021e\015\u0222\016\u021c\017\u0220\020" +
    "\u021d\021\u021f\023\u0221\027\ufca1\030\ufca1\034\ufca1\035\ufca1" +
    "\062\ufca1\070\ufca1\076\ufca1\100\ufca1\101\ufca1\116\ufca1\117" +
    "\ufca1\120\ufca1\121\ufca1\122\ufca1\123\ufca1\126\ufca1\127\ufca1" +
    "\130\ufca1\131\ufca1\134\ufca1\142\ufca1\143\ufca1\144\ufca1\145" +
    "\ufca1\146\ufca1\150\ufca1\151\ufca1\152\ufca1\153\ufca1\154\ufca1" +
    "\155\ufca1\161\ufca1\162\ufca1\164\ufca1\166\ufca1\170\ufca1\171" +
    "\ufca1\172\ufca1\173\ufca1\174\ufca1\201\ufca1\231\ufca1\233\ufca1" +
    "\234\ufca1\241\ufca1\274\ufca1\275\ufca1\277\ufca1\303\ufca1\304" +
    "\ufca1\312\ufca1\001\002\000\164\006\ufca8\007\ufca8\010\ufca8" +
    "\011\ufca8\012\ufca8\013\ufca8\027\ufca8\030\ufca8\034\ufca8\035" +
    "\ufca8\062\ufca8\070\ufca8\076\ufca8\100\ufca8\101\ufca8\116\ufca8" +
    "\117\ufca8\120\ufca8\121\ufca8\122\ufca8\123\ufca8\126\ufca8\127" +
    "\ufca8\130\ufca8\131\ufca8\134\ufca8\142\ufca8\143\ufca8\144\ufca8" +
    "\145\ufca8\146\ufca8\150\ufca8\151\ufca8\152\ufca8\153\ufca8\154" +
    "\ufca8\155\ufca8\161\ufca8\162\ufca8\164\ufca8\166\ufca8\170\ufca8" +
    "\171\ufca8\172\ufca8\173\ufca8\174\ufca8\201\ufca8\231\ufca8\233" +
    "\ufca8\234\ufca8\241\ufca8\274\ufca8\275\ufca8\277\ufca8\303\ufca8" +
    "\304\ufca8\312\ufca8\001\002\000\202\006\ufca1\007\ufca1\010" +
    "\ufca1\011\ufca1\012\ufca1\013\ufca1\014\u021e\015\u0222\016\u021c" +
    "\017\u0220\020\u021d\021\u021f\023\u0221\027\ufca1\030\ufca1\034" +
    "\ufca1\035\ufca1\062\ufca1\070\ufca1\076\ufca1\100\ufca1\101\ufca1" +
    "\116\ufca1\117\ufca1\120\ufca1\121\ufca1\122\ufca1\123\ufca1\126" +
    "\ufca1\127\ufca1\130\ufca1\131\ufca1\134\ufca1\142\ufca1\143\ufca1" +
    "\144\ufca1\145\ufca1\146\ufca1\150\ufca1\151\ufca1\152\ufca1\153" +
    "\ufca1\154\ufca1\155\ufca1\161\ufca1\162\ufca1\164\ufca1\166\ufca1" +
    "\170\ufca1\171\ufca1\172\ufca1\173\ufca1\174\ufca1\201\ufca1\231" +
    "\ufca1\233\ufca1\234\ufca1\241\ufca1\274\ufca1\275\ufca1\277\ufca1" +
    "\303\ufca1\304\ufca1\312\ufca1\001\002\000\164\006\ufca4\007" +
    "\ufca4\010\ufca4\011\ufca4\012\ufca4\013\ufca4\027\ufca4\030\ufca4" +
    "\034\ufca4\035\ufca4\062\ufca4\070\ufca4\076\ufca4\100\ufca4\101" +
    "\ufca4\116\ufca4\117\ufca4\120\ufca4\121\ufca4\122\ufca4\123\ufca4" +
    "\126\ufca4\127\ufca4\130\ufca4\131\ufca4\134\ufca4\142\ufca4\143" +
    "\ufca4\144\ufca4\145\ufca4\146\ufca4\150\ufca4\151\ufca4\152\ufca4" +
    "\153\ufca4\154\ufca4\155\ufca4\161\ufca4\162\ufca4\164\ufca4\166" +
    "\ufca4\170\ufca4\171\ufca4\172\ufca4\173\ufca4\174\ufca4\201\ufca4" +
    "\231\ufca4\233\ufca4\234\ufca4\241\ufca4\274\ufca4\275\ufca4\277" +
    "\ufca4\303\ufca4\304\ufca4\312\ufca4\001\002\000\202\006\ufca1" +
    "\007\ufca1\010\ufca1\011\ufca1\012\ufca1\013\ufca1\014\u021e\015" +
    "\u0222\016\u021c\017\u0220\020\u021d\021\u021f\023\u0221\027\ufca1" +
    "\030\ufca1\034\ufca1\035\ufca1\062\ufca1\070\ufca1\076\ufca1\100" +
    "\ufca1\101\ufca1\116\ufca1\117\ufca1\120\ufca1\121\ufca1\122\ufca1" +
    "\123\ufca1\126\ufca1\127\ufca1\130\ufca1\131\ufca1\134\ufca1\142" +
    "\ufca1\143\ufca1\144\ufca1\145\ufca1\146\ufca1\150\ufca1\151\ufca1" +
    "\152\ufca1\153\ufca1\154\ufca1\155\ufca1\161\ufca1\162\ufca1\164" +
    "\ufca1\166\ufca1\170\ufca1\171\ufca1\172\ufca1\173\ufca1\174\ufca1" +
    "\201\ufca1\231\ufca1\233\ufca1\234\ufca1\241\ufca1\274\ufca1\275" +
    "\ufca1\277\ufca1\303\ufca1\304\ufca1\312\ufca1\001\002\000\164" +
    "\006\ufca7\007\ufca7\010\ufca7\011\ufca7\012\ufca7\013\ufca7\027" +
    "\ufca7\030\ufca7\034\ufca7\035\ufca7\062\ufca7\070\ufca7\076\ufca7" +
    "\100\ufca7\101\ufca7\116\ufca7\117\ufca7\120\ufca7\121\ufca7\122" +
    "\ufca7\123\ufca7\126\ufca7\127\ufca7\130\ufca7\131\ufca7\134\ufca7" +
    "\142\ufca7\143\ufca7\144\ufca7\145\ufca7\146\ufca7\150\ufca7\151" +
    "\ufca7\152\ufca7\153\ufca7\154\ufca7\155\ufca7\161\ufca7\162\ufca7" +
    "\164\ufca7\166\ufca7\170\ufca7\171\ufca7\172\ufca7\173\ufca7\174" +
    "\ufca7\201\ufca7\231\ufca7\233\ufca7\234\ufca7\241\ufca7\274\ufca7" +
    "\275\ufca7\277\ufca7\303\ufca7\304\ufca7\312\ufca7\001\002\000" +
    "\202\006\ufca1\007\ufca1\010\ufca1\011\ufca1\012\ufca1\013\ufca1" +
    "\014\u021e\015\u0222\016\u021c\017\u0220\020\u021d\021\u021f\023" +
    "\u0221\027\ufca1\030\ufca1\034\ufca1\035\ufca1\062\ufca1\070\ufca1" +
    "\076\ufca1\100\ufca1\101\ufca1\116\ufca1\117\ufca1\120\ufca1\121" +
    "\ufca1\122\ufca1\123\ufca1\126\ufca1\127\ufca1\130\ufca1\131\ufca1" +
    "\134\ufca1\142\ufca1\143\ufca1\144\ufca1\145\ufca1\146\ufca1\150" +
    "\ufca1\151\ufca1\152\ufca1\153\ufca1\154\ufca1\155\ufca1\161\ufca1" +
    "\162\ufca1\164\ufca1\166\ufca1\170\ufca1\171\ufca1\172\ufca1\173" +
    "\ufca1\174\ufca1\201\ufca1\231\ufca1\233\ufca1\234\ufca1\241\ufca1" +
    "\274\ufca1\275\ufca1\277\ufca1\303\ufca1\304\ufca1\312\ufca1\001" +
    "\002\000\164\006\ufca3\007\ufca3\010\ufca3\011\ufca3\012\ufca3" +
    "\013\ufca3\027\ufca3\030\ufca3\034\ufca3\035\ufca3\062\ufca3\070" +
    "\ufca3\076\ufca3\100\ufca3\101\ufca3\116\ufca3\117\ufca3\120\ufca3" +
    "\121\ufca3\122\ufca3\123\ufca3\126\ufca3\127\ufca3\130\ufca3\131" +
    "\ufca3\134\ufca3\142\ufca3\143\ufca3\144\ufca3\145\ufca3\146\ufca3" +
    "\150\ufca3\151\ufca3\152\ufca3\153\ufca3\154\ufca3\155\ufca3\161" +
    "\ufca3\162\ufca3\164\ufca3\166\ufca3\170\ufca3\171\ufca3\172\ufca3" +
    "\173\ufca3\174\ufca3\201\ufca3\231\ufca3\233\ufca3\234\ufca3\241" +
    "\ufca3\274\ufca3\275\ufca3\277\ufca3\303\ufca3\304\ufca3\312\ufca3" +
    "\001\002\000\202\006\ufca1\007\ufca1\010\ufca1\011\ufca1\012" +
    "\ufca1\013\ufca1\014\u021e\015\u0222\016\u021c\017\u0220\020\u021d" +
    "\021\u021f\023\u0221\027\ufca1\030\ufca1\034\ufca1\035\ufca1\062" +
    "\ufca1\070\ufca1\076\ufca1\100\ufca1\101\ufca1\116\ufca1\117\ufca1" +
    "\120\ufca1\121\ufca1\122\ufca1\123\ufca1\126\ufca1\127\ufca1\130" +
    "\ufca1\131\ufca1\134\ufca1\142\ufca1\143\ufca1\144\ufca1\145\ufca1" +
    "\146\ufca1\150\ufca1\151\ufca1\152\ufca1\153\ufca1\154\ufca1\155" +
    "\ufca1\161\ufca1\162\ufca1\164\ufca1\166\ufca1\170\ufca1\171\ufca1" +
    "\172\ufca1\173\ufca1\174\ufca1\201\ufca1\231\ufca1\233\ufca1\234" +
    "\ufca1\241\ufca1\274\ufca1\275\ufca1\277\ufca1\303\ufca1\304\ufca1" +
    "\312\ufca1\001\002\000\164\006\ufca2\007\ufca2\010\ufca2\011" +
    "\ufca2\012\ufca2\013\ufca2\027\ufca2\030\ufca2\034\ufca2\035\ufca2" +
    "\062\ufca2\070\ufca2\076\ufca2\100\ufca2\101\ufca2\116\ufca2\117" +
    "\ufca2\120\ufca2\121\ufca2\122\ufca2\123\ufca2\126\ufca2\127\ufca2" +
    "\130\ufca2\131\ufca2\134\ufca2\142\ufca2\143\ufca2\144\ufca2\145" +
    "\ufca2\146\ufca2\150\ufca2\151\ufca2\152\ufca2\153\ufca2\154\ufca2" +
    "\155\ufca2\161\ufca2\162\ufca2\164\ufca2\166\ufca2\170\ufca2\171" +
    "\ufca2\172\ufca2\173\ufca2\174\ufca2\201\ufca2\231\ufca2\233\ufca2" +
    "\234\ufca2\241\ufca2\274\ufca2\275\ufca2\277\ufca2\303\ufca2\304" +
    "\ufca2\312\ufca2\001\002\000\202\006\ufca1\007\ufca1\010\ufca1" +
    "\011\ufca1\012\ufca1\013\ufca1\014\u021e\015\u0222\016\u021c\017" +
    "\u0220\020\u021d\021\u021f\023\u0221\027\ufca1\030\ufca1\034\ufca1" +
    "\035\ufca1\062\ufca1\070\ufca1\076\ufca1\100\ufca1\101\ufca1\116" +
    "\ufca1\117\ufca1\120\ufca1\121\ufca1\122\ufca1\123\ufca1\126\ufca1" +
    "\127\ufca1\130\ufca1\131\ufca1\134\ufca1\142\ufca1\143\ufca1\144" +
    "\ufca1\145\ufca1\146\ufca1\150\ufca1\151\ufca1\152\ufca1\153\ufca1" +
    "\154\ufca1\155\ufca1\161\ufca1\162\ufca1\164\ufca1\166\ufca1\170" +
    "\ufca1\171\ufca1\172\ufca1\173\ufca1\174\ufca1\201\ufca1\231\ufca1" +
    "\233\ufca1\234\ufca1\241\ufca1\274\ufca1\275\ufca1\277\ufca1\303" +
    "\ufca1\304\ufca1\312\ufca1\001\002\000\164\006\ufca6\007\ufca6" +
    "\010\ufca6\011\ufca6\012\ufca6\013\ufca6\027\ufca6\030\ufca6\034" +
    "\ufca6\035\ufca6\062\ufca6\070\ufca6\076\ufca6\100\ufca6\101\ufca6" +
    "\116\ufca6\117\ufca6\120\ufca6\121\ufca6\122\ufca6\123\ufca6\126" +
    "\ufca6\127\ufca6\130\ufca6\131\ufca6\134\ufca6\142\ufca6\143\ufca6" +
    "\144\ufca6\145\ufca6\146\ufca6\150\ufca6\151\ufca6\152\ufca6\153" +
    "\ufca6\154\ufca6\155\ufca6\161\ufca6\162\ufca6\164\ufca6\166\ufca6" +
    "\170\ufca6\171\ufca6\172\ufca6\173\ufca6\174\ufca6\201\ufca6\231" +
    "\ufca6\233\ufca6\234\ufca6\241\ufca6\274\ufca6\275\ufca6\277\ufca6" +
    "\303\ufca6\304\ufca6\312\ufca6\001\002\000\202\006\ufca1\007" +
    "\ufca1\010\ufca1\011\ufca1\012\ufca1\013\ufca1\014\u021e\015\u0222" +
    "\016\u021c\017\u0220\020\u021d\021\u021f\023\u0221\027\ufca1\030" +
    "\ufca1\034\ufca1\035\ufca1\062\ufca1\070\ufca1\076\ufca1\100\ufca1" +
    "\101\ufca1\116\ufca1\117\ufca1\120\ufca1\121\ufca1\122\ufca1\123" +
    "\ufca1\126\ufca1\127\ufca1\130\ufca1\131\ufca1\134\ufca1\142\ufca1" +
    "\143\ufca1\144\ufca1\145\ufca1\146\ufca1\150\ufca1\151\ufca1\152" +
    "\ufca1\153\ufca1\154\ufca1\155\ufca1\161\ufca1\162\ufca1\164\ufca1" +
    "\166\ufca1\170\ufca1\171\ufca1\172\ufca1\173\ufca1\174\ufca1\201" +
    "\ufca1\231\ufca1\233\ufca1\234\ufca1\241\ufca1\274\ufca1\275\ufca1" +
    "\277\ufca1\303\ufca1\304\ufca1\312\ufca1\001\002\000\164\006" +
    "\ufca5\007\ufca5\010\ufca5\011\ufca5\012\ufca5\013\ufca5\027\ufca5" +
    "\030\ufca5\034\ufca5\035\ufca5\062\ufca5\070\ufca5\076\ufca5\100" +
    "\ufca5\101\ufca5\116\ufca5\117\ufca5\120\ufca5\121\ufca5\122\ufca5" +
    "\123\ufca5\126\ufca5\127\ufca5\130\ufca5\131\ufca5\134\ufca5\142" +
    "\ufca5\143\ufca5\144\ufca5\145\ufca5\146\ufca5\150\ufca5\151\ufca5" +
    "\152\ufca5\153\ufca5\154\ufca5\155\ufca5\161\ufca5\162\ufca5\164" +
    "\ufca5\166\ufca5\170\ufca5\171\ufca5\172\ufca5\173\ufca5\174\ufca5" +
    "\201\ufca5\231\ufca5\233\ufca5\234\ufca5\241\ufca5\274\ufca5\275" +
    "\ufca5\277\ufca5\303\ufca5\304\ufca5\312\ufca5\001\002\000\050" +
    "\006\044\007\242\011\274\034\253\043\271\046\237\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001" +
    "\002\000\004\035\u0238\001\002\000\006\030\u0235\035\ufd0e" +
    "\001\002\000\050\006\044\007\242\011\274\034\253\043" +
    "\271\046\237\104\262\105\272\106\267\107\265\110\241" +
    "\115\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102" +
    "\244\u0103\232\001\002\000\004\035\ufd10\001\002\000\004" +
    "\035\ufd0f\001\002\000\032\006\u023c\007\u023b\027\ufdbc\030" +
    "\ufdbc\101\ufdbc\117\u023a\134\ufdbc\154\ufdbc\162\ufdbc\164\ufdbc" +
    "\174\ufdbc\233\ufdbc\001\002\000\024\027\ufdb4\030\u01eb\101" +
    "\ufdb4\134\ufdb4\154\ufdb4\162\ufdb4\164\ufdb4\174\ufdb4\233\ufdb4" +
    "\001\002\000\006\006\u023e\007\u023d\001\002\000\024\027" +
    "\ufdbd\030\ufdbd\101\ufdbd\134\ufdbd\154\ufdbd\162\ufdbd\164\ufdbd" +
    "\174\ufdbd\233\ufdbd\001\002\000\024\027\ufdbf\030\ufdbf\101" +
    "\ufdbf\134\ufdbf\154\ufdbf\162\ufdbf\164\ufdbf\174\ufdbf\233\ufdbf" +
    "\001\002\000\024\027\ufdbe\030\ufdbe\101\ufdbe\134\ufdbe\154" +
    "\ufdbe\162\ufdbe\164\ufdbe\174\ufdbe\233\ufdbe\001\002\000\024" +
    "\027\ufdc0\030\ufdc0\101\ufdc0\134\ufdc0\154\ufdc0\162\ufdc0\164" +
    "\ufdc0\174\ufdc0\233\ufdc0\001\002\000\022\027\ufdc3\101\ufdc3" +
    "\134\ufdc3\154\ufdc3\162\ufdc3\164\ufdc3\174\ufdc3\233\ufdc3\001" +
    "\002\000\024\027\ufdb4\030\u01eb\101\ufdb4\134\ufdb4\154\ufdb4" +
    "\162\ufdb4\164\ufdb4\174\ufdb4\233\ufdb4\001\002\000\022\027" +
    "\ufdc4\101\ufdc4\134\ufdc4\154\ufdc4\162\ufdc4\164\ufdc4\174\ufdc4" +
    "\233\ufdc4\001\002\000\010\006\u0204\007\u0203\043\u0205\001" +
    "\002\000\004\035\u0244\001\002\000\202\006\ufc97\007\ufc97" +
    "\010\ufc97\011\ufc97\012\ufc97\013\ufc97\014\ufc97\015\ufc97\016" +
    "\ufc97\017\ufc97\020\ufc97\021\ufc97\023\ufc97\027\ufc97\030\ufc97" +
    "\034\ufc97\035\ufc97\062\ufc97\070\ufc97\076\ufc97\100\ufc97\101" +
    "\ufc97\116\ufc97\117\ufc97\120\ufc97\121\ufc97\122\ufc97\123\ufc97" +
    "\126\ufc97\127\ufc97\130\ufc97\131\ufc97\134\ufc97\142\ufc97\143" +
    "\ufc97\144\ufc97\145\ufc97\146\ufc97\150\ufc97\151\ufc97\152\ufc97" +
    "\153\ufc97\154\ufc97\155\ufc97\161\ufc97\162\ufc97\164\ufc97\166" +
    "\ufc97\170\ufc97\171\ufc97\172\ufc97\173\ufc97\174\ufc97\201\ufc97" +
    "\231\ufc97\233\ufc97\234\ufc97\241\ufc97\274\ufc97\275\ufc97\277" +
    "\ufc97\303\ufc97\304\ufc97\312\ufc97\001\002\000\022\027\ufdc7" +
    "\101\ufdc7\134\ufdc7\154\ufdc7\162\ufdc7\164\ufdc7\174\ufdc7\233" +
    "\ufdc7\001\002\000\054\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\104\262\105\272\106\267\107\265\110" +
    "\241\111\312\112\314\115\273\116\270\376\254\377\256" +
    "\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\004\035" +
    "\u0248\001\002\000\202\006\ufc85\007\ufc85\010\ufc85\011\ufc85" +
    "\012\ufc85\013\ufc85\014\ufc85\015\ufc85\016\ufc85\017\ufc85\020" +
    "\ufc85\021\ufc85\023\ufc85\027\ufc85\030\ufc85\034\ufc85\035\ufc85" +
    "\062\ufc85\070\ufc85\076\ufc85\100\ufc85\101\ufc85\116\ufc85\117" +
    "\ufc85\120\ufc85\121\ufc85\122\ufc85\123\ufc85\126\ufc85\127\ufc85" +
    "\130\ufc85\131\ufc85\134\ufc85\142\ufc85\143\ufc85\144\ufc85\145" +
    "\ufc85\146\ufc85\150\ufc85\151\ufc85\152\ufc85\153\ufc85\154\ufc85" +
    "\155\ufc85\161\ufc85\162\ufc85\164\ufc85\166\ufc85\170\ufc85\171" +
    "\ufc85\172\ufc85\173\ufc85\174\ufc85\201\ufc85\231\ufc85\233\ufc85" +
    "\234\ufc85\241\ufc85\274\ufc85\275\ufc85\277\ufc85\303\ufc85\304" +
    "\ufc85\312\ufc85\001\002\000\034\027\ufd9e\035\ufd9e\060\ufd9e" +
    "\070\ufd9e\131\ufd9e\136\ufd9e\161\ufd9e\173\ufd9e\233\ufd9e\310" +
    "\ufd9e\353\ufd9e\356\ufd9e\375\ufd9e\001\002\000\010\006\u0204" +
    "\007\u0203\043\u0205\001\002\000\004\030\u024c\001\002\000" +
    "\010\006\u0204\007\u0203\043\u0205\001\002\000\004\030\u024e" +
    "\001\002\000\010\006\u0204\007\u0203\043\u0205\001\002\000" +
    "\004\035\u0250\001\002\000\202\006\ufc99\007\ufc99\010\ufc99" +
    "\011\ufc99\012\ufc99\013\ufc99\014\ufc99\015\ufc99\016\ufc99\017" +
    "\ufc99\020\ufc99\021\ufc99\023\ufc99\027\ufc99\030\ufc99\034\ufc99" +
    "\035\ufc99\062\ufc99\070\ufc99\076\ufc99\100\ufc99\101\ufc99\116" +
    "\ufc99\117\ufc99\120\ufc99\121\ufc99\122\ufc99\123\ufc99\126\ufc99" +
    "\127\ufc99\130\ufc99\131\ufc99\134\ufc99\142\ufc99\143\ufc99\144" +
    "\ufc99\145\ufc99\146\ufc99\150\ufc99\151\ufc99\152\ufc99\153\ufc99" +
    "\154\ufc99\155\ufc99\161\ufc99\162\ufc99\164\ufc99\166\ufc99\170" +
    "\ufc99\171\ufc99\172\ufc99\173\ufc99\174\ufc99\201\ufc99\231\ufc99" +
    "\233\ufc99\234\ufc99\241\ufc99\274\ufc99\275\ufc99\277\ufc99\303" +
    "\ufc99\304\ufc99\312\ufc99\001\002\000\010\006\u0204\007\u0203" +
    "\043\u0205\001\002\000\006\035\ufc93\154\u0253\001\002\000" +
    "\010\006\u0204\007\u0203\043\u0205\001\002\000\004\035\u0255" +
    "\001\002\000\202\006\ufc96\007\ufc96\010\ufc96\011\ufc96\012" +
    "\ufc96\013\ufc96\014\ufc96\015\ufc96\016\ufc96\017\ufc96\020\ufc96" +
    "\021\ufc96\023\ufc96\027\ufc96\030\ufc96\034\ufc96\035\ufc96\062" +
    "\ufc96\070\ufc96\076\ufc96\100\ufc96\101\ufc96\116\ufc96\117\ufc96" +
    "\120\ufc96\121\ufc96\122\ufc96\123\ufc96\126\ufc96\127\ufc96\130" +
    "\ufc96\131\ufc96\134\ufc96\142\ufc96\143\ufc96\144\ufc96\145\ufc96" +
    "\146\ufc96\150\ufc96\151\ufc96\152\ufc96\153\ufc96\154\ufc96\155" +
    "\ufc96\161\ufc96\162\ufc96\164\ufc96\166\ufc96\170\ufc96\171\ufc96" +
    "\172\ufc96\173\ufc96\174\ufc96\201\ufc96\231\ufc96\233\ufc96\234" +
    "\ufc96\241\ufc96\274\ufc96\275\ufc96\277\ufc96\303\ufc96\304\ufc96" +
    "\312\ufc96\001\002\000\004\035\ufc94\001\002\000\006\027" +
    "\uffe8\233\uffe8\001\002\000\004\131\u03a5\001\002\000\004" +
    "\006\044\001\002\000\006\027\uffe6\233\uffe6\001\002\000" +
    "\004\354\u025c\001\002\000\004\355\u025e\001\002\000\006" +
    "\027\uffe7\233\uffe7\001\002\000\004\154\u025f\001\002\000" +
    "\004\006\044\001\002\000\010\027\uffe3\101\u0262\233\uffe3" +
    "\001\002\000\006\027\uffe5\233\uffe5\001\002\000\004\043" +
    "\u0264\001\002\000\006\027\uffe4\233\uffe4\001\002\000\004" +
    "\006\u0265\001\002\000\012\027\uffe0\030\u0266\233\uffe0\371" +
    "\uffe0\001\002\000\004\043\u03a2\001\002\000\010\027\uffcf" +
    "\233\uffcf\371\u0269\001\002\000\006\027\uffe2\233\uffe2\001" +
    "\002\000\050\006\044\007\242\011\274\034\253\043\u026b" +
    "\046\237\104\262\105\272\106\267\107\265\110\241\115" +
    "\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244" +
    "\u0103\232\001\002\000\012\070\u0275\131\u0271\161\u0274\173" +
    "\231\001\002\000\006\006\310\043\u026c\001\002\000\004" +
    "\372\u026d\001\002\000\004\021\u026e\001\002\000\004\115" +
    "\u026f\001\002\000\014\066\u0276\070\u0275\131\u0271\161\u0274" +
    "\173\231\001\002\000\024\027\ufee8\070\u027c\131\u0271\161" +
    "\u0274\173\231\233\ufee8\310\ufee8\356\ufee8\375\ufee8\001\002" +
    "\000\014\006\044\043\u0368\071\u0364\073\365\074\357\001" +
    "\002\000\024\027\ufee8\070\u027c\131\u0271\161\u0274\173\231" +
    "\233\ufee8\310\ufee8\356\ufee8\375\ufee8\001\002\000\010\027" +
    "\uffcb\233\uffcb\356\u0334\001\002\000\016\006\044\043\u0341" +
    "\071\u033e\073\365\074\357\154\u0342\001\002\000\016\006" +
    "\044\043\u0283\071\u0280\073\365\074\357\101\u027f\001\002" +
    "\000\012\070\u0275\131\u0271\161\u0274\173\231\001\002\000" +
    "\006\027\uffd1\233\uffd1\001\002\000\024\027\ufee8\070\u027c" +
    "\131\u0271\161\u0274\173\231\233\ufee8\310\ufee8\356\ufee8\375" +
    "\ufee8\001\002\000\024\027\ufee3\070\u0289\131\u0271\161\u0274" +
    "\173\231\233\ufee3\310\ufee3\356\ufee3\375\ufee3\001\002\000" +
    "\024\027\ufee3\070\u0289\131\u0271\161\u0274\173\231\233\ufee3" +
    "\310\ufee3\356\ufee3\375\ufee3\001\002\000\024\027\ufee3\070" +
    "\u0289\131\u0271\161\u0274\173\231\233\ufee3\310\ufee3\356\ufee3" +
    "\375\ufee3\001\002\000\016\006\044\043\u0283\071\u0280\073" +
    "\365\074\357\101\u027f\001\002\000\014\027\ufeef\233\ufeef" +
    "\310\ufeef\356\ufeef\375\ufeef\001\002\000\022\006\ufccf\034" +
    "\u0290\043\ufccf\075\u0298\076\u0291\100\u028f\102\004\103\035" +
    "\001\002\000\012\006\044\043\u0283\073\365\074\357\001" +
    "\002\000\004\034\u0326\001\002\000\022\006\ufccf\034\u0290" +
    "\043\ufccf\075\u0298\076\u0291\100\u028f\102\004\103\035\001" +
    "\002\000\006\027\ufc68\233\ufc68\001\002\000\004\006\u028e" +
    "\001\002\000\006\027\ufc6c\233\ufc6c\001\002\000\006\027" +
    "\135\233\133\001\002\000\024\027\ufee3\070\u0289\131\u0271" +
    "\161\u0274\173\231\233\ufee3\310\ufee3\356\ufee3\375\ufee3\001" +
    "\002\000\014\027\ufee7\233\ufee7\310\ufee7\356\ufee7\375\ufee7" +
    "\001\002\000\014\027\ufee6\233\ufee6\310\ufee6\356\ufee6\375" +
    "\ufee6\001\002\000\016\006\044\043\u0283\071\u0280\073\365" +
    "\074\357\101\u027f\001\002\000\014\027\ufee5\233\ufee5\310" +
    "\ufee5\356\ufee5\375\ufee5\001\002\000\014\027\ufee9\233\ufee9" +
    "\310\ufee9\356\ufee9\375\ufee9\001\002\000\006\027\135\233" +
    "\133\001\002\000\014\027\ufee4\233\ufee4\310\ufee4\356\ufee4" +
    "\375\ufee4\001\002\000\022\006\ufccf\034\u0290\043\ufccf\075" +
    "\u0298\076\u0291\100\u028f\102\004\103\035\001\002\000\020" +
    "\006\u0308\034\u01a3\043\u01a4\046\u01a5\113\u0306\114\u0305\115" +
    "\u019f\001\002\000\004\006\u011f\001\002\000\004\075\u02ff" +
    "\001\002\000\006\027\ufc61\233\ufc61\001\002\000\006\027" +
    "\ufc63\233\ufc63\001\002\000\006\006\044\043\u02c8\001\002" +
    "\000\006\027\ufc65\233\ufc65\001\002\000\006\027\ufc5e\233" +
    "\ufc5e\001\002\000\016\006\ufccf\043\ufccf\075\u0298\076\u0291" +
    "\102\004\103\035\001\002\000\004\034\u0299\001\002\000" +
    "\052\006\044\007\242\011\274\034\253\043\271\046\237" +
    "\076\u029c\104\262\105\272\106\267\107\265\110\241\115" +
    "\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244" +
    "\u0103\232\001\002\000\006\030\u02a5\035\ufc4c\001\002\000" +
    "\040\010\ufc9e\011\ufc9e\012\ufc9e\013\ufc9e\014\ufc9e\015\ufc9e" +
    "\016\ufc9e\017\ufc9e\020\ufc9e\021\ufc9e\023\ufc9e\030\ufc9e\034" +
    "\u02a9\035\ufc9e\041\u02a8\001\002\000\006\030\u02a5\035\ufc4c" +
    "\001\002\000\004\035\u029e\001\002\000\010\027\ufc4a\030" +
    "\u029f\233\ufc4a\001\002\000\004\034\u02a1\001\002\000\006" +
    "\027\ufc60\233\ufc60\001\002\000\052\006\044\007\242\011" +
    "\274\034\253\043\271\046\237\076\u029c\104\262\105\272" +
    "\106\267\107\265\110\241\115\273\116\270\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\004" +
    "\035\u02a3\001\002\000\010\027\ufc4a\030\u029f\233\ufc4a\001" +
    "\002\000\006\027\ufc4b\233\ufc4b\001\002\000\052\006\044" +
    "\007\242\011\274\034\253\043\271\046\237\076\u029c\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001" +
    "\002\000\004\035\ufc5d\001\002\000\004\035\ufc4d\001\002" +
    "\000\004\035\ufc5a\001\002\000\016\006\u02ab\007\u02aa\035" +
    "\ufc54\043\u02ae\046\u02ad\115\u02af\001\002\000\006\030\u02b0" +
    "\035\ufc4e\001\002\000\006\030\u02b0\035\ufc4e\001\002\000" +
    "\004\035\u02c0\001\002\000\006\030\u02b0\035\ufc4e\001\002" +
    "\000\004\006\u02bd\001\002\000\006\030\u02b0\035\ufc4e\001" +
    "\002\000\014\006\u02b3\007\u02b2\043\u02b5\046\u02b4\115\u02b6" +
    "\001\002\000\004\035\ufc56\001\002\000\006\030\u02b0\035" +
    "\ufc4e\001\002\000\006\030\u02b0\035\ufc4e\001\002\000\006" +
    "\030\u02b0\035\ufc4e\001\002\000\004\006\u02b8\001\002\000" +
    "\006\030\u02b0\035\ufc4e\001\002\000\004\035\ufc50\001\002" +
    "\000\006\030\u02b0\035\ufc4e\001\002\000\004\035\ufc51\001" +
    "\002\000\004\035\ufc4f\001\002\000\004\035\ufc53\001\002" +
    "\000\004\035\ufc52\001\002\000\006\030\u02b0\035\ufc4e\001" +
    "\002\000\004\035\ufc57\001\002\000\004\035\ufc55\001\002" +
    "\000\004\035\ufc5b\001\002\000\004\035\ufc59\001\002\000" +
    "\004\035\ufc58\001\002\000\004\035\ufc5c\001\002\000\006" +
    "\027\ufc62\233\ufc62\001\002\000\006\027\ufccd\233\ufccd\001" +
    "\002\000\022\006\u02d3\007\u02ca\027\u02fc\043\u02d0\046\u02d2" +
    "\076\u02ce\115\u02cb\233\ufcb4\001\002\000\004\027\u02fa\001" +
    "\002\000\004\006\u02c9\001\002\000\024\006\u02d3\007\u02ca" +
    "\021\u02d1\027\ufcb4\043\u02d0\046\u02d2\076\u02ce\115\u02cb\233" +
    "\ufcb4\001\002\000\010\027\ufcb2\030\u02d4\233\ufcb2\001\002" +
    "\000\010\027\ufcb2\030\u02d4\233\ufcb2\001\002\000\006\027" +
    "\ufccb\233\ufccb\001\002\000\006\027\ufcc4\233\ufcc4\001\002" +
    "\000\010\027\ufcb2\030\u02d4\233\ufcb2\001\002\000\006\027" +
    "\ufcce\233\ufcce\001\002\000\004\006\u02e1\001\002\000\006" +
    "\006\044\043\u02da\001\002\000\010\027\ufcb2\030\u02d4\233" +
    "\ufcb2\001\002\000\010\027\ufcb2\030\u02d4\233\ufcb2\001\002" +
    "\000\022\006\u02d3\007\u02ca\027\ufcb4\043\u02d0\046\u02d2\076" +
    "\u02ce\115\u02cb\233\ufcb4\001\002\000\006\027\ufcb6\233\ufcb6" +
    "\001\002\000\006\027\ufcb3\233\ufcb3\001\002\000\006\027" +
    "\ufcb8\233\ufcb8\001\002\000\022\006\u02d3\007\u02ca\027\u02de" +
    "\043\u02d0\046\u02d2\076\u02ce\115\u02cb\233\ufcb4\001\002\000" +
    "\006\027\ufccc\233\ufccc\001\002\000\004\006\u02db\001\002" +
    "\000\022\006\u02d3\007\u02ca\027\ufcb4\043\u02d0\046\u02d2\076" +
    "\u02ce\115\u02cb\233\ufcb4\001\002\000\006\027\ufcc6\233\ufcc6" +
    "\001\002\000\006\027\ufcc7\233\ufcc7\001\002\000\004\115" +
    "\u02df\001\002\000\022\006\u02d3\007\u02ca\027\ufcb4\043\u02d0" +
    "\046\u02d2\076\u02ce\115\u02cb\233\ufcb4\001\002\000\006\027" +
    "\ufcc8\233\ufcc8\001\002\000\014\021\u02e5\027\ufcb2\030\u02d4" +
    "\100\u02e2\233\ufcb2\001\002\000\010\027\ufcb2\030\u02d4\233" +
    "\ufcb2\001\002\000\006\027\ufcc1\233\ufcc1\001\002\000\006" +
    "\027\ufcc5\233\ufcc5\001\002\000\016\006\u02e9\007\u02e7\043" +
    "\u02eb\046\u02ea\076\u02e6\115\u02ec\001\002\000\010\027\ufcb2" +
    "\030\u02d4\233\ufcb2\001\002\000\010\027\ufcb2\030\u02d4\233" +
    "\ufcb2\001\002\000\006\027\ufcc3\233\ufcc3\001\002\000\010" +
    "\027\ufcb2\030\u02d4\233\ufcb2\001\002\000\010\027\ufcb2\030" +
    "\u02d4\233\ufcb2\001\002\000\004\006\u02ee\001\002\000\010" +
    "\027\ufcb2\030\u02d4\233\ufcb2\001\002\000\006\027\ufcc0\233" +
    "\ufcc0\001\002\000\012\027\ufcb2\030\u02d4\100\u02ef\233\ufcb2" +
    "\001\002\000\010\027\ufcb2\030\u02d4\233\ufcb2\001\002\000" +
    "\006\027\ufcba\233\ufcba\001\002\000\006\027\ufcbb\233\ufcbb" +
    "\001\002\000\006\027\ufcbf\233\ufcbf\001\002\000\006\027" +
    "\ufcbd\233\ufcbd\001\002\000\006\027\ufcbe\233\ufcbe\001\002" +
    "\000\006\027\ufcbc\233\ufcbc\001\002\000\006\027\ufcc2\233" +
    "\ufcc2\001\002\000\006\027\ufcb5\233\ufcb5\001\002\000\006" +
    "\027\ufcb9\233\ufcb9\001\002\000\006\027\ufcb7\233\ufcb7\001" +
    "\002\000\006\027\ufcd2\233\ufcd2\001\002\000\006\027\ufcc9" +
    "\233\ufcc9\001\002\000\004\115\u02fd\001\002\000\022\006" +
    "\u02d3\007\u02ca\027\ufcb4\043\u02d0\046\u02d2\076\u02ce\115\u02cb" +
    "\233\ufcb4\001\002\000\006\027\ufcca\233\ufcca\001\002\000" +
    "\006\027\ufc5f\233\ufc5f\001\002\000\004\035\u0301\001\002" +
    "\000\020\006\ufccf\043\ufccf\075\u0298\076\u0291\100\u028f\102" +
    "\004\103\035\001\002\000\006\027\ufc64\233\ufc64\001\002" +
    "\000\030\006\ufce2\027\ufce2\043\ufce2\075\ufce2\076\ufce2\101" +
    "\u031c\102\ufce2\103\ufce2\134\ufce2\154\ufce2\233\ufce2\001\002" +
    "\000\034\006\ufcd9\027\ufcd9\030\ufcd9\043\ufcd9\075\ufcd9\076" +
    "\ufcd9\101\ufcd9\102\ufcd9\103\ufcd9\117\u030b\134\ufcd9\154\ufcd9" +
    "\233\ufcd9\001\002\000\004\031\u0317\001\002\000\004\031" +
    "\u0313\001\002\000\034\006\ufcd9\027\ufcd9\030\ufcd9\043\ufcd9" +
    "\075\ufcd9\076\ufcd9\101\ufcd9\102\ufcd9\103\ufcd9\117\u030b\134" +
    "\ufcd9\154\ufcd9\233\ufcd9\001\002\000\046\006\ufbf2\010\ufbf2" +
    "\011\ufbf2\012\ufbf2\013\ufbf2\027\ufbf2\030\ufbf2\031\u0309\043" +
    "\ufbf2\075\ufbf2\076\ufbf2\101\ufbf2\102\ufbf2\103\ufbf2\117\ufbf2" +
    "\134\ufbf2\154\ufbf2\233\ufbf2\001\002\000\006\006\171\012" +
    "\u030a\001\002\000\034\006\ufcd9\027\ufcd9\030\ufcd9\043\ufcd9" +
    "\075\ufcd9\076\ufcd9\101\ufcd9\102\ufcd9\103\ufcd9\117\u030b\134" +
    "\ufcd9\154\ufcd9\233\ufcd9\001\002\000\004\006\u0310\001\002" +
    "\000\032\006\ufcd7\027\ufcd7\030\u030d\043\ufcd7\075\ufcd7\076" +
    "\ufcd7\101\ufcd7\102\ufcd7\103\ufcd7\134\ufcd7\154\ufcd7\233\ufcd7" +
    "\001\002\000\020\006\u0308\034\u01a3\043\u01a4\046\u01a5\113" +
    "\u0306\114\u0305\115\u019f\001\002\000\030\006\ufcdb\027\ufcdb" +
    "\043\ufcdb\075\ufcdb\076\ufcdb\101\ufcdb\102\ufcdb\103\ufcdb\134" +
    "\ufcdb\154\ufcdb\233\ufcdb\001\002\000\030\006\ufcd8\027\ufcd8" +
    "\043\ufcd8\075\ufcd8\076\ufcd8\101\ufcd8\102\ufcd8\103\ufcd8\134" +
    "\ufcd8\154\ufcd8\233\ufcd8\001\002\000\032\006\ufcda\027\ufcda" +
    "\030\ufcda\043\ufcda\075\ufcda\076\ufcda\101\ufcda\102\ufcda\103" +
    "\ufcda\134\ufcda\154\ufcda\233\ufcda\001\002\000\032\006\ufcd7" +
    "\027\ufcd7\030\u030d\043\ufcd7\075\ufcd7\076\ufcd7\101\ufcd7\102" +
    "\ufcd7\103\ufcd7\134\ufcd7\154\ufcd7\233\ufcd7\001\002\000\030" +
    "\006\ufcdd\027\ufcdd\043\ufcdd\075\ufcdd\076\ufcdd\101\ufcdd\102" +
    "\ufcdd\103\ufcdd\134\ufcdd\154\ufcdd\233\ufcdd\001\002\000\006" +
    "\006\u0315\012\u0316\001\002\000\034\006\ufcd6\027\ufcd6\030" +
    "\ufcd6\043\ufcd6\075\ufcd6\076\ufcd6\101\ufcd6\102\ufcd6\103\ufcd6" +
    "\117\ufcd6\134\ufcd6\154\ufcd6\233\ufcd6\001\002\000\034\006" +
    "\ufcd3\027\ufcd3\030\ufcd3\043\ufcd3\075\ufcd3\076\ufcd3\101\ufcd3" +
    "\102\ufcd3\103\ufcd3\117\ufcd3\134\ufcd3\154\ufcd3\233\ufcd3\001" +
    "\002\000\034\006\ufcd4\027\ufcd4\030\ufcd4\043\ufcd4\075\ufcd4" +
    "\076\ufcd4\101\ufcd4\102\ufcd4\103\ufcd4\117\ufcd4\134\ufcd4\154" +
    "\ufcd4\233\ufcd4\001\002\000\006\006\u0315\012\u0316\001\002" +
    "\000\034\006\ufcd5\027\ufcd5\030\ufcd5\043\ufcd5\075\ufcd5\076" +
    "\ufcd5\101\ufcd5\102\ufcd5\103\ufcd5\117\ufcd5\134\ufcd5\154\ufcd5" +
    "\233\ufcd5\001\002\000\032\006\ufcd7\027\ufcd7\030\u030d\043" +
    "\ufcd7\075\ufcd7\076\ufcd7\101\ufcd7\102\ufcd7\103\ufcd7\134\ufcd7" +
    "\154\ufcd7\233\ufcd7\001\002\000\030\006\ufcdc\027\ufcdc\043" +
    "\ufcdc\075\ufcdc\076\ufcdc\101\ufcdc\102\ufcdc\103\ufcdc\134\ufcdc" +
    "\154\ufcdc\233\ufcdc\001\002\000\026\006\ufce4\027\ufce4\043" +
    "\ufce4\075\ufce4\076\ufce4\102\ufce4\103\ufce4\134\ufce4\154\ufce4" +
    "\233\ufce4\001\002\000\006\006\u031e\043\u031f\001\002\000" +
    "\030\006\ufcde\027\ufcde\034\u0322\043\ufcde\075\ufcde\076\ufcde" +
    "\102\ufcde\103\ufcde\134\ufcde\154\ufcde\233\ufcde\001\002\000" +
    "\030\006\ufce0\027\ufce0\034\ufce0\043\ufce0\075\ufce0\076\ufce0" +
    "\102\ufce0\103\ufce0\134\ufce0\154\ufce0\233\ufce0\001\002\000" +
    "\004\006\u0320\001\002\000\030\006\ufce1\027\ufce1\034\ufce1" +
    "\043\ufce1\075\ufce1\076\ufce1\102\ufce1\103\ufce1\134\ufce1\154" +
    "\ufce1\233\ufce1\001\002\000\026\006\ufce3\027\ufce3\043\ufce3" +
    "\075\ufce3\076\ufce3\102\ufce3\103\ufce3\134\ufce3\154\ufce3\233" +
    "\ufce3\001\002\000\004\006\u011f\001\002\000\004\035\u0324" +
    "\001\002\000\026\006\ufcdf\027\ufcdf\043\ufcdf\075\ufcdf\076" +
    "\ufcdf\102\ufcdf\103\ufcdf\134\ufcdf\154\ufcdf\233\ufcdf\001\002" +
    "\000\006\027\ufc67\233\ufc67\001\002\000\014\006\044\034" +
    "\u01a3\043\u01a4\046\u01a5\115\u019f\001\002\000\004\035\u0328" +
    "\001\002\000\016\006\044\043\u0283\072\u0329\073\365\074" +
    "\357\101\u027f\001\002\000\006\027\ufc6b\233\ufc6b\001\002" +
    "\000\006\027\ufc6a\233\ufc6a\001\002\000\006\027\ufc6d\233" +
    "\ufc6d\001\002\000\006\027\ufc69\233\ufc69\001\002\000\006" +
    "\027\ufc66\233\ufc66\001\002\000\014\027\ufeea\233\ufeea\310" +
    "\ufeea\356\ufeea\375\ufeea\001\002\000\014\027\ufeeb\233\ufeeb" +
    "\310\ufeeb\356\ufeeb\375\ufeeb\001\002\000\014\027\ufeec\233" +
    "\ufeec\310\ufeec\356\ufeec\375\ufeec\001\002\000\004\310\u0332" +
    "\001\002\000\010\027\uffcb\233\uffcb\356\u0334\001\002\000" +
    "\006\027\uffce\233\uffce\001\002\000\004\006\044\001\002" +
    "\000\004\373\u0336\001\002\000\004\006\044\001\002\000" +
    "\006\027\uffcc\233\uffcc\001\002\000\006\027\135\233\133" +
    "\001\002\000\024\027\ufee8\070\u027c\131\u0271\161\u0274\173" +
    "\231\233\ufee8\310\ufee8\356\ufee8\375\ufee8\001\002\000\014" +
    "\027\ufeed\233\ufeed\310\ufeed\356\ufeed\375\ufeed\001\002\000" +
    "\014\027\135\100\u028f\134\u0346\154\u0348\233\133\001\002" +
    "\000\024\027\ufd76\070\ufd76\131\ufd76\161\ufd76\173\ufd76\233" +
    "\ufd76\310\ufd76\356\ufd76\375\ufd76\001\002\000\024\027\ufd7a" +
    "\070\ufd7a\131\ufd7a\161\ufd7a\173\ufd7a\233\ufd7a\310\ufd7a\356" +
    "\ufd7a\375\ufd7a\001\002\000\004\034\u0359\001\002\000\014" +
    "\027\135\100\u028f\134\u0346\154\u0348\233\133\001\002\000" +
    "\024\027\ufd7c\070\ufd7c\131\ufd7c\161\ufd7c\173\ufd7c\233\ufd7c" +
    "\310\ufd7c\356\ufd7c\375\ufd7c\001\002\000\004\006\u0344\001" +
    "\002\000\012\006\044\043\u0341\073\365\074\357\001\002" +
    "\000\024\027\ufd77\070\ufd77\131\ufd77\161\ufd77\173\ufd77\233" +
    "\ufd77\310\ufd77\356\ufd77\375\ufd77\001\002\000\014\027\135" +
    "\100\u028f\134\u0346\154\u0348\233\133\001\002\000\024\027" +
    "\ufd74\070\ufd74\131\ufd74\161\ufd74\173\ufd74\233\ufd74\310\ufd74" +
    "\356\ufd74\375\ufd74\001\002\000\060\006\ufd71\007\ufd71\011" +
    "\ufd71\034\u0112\043\ufd71\046\ufd71\104\ufd71\105\ufd71\106\ufd71" +
    "\107\ufd71\110\ufd71\115\ufd71\116\ufd71\120\u0111\124\ufd71\125" +
    "\ufd71\156\u034f\376\ufd71\377\ufd71\u0100\ufd71\u0101\ufd71\u0102\ufd71" +
    "\u0103\ufd71\001\002\000\024\027\ufd21\070\ufd21\131\ufd21\161" +
    "\ufd21\173\ufd21\233\ufd21\310\ufd21\356\ufd21\375\ufd21\001\002" +
    "\000\014\006\044\034\361\043\364\073\365\074\357\001" +
    "\002\000\012\027\135\134\u0346\154\u0348\233\133\001\002" +
    "\000\024\027\ufd23\070\ufd23\131\ufd23\161\ufd23\173\ufd23\233" +
    "\ufd23\310\ufd23\356\ufd23\375\ufd23\001\002\000\024\027\ufd1d" +
    "\070\ufd1d\131\ufd1d\161\ufd1d\173\ufd1d\233\ufd1d\310\ufd1d\356" +
    "\ufd1d\375\ufd1d\001\002\000\024\027\ufd24\070\ufd24\131\ufd24" +
    "\161\ufd24\173\ufd24\233\ufd24\310\ufd24\356\ufd24\375\ufd24\001" +
    "\002\000\010\027\135\134\u0346\233\133\001\002\000\024" +
    "\027\ufd22\070\ufd22\131\ufd22\161\ufd22\173\ufd22\233\ufd22\310" +
    "\ufd22\356\ufd22\375\ufd22\001\002\000\004\157\u0352\001\002" +
    "\000\006\027\135\233\133\001\002\000\024\027\ufd20\070" +
    "\ufd20\131\ufd20\161\ufd20\173\ufd20\233\ufd20\310\ufd20\356\ufd20" +
    "\375\ufd20\001\002\000\006\006\u0354\160\u0353\001\002\000" +
    "\004\006\u0356\001\002\000\006\027\135\233\133\001\002" +
    "\000\024\027\ufd1e\070\ufd1e\131\ufd1e\161\ufd1e\173\ufd1e\233" +
    "\ufd1e\310\ufd1e\356\ufd1e\375\ufd1e\001\002\000\006\027\135" +
    "\233\133\001\002\000\024\027\ufd1f\070\ufd1f\131\ufd1f\161" +
    "\ufd1f\173\ufd1f\233\ufd1f\310\ufd1f\356\ufd1f\375\ufd1f\001\002" +
    "\000\024\027\ufd75\070\ufd75\131\ufd75\161\ufd75\173\ufd75\233" +
    "\ufd75\310\ufd75\356\ufd75\375\ufd75\001\002\000\014\006\044" +
    "\034\u01a3\043\u01a4\046\u01a5\115\u019f\001\002\000\004\035" +
    "\u035b\001\002\000\016\006\044\043\u0341\072\u035c\073\365" +
    "\074\357\154\u0342\001\002\000\014\006\044\043\u0341\073" +
    "\365\074\357\154\u0342\001\002\000\024\027\ufd78\070\ufd78" +
    "\131\ufd78\161\ufd78\173\ufd78\233\ufd78\310\ufd78\356\ufd78\375" +
    "\ufd78\001\002\000\024\027\ufd7b\070\ufd7b\131\ufd7b\161\ufd7b" +
    "\173\ufd7b\233\ufd7b\310\ufd7b\356\ufd7b\375\ufd7b\001\002\000" +
    "\024\027\ufd79\070\ufd79\131\ufd79\161\ufd79\173\ufd79\233\ufd79" +
    "\310\ufd79\356\ufd79\375\ufd79\001\002\000\024\027\ufd73\070" +
    "\ufd73\131\ufd73\161\ufd73\173\ufd73\233\ufd73\310\ufd73\356\ufd73" +
    "\375\ufd73\001\002\000\006\027\uffcd\233\uffcd\001\002\000" +
    "\014\027\ufeee\233\ufeee\310\ufeee\356\ufeee\375\ufeee\001\002" +
    "\000\004\132\ufd08\001\002\000\004\034\u0398\001\002\000" +
    "\004\132\ufd09\001\002\000\004\132\u036a\001\002\000\004" +
    "\132\ufd0c\001\002\000\004\006\u0369\001\002\000\004\132" +
    "\ufd07\001\002\000\006\006\u036c\043\u036d\001\002\000\024" +
    "\027\ufd37\070\ufd37\131\ufd37\161\ufd37\173\ufd37\233\ufd37\310" +
    "\ufd37\356\ufd37\375\ufd37\001\002\000\006\021\u0379\031\u0378" +
    "\001\002\000\004\006\u036e\001\002\000\004\021\u036f\001" +
    "\002\000\050\006\044\007\242\011\274\034\253\043\271" +
    "\046\237\104\262\105\272\106\267\107\265\110\241\115" +
    "\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244" +
    "\u0103\232\001\002\000\024\027\ufd35\070\ufd35\131\ufd35\161" +
    "\ufd35\173\ufd35\233\ufd35\310\ufd35\356\ufd35\375\ufd35\001\002" +
    "\000\016\027\135\030\u0374\100\u028f\134\u0346\154\u0348\233" +
    "\133\001\002\000\024\027\ufd2a\070\ufd2a\131\ufd2a\161\ufd2a" +
    "\173\ufd2a\233\ufd2a\310\ufd2a\356\ufd2a\375\ufd2a\001\002\000" +
    "\024\027\ufd29\070\ufd29\131\ufd29\161\ufd29\173\ufd29\233\ufd29" +
    "\310\ufd29\356\ufd29\375\ufd29\001\002\000\006\006\u036c\043" +
    "\u036d\001\002\000\024\027\ufd27\070\ufd27\131\ufd27\161\ufd27" +
    "\173\ufd27\233\ufd27\310\ufd27\356\ufd27\375\ufd27\001\002\000" +
    "\024\027\ufd28\070\ufd28\131\ufd28\161\ufd28\173\ufd28\233\ufd28" +
    "\310\ufd28\356\ufd28\375\ufd28\001\002\000\024\027\ufd36\070" +
    "\ufd36\131\ufd36\161\ufd36\173\ufd36\233\ufd36\310\ufd36\356\ufd36" +
    "\375\ufd36\001\002\000\006\006\u0381\133\u0382\001\002\000" +
    "\052\006\044\007\242\011\274\034\253\043\271\046\237" +
    "\076\u037c\104\262\105\272\106\267\107\265\110\241\115" +
    "\273\116\u037d\376\254\377\256\u0100\236\u0101\252\u0102\244" +
    "\u0103\232\001\002\000\016\027\135\030\u0374\100\u028f\134" +
    "\u0346\154\u0348\233\133\001\002\000\024\027\ufd34\070\ufd34" +
    "\131\ufd34\161\ufd34\173\ufd34\233\ufd34\310\ufd34\356\ufd34\375" +
    "\ufd34\001\002\000\016\027\135\030\u0374\100\u028f\134\u0346" +
    "\154\u0348\233\133\001\002\000\044\010\ufc8f\011\ufc8f\012" +
    "\ufc8f\013\ufc8f\014\ufc8f\015\ufc8f\016\ufc8f\017\ufc8f\020\ufc8f" +
    "\021\ufc8f\023\ufc8f\027\ufc8f\030\ufc8f\100\ufc8f\134\ufc8f\154" +
    "\ufc8f\233\ufc8f\001\002\000\024\027\ufd30\070\ufd30\131\ufd30" +
    "\161\ufd30\173\ufd30\233\ufd30\310\ufd30\356\ufd30\375\ufd30\001" +
    "\002\000\024\027\ufd31\070\ufd31\131\ufd31\161\ufd31\173\ufd31" +
    "\233\ufd31\310\ufd31\356\ufd31\375\ufd31\001\002\000\024\027" +
    "\ufd32\070\ufd32\131\ufd32\161\ufd32\173\ufd32\233\ufd32\310\ufd32" +
    "\356\ufd32\375\ufd32\001\002\000\006\021\u0391\034\u0390\001" +
    "\002\000\004\034\u0384\001\002\000\024\027\ufd33\070\ufd33" +
    "\131\ufd33\161\ufd33\173\ufd33\233\ufd33\310\ufd33\356\ufd33\375" +
    "\ufd33\001\002\000\050\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\104\262\105\272\106\267\107\265\110" +
    "\241\115\273\116\270\376\254\377\256\u0100\236\u0101\252" +
    "\u0102\244\u0103\232\001\002\000\004\030\u0386\001\002\000" +
    "\010\043\u0389\115\u038a\116\u0388\001\002\000\004\030\u038c" +
    "\001\002\000\006\030\ufd2c\035\ufd2c\001\002\000\004\006" +
    "\u038b\001\002\000\006\030\ufd2d\035\ufd2d\001\002\000\006" +
    "\030\ufd2b\035\ufd2b\001\002\000\010\043\u0389\115\u038a\116" +
    "\u0388\001\002\000\004\035\u038e\001\002\000\016\027\135" +
    "\030\u0374\100\u028f\134\u0346\154\u0348\233\133\001\002\000" +
    "\024\027\ufd2e\070\ufd2e\131\ufd2e\161\ufd2e\173\ufd2e\233\ufd2e" +
    "\310\ufd2e\356\ufd2e\375\ufd2e\001\002\000\050\006\044\007" +
    "\242\011\274\034\253\043\271\046\237\104\262\105\272" +
    "\106\267\107\265\110\241\115\273\116\270\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\050" +
    "\006\044\007\242\011\274\034\253\043\271\046\237\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001" +
    "\002\000\024\027\ufd2f\070\ufd2f\131\ufd2f\161\ufd2f\173\ufd2f" +
    "\233\ufd2f\310\ufd2f\356\ufd2f\375\ufd2f\001\002\000\016\027" +
    "\135\030\u0374\100\u028f\134\u0346\154\u0348\233\133\001\002" +
    "\000\024\027\ufd26\070\ufd26\131\ufd26\161\ufd26\173\ufd26\233" +
    "\ufd26\310\ufd26\356\ufd26\375\ufd26\001\002\000\004\035\u0396" +
    "\001\002\000\016\027\135\030\u0374\100\u028f\134\u0346\154" +
    "\u0348\233\133\001\002\000\024\027\ufd25\070\ufd25\131\ufd25" +
    "\161\ufd25\173\ufd25\233\ufd25\310\ufd25\356\ufd25\375\ufd25\001" +
    "\002\000\014\006\044\034\u01a3\043\u01a4\046\u01a5\115\u019f" +
    "\001\002\000\004\035\u039a\001\002\000\014\006\044\043" +
    "\u0368\072\u039b\073\365\074\357\001\002\000\012\006\044" +
    "\043\u0368\073\365\074\357\001\002\000\004\132\ufd0a\001" +
    "\002\000\004\132\ufd0d\001\002\000\004\132\ufd0b\001\002" +
    "\000\014\027\ufef0\233\ufef0\310\ufef0\356\ufef0\375\ufef0\001" +
    "\002\000\010\027\uffcb\233\uffcb\356\u0334\001\002\000\006" +
    "\027\uffd0\233\uffd0\001\002\000\004\006\u03a3\001\002\000" +
    "\012\027\uffe0\030\u0266\233\uffe0\371\uffe0\001\002\000\010" +
    "\027\uffe1\233\uffe1\371\uffe1\001\002\000\010\027\uffc9\157" +
    "\u03a6\233\uffc9\001\002\000\004\006\u03a7\001\002\000\010" +
    "\027\uffc6\030\u03a8\233\uffc6\001\002\000\004\006\u03aa\001" +
    "\002\000\006\027\uffca\233\uffca\001\002\000\010\027\uffc6" +
    "\030\u03a8\233\uffc6\001\002\000\006\027\uffc7\233\uffc7\001" +
    "\002\000\050\002\uffec\003\027\005\010\006\ufccf\043\ufccf" +
    "\047\024\055\013\064\012\065\007\066\015\070\020\102" +
    "\004\103\035\131\031\161\032\173\006\175\017\247\022" +
    "\350\034\001\002\000\004\002\uffed\001\002\000\004\136" +
    "\uffc5\001\002\000\004\136\uffbc\001\002\000\004\136\uffbe" +
    "\001\002\000\004\136\uffb9\001\002\000\004\136\uffbf\001" +
    "\002\000\004\136\uffb8\001\002\000\014\027\135\100\u028f" +
    "\134\u03be\154\u03c0\233\133\001\002\000\004\034\u03d6\001" +
    "\002\000\014\027\135\100\u028f\134\u03be\154\u03c0\233\133" +
    "\001\002\000\004\002\ufd80\001\002\000\004\002\ufd84\001" +
    "\002\000\004\006\u03bd\001\002\000\004\002\ufd86\001\002" +
    "\000\012\006\044\043\u03b9\073\365\074\357\001\002\000" +
    "\004\002\ufd81\001\002\000\014\027\135\100\u028f\134\u03be" +
    "\154\u03c0\233\133\001\002\000\060\006\ufd71\007\ufd71\011" +
    "\ufd71\034\u0112\043\ufd71\046\ufd71\104\ufd71\105\ufd71\106\ufd71" +
    "\107\ufd71\110\ufd71\115\ufd71\116\ufd71\120\u0111\124\ufd71\125" +
    "\ufd71\156\u03c9\376\ufd71\377\ufd71\u0100\ufd71\u0101\ufd71\u0102\ufd71" +
    "\u0103\ufd71\001\002\000\004\002\ufd7e\001\002\000\014\006" +
    "\044\034\361\043\364\073\365\074\357\001\002\000\012" +
    "\027\135\134\u03be\154\u03c0\233\133\001\002\000\004\002" +
    "\ufd19\001\002\000\004\002\ufd1b\001\002\000\050\002\ufd11" +
    "\003\027\005\010\006\ufccf\043\ufccf\047\024\055\013\064" +
    "\012\065\007\066\015\070\020\102\004\103\035\131\031" +
    "\161\032\173\006\175\017\247\022\350\034\001\002\000" +
    "\004\002\ufd12\001\002\000\004\002\ufd1c\001\002\000\010" +
    "\027\135\134\u03be\233\133\001\002\000\004\002\ufd1a\001" +
    "\002\000\004\157\u03cd\001\002\000\006\027\135\233\133" +
    "\001\002\000\050\002\ufd17\003\027\005\010\006\ufccf\043" +
    "\ufccf\047\024\055\013\064\012\065\007\066\015\070\020" +
    "\102\004\103\035\131\031\161\032\173\006\175\017\247" +
    "\022\350\034\001\002\000\004\002\ufd18\001\002\000\006" +
    "\006\u03cf\160\u03ce\001\002\000\004\006\u03d2\001\002\000" +
    "\006\027\135\233\133\001\002\000\050\002\ufd13\003\027" +
    "\005\010\006\ufccf\043\ufccf\047\024\055\013\064\012\065" +
    "\007\066\015\070\020\102\004\103\035\131\031\161\032" +
    "\173\006\175\017\247\022\350\034\001\002\000\004\002" +
    "\ufd14\001\002\000\006\027\135\233\133\001\002\000\050" +
    "\002\ufd15\003\027\005\010\006\ufccf\043\ufccf\047\024\055" +
    "\013\064\012\065\007\066\015\070\020\102\004\103\035" +
    "\131\031\161\032\173\006\175\017\247\022\350\034\001" +
    "\002\000\004\002\ufd16\001\002\000\004\002\ufd7f\001\002" +
    "\000\014\006\044\034\u01a3\043\u01a4\046\u01a5\115\u019f\001" +
    "\002\000\004\035\u03d8\001\002\000\016\006\044\043\u03b9" +
    "\072\u03d9\073\365\074\357\154\u03bb\001\002\000\014\006" +
    "\044\043\u03b9\073\365\074\357\154\u03bb\001\002\000\004" +
    "\002\ufd82\001\002\000\004\002\ufd85\001\002\000\004\002" +
    "\ufd83\001\002\000\004\002\ufd7d\001\002\000\004\132\u03df" +
    "\001\002\000\006\006\u03e0\043\u03e2\001\002\000\006\021" +
    "\u03ee\031\u03ec\001\002\000\004\002\ufd4a\001\002\000\004" +
    "\006\u03e3\001\002\000\004\021\u03e4\001\002\000\050\006" +
    "\044\007\242\011\274\034\253\043\271\046\237\104\262" +
    "\105\272\106\267\107\265\110\241\115\273\116\270\376" +
    "\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002" +
    "\000\004\002\ufd48\001\002\000\016\027\135\030\u03e8\100" +
    "\u028f\134\u03be\154\u03c0\233\133\001\002\000\004\002\ufd3d" +
    "\001\002\000\006\006\u03e0\043\u03e2\001\002\000\004\002" +
    "\ufd3c\001\002\000\004\002\ufd3a\001\002\000\004\002\ufd3b" +
    "\001\002\000\006\006\u03f7\133\u03f8\001\002\000\004\002" +
    "\ufd49\001\002\000\052\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\076\u03f0\104\262\105\272\106\267\107" +
    "\265\110\241\115\273\116\u03f1\376\254\377\256\u0100\236" +
    "\u0101\252\u0102\244\u0103\232\001\002\000\016\027\135\030" +
    "\u03e8\100\u028f\134\u03be\154\u03c0\233\133\001\002\000\016" +
    "\027\135\030\u03e8\100\u028f\134\u03be\154\u03c0\233\133\001" +
    "\002\000\044\010\ufc8f\011\ufc8f\012\ufc8f\013\ufc8f\014\ufc8f" +
    "\015\ufc8f\016\ufc8f\017\ufc8f\020\ufc8f\021\ufc8f\023\ufc8f\027" +
    "\ufc8f\030\ufc8f\100\ufc8f\134\ufc8f\154\ufc8f\233\ufc8f\001\002" +
    "\000\004\002\ufd47\001\002\000\004\002\ufd43\001\002\000" +
    "\004\002\ufd44\001\002\000\004\002\ufd45\001\002\000\004" +
    "\002\ufd46\001\002\000\006\021\u0407\034\u0406\001\002\000" +
    "\004\034\u03f9\001\002\000\050\006\044\007\242\011\274" +
    "\034\253\043\271\046\237\104\262\105\272\106\267\107" +
    "\265\110\241\115\273\116\270\376\254\377\256\u0100\236" +
    "\u0101\252\u0102\244\u0103\232\001\002\000\004\030\u03fb\001" +
    "\002\000\010\043\u03fe\115\u03ff\116\u03fd\001\002\000\004" +
    "\030\u0401\001\002\000\006\030\ufd3f\035\ufd3f\001\002\000" +
    "\004\006\u0400\001\002\000\006\030\ufd40\035\ufd40\001\002" +
    "\000\006\030\ufd3e\035\ufd3e\001\002\000\010\043\u03fe\115" +
    "\u03ff\116\u03fd\001\002\000\004\035\u0403\001\002\000\016" +
    "\027\135\030\u03e8\100\u028f\134\u03be\154\u03c0\233\133\001" +
    "\002\000\004\002\ufd41\001\002\000\004\002\ufd42\001\002" +
    "\000\050\006\044\007\242\011\274\034\253\043\271\046" +
    "\237\104\262\105\272\106\267\107\265\110\241\115\273" +
    "\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103" +
    "\232\001\002\000\050\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\104\262\105\272\106\267\107\265\110" +
    "\241\115\273\116\270\376\254\377\256\u0100\236\u0101\252" +
    "\u0102\244\u0103\232\001\002\000\016\027\135\030\u03e8\100" +
    "\u028f\134\u03be\154\u03c0\233\133\001\002\000\004\002\ufd39" +
    "\001\002\000\004\035\u040b\001\002\000\016\027\135\030" +
    "\u03e8\100\u028f\134\u03be\154\u03c0\233\133\001\002\000\004" +
    "\002\ufd38\001\002\000\004\002\ufff1\001\002\000\004\002" +
    "\ufc1f\001\002\000\004\002\ufc1b\001\002\000\006\006\ufbf7" +
    "\050\u042a\001\002\000\006\006\044\050\u0449\001\002\000" +
    "\006\006\ufbf7\050\u042a\001\002\000\004\002\ufc1e\001\002" +
    "\000\004\002\ufc1d\001\002\000\004\002\ufc20\001\002\000" +
    "\006\006\ufc14\050\ufc14\001\002\000\006\006\ufc12\050\u0420" +
    "\001\002\000\006\006\ufc15\050\ufc15\001\002\000\006\006" +
    "\ufbf7\050\u042a\001\002\000\006\006\ufbf7\050\u042a\001\002" +
    "\000\004\002\ufc1a\001\002\000\006\006\ufc12\050\u0420\001" +
    "\002\000\004\002\ufc1c\001\002\000\004\002\uffff\001\002" +
    "\000\004\006\044\001\002\000\004\051\u0421\001\002\000" +
    "\004\006\ufc13\001\002\000\010\027\ufc10\030\u0423\233\ufc10" +
    "\001\002\000\004\006\044\001\002\000\006\027\135\233" +
    "\133\001\002\000\050\002\ufc18\003\027\005\010\006\ufccf" +
    "\043\ufccf\047\024\055\013\064\012\065\007\066\015\070" +
    "\020\102\004\103\035\131\031\161\032\173\006\175\017" +
    "\247\022\350\034\001\002\000\004\002\ufc19\001\002\000" +
    "\010\027\ufc10\030\u0423\233\ufc10\001\002\000\006\027\ufc11" +
    "\233\ufc11\001\002\000\004\006\044\001\002\000\004\051" +
    "\u042b\001\002\000\004\006\ufbf8\001\002\000\010\027\ufbf5" +
    "\030\u042d\233\ufbf5\001\002\000\004\006\044\001\002\000" +
    "\006\027\135\233\133\001\002\000\050\002\ufbfb\003\027" +
    "\005\010\006\ufccf\043\ufccf\047\024\055\013\064\012\065" +
    "\007\066\015\070\020\102\004\103\035\131\031\161\032" +
    "\173\006\175\017\247\022\350\034\001\002\000\004\002" +
    "\ufbfc\001\002\000\010\027\ufbf5\030\u042d\233\ufbf5\001\002" +
    "\000\006\027\ufbf6\233\ufbf6\001\002\000\004\006\u0435\001" +
    "\002\000\010\027\ufbff\030\u0438\233\ufbff\001\002\000\012" +
    "\027\ufbfd\030\ufbfd\031\u0436\233\ufbfd\001\002\000\004\006" +
    "\u0437\001\002\000\010\027\ufbfe\030\ufbfe\233\ufbfe\001\002" +
    "\000\004\006\u0435\001\002\000\006\027\135\233\133\001" +
    "\002\000\050\002\ufc01\003\027\005\010\006\ufccf\043\ufccf" +
    "\047\024\055\013\064\012\065\007\066\015\070\020\102" +
    "\004\103\035\131\031\161\032\173\006\175\017\247\022" +
    "\350\034\001\002\000\004\002\ufc02\001\002\000\010\027" +
    "\ufbff\030\u0438\233\ufbff\001\002\000\006\027\ufc00\233\ufc00" +
    "\001\002\000\004\006\044\001\002\000\010\027\ufc10\030" +
    "\u0423\233\ufc10\001\002\000\006\027\135\233\133\001\002" +
    "\000\050\002\ufc16\003\027\005\010\006\ufccf\043\ufccf\047" +
    "\024\055\013\064\012\065\007\066\015\070\020\102\004" +
    "\103\035\131\031\161\032\173\006\175\017\247\022\350" +
    "\034\001\002\000\004\002\ufc17\001\002\000\004\006\u0444" +
    "\001\002\000\006\027\135\233\133\001\002\000\050\002" +
    "\ufc03\003\027\005\010\006\ufccf\043\ufccf\047\024\055\013" +
    "\064\012\065\007\066\015\070\020\102\004\103\035\131" +
    "\031\161\032\173\006\175\017\247\022\350\034\001\002" +
    "\000\004\002\ufc04\001\002\000\012\027\ufc07\030\u0450\062" +
    "\u0451\233\ufc07\001\002\000\006\027\135\233\133\001\002" +
    "\000\004\051\u044a\001\002\000\004\006\044\001\002\000" +
    "\006\027\135\233\133\001\002\000\050\002\ufc0e\003\027" +
    "\005\010\006\ufccf\043\ufccf\047\024\055\013\064\012\065" +
    "\007\066\015\070\020\102\004\103\035\131\031\161\032" +
    "\173\006\175\017\247\022\350\034\001\002\000\004\002" +
    "\ufc0f\001\002\000\050\002\ufc0c\003\027\005\010\006\ufccf" +
    "\043\ufccf\047\024\055\013\064\012\065\007\066\015\070" +
    "\020\102\004\103\035\131\031\161\032\173\006\175\017" +
    "\247\022\350\034\001\002\000\004\002\ufc0d\001\002\000" +
    "\004\006\044\001\002\000\004\006\044\001\002\000\006" +
    "\027\ufc0a\233\ufc0a\001\002\000\010\027\ufc07\030\u0450\233" +
    "\ufc07\001\002\000\006\027\ufc0b\233\ufc0b\001\002\000\010" +
    "\027\ufc08\062\u0456\233\ufc08\001\002\000\004\006\044\001" +
    "\002\000\010\027\ufc07\030\u0450\233\ufc07\001\002\000\006" +
    "\027\ufc09\233\ufc09\001\002\000\004\006\u045a\001\002\000" +
    "\010\027\ufbf9\030\u045b\233\ufbf9\001\002\000\004\006\u045f" +
    "\001\002\000\006\027\135\233\133\001\002\000\050\002" +
    "\ufc05\003\027\005\010\006\ufccf\043\ufccf\047\024\055\013" +
    "\064\012\065\007\066\015\070\020\102\004\103\035\131" +
    "\031\161\032\173\006\175\017\247\022\350\034\001\002" +
    "\000\004\002\ufc06\001\002\000\010\027\ufbf9\030\u045b\233" +
    "\ufbf9\001\002\000\006\027\ufbfa\233\ufbfa\001\002\000\006" +
    "\027\135\233\133\001\002\000\006\006\044\111\u070e\001" +
    "\002\000\006\006\044\156\u06bd\001\002\000\004\006\044" +
    "\001\002\000\006\027\135\233\133\001\002\000\004\006" +
    "\044\001\002\000\004\006\044\001\002\000\004\002\ufff9" +
    "\001\002\000\004\006\044\001\002\000\004\006\044\001" +
    "\002\000\004\006\044\001\002\000\004\034\u046d\001\002" +
    "\000\006\035\uff24\043\u046f\001\002\000\004\035\u0481\001" +
    "\002\000\004\006\u0470\001\002\000\040\006\uff27\117\047" +
    "\315\uff27\316\uff27\317\uff27\320\uff27\321\uff27\322\uff27\323" +
    "\uff27\324\uff27\325\uff27\326\uff27\327\uff27\330\uff27\331\uff27" +
    "\001\002\000\036\006\067\315\062\316\053\317\055\320" +
    "\071\321\063\322\057\323\066\324\054\325\060\326\064" +
    "\327\056\330\070\331\061\001\002\000\012\021\u0474\030" +
    "\uff22\035\uff22\346\uff22\001\002\000\010\030\uff20\035\uff20" +
    "\346\u0477\001\002\000\004\076\u0475\001\002\000\010\030" +
    "\uff23\035\uff23\346\uff23\001\002\000\006\030\u0478\035\uff1e" +
    "\001\002\000\006\030\uff21\035\uff21\001\002\000\004\043" +
    "\u047a\001\002\000\004\035\uff25\001\002\000\004\006\u047b" +
    "\001\002\000\040\006\uff27\117\047\315\uff27\316\uff27\317" +
    "\uff27\320\uff27\321\uff27\322\uff27\323\uff27\324\uff27\325\uff27" +
    "\326\uff27\327\uff27\330\uff27\331\uff27\001\002\000\036\006" +
    "\067\315\062\316\053\317\055\320\071\321\063\322\057" +
    "\323\066\324\054\325\060\326\064\327\056\330\070\331" +
    "\061\001\002\000\012\021\u0474\030\uff22\035\uff22\346\uff22" +
    "\001\002\000\010\030\uff20\035\uff20\346\u0477\001\002\000" +
    "\006\030\u0478\035\uff1e\001\002\000\004\035\uff1f\001\002" +
    "\000\004\374\u0483\001\002\000\006\027\uff26\233\uff26\001" +
    "\002\000\040\004\u0485\006\067\315\062\316\053\317\055" +
    "\320\071\321\063\322\057\323\066\324\054\325\060\326" +
    "\064\327\056\330\070\331\061\001\002\000\006\066\uff27" +
    "\117\047\001\002\000\006\117\047\375\uff27\001\002\000" +
    "\006\027\uff1c\233\uff1c\001\002\000\004\375\u0488\001\002" +
    "\000\006\034\u0489\173\231\001\002\000\004\173\231\001" +
    "\002\000\006\027\uff19\233\uff19\001\002\000\004\035\u048c" +
    "\001\002\000\006\027\uff1a\233\uff1a\001\002\000\006\027" +
    "\uff1d\233\uff1d\001\002\000\004\066\u048f\001\002\000\012" +
    "\070\u0275\131\u0271\161\u0274\173\231\001\002\000\004\375" +
    "\u0491\001\002\000\014\006\044\034\u01a3\043\u01a4\046\u01a5" +
    "\115\u019f\001\002\000\004\310\u0493\001\002\000\006\027" +
    "\135\233\133\001\002\000\006\027\uff1b\233\uff1b\001\002" +
    "\000\012\047\u0499\132\u0498\244\u0497\247\u0496\001\002\000" +
    "\004\333\u0636\001\002\000\022\006\u04b7\076\u04b1\201\u04b6" +
    "\231\u04b5\234\u04ae\241\u04ad\274\u04b8\303\u04b2\001\002\000" +
    "\012\027\ufe52\030\ufe52\233\ufe52\240\u055e\001\002\000\012" +
    "\006\u04a1\050\u04a2\303\u049f\333\u04a0\001\002\000\006\027" +
    "\135\233\133\001\002\000\050\002\uffa7\003\027\005\010" +
    "\006\ufccf\043\ufccf\047\024\055\013\064\012\065\007\066" +
    "\015\070\020\102\004\103\035\131\031\161\032\173\006" +
    "\175\017\247\022\350\034\001\002\000\004\002\uffa8\001" +
    "\002\000\010\027\uff83\030\uff83\233\uff83\001\002\000\010" +
    "\027\uff9c\030\u0624\233\uff9c\001\002\000\006\006\u04a1\050" +
    "\u0621\001\002\000\006\006\u061b\050\u061c\001\002\000\010" +
    "\027\uff7c\030\u04a5\233\uff7c\001\002\000\004\051\u04a3\001" +
    "\002\000\004\006\u04a1\001\002\000\010\027\uff86\030\uff86" +
    "\233\uff86\001\002\000\020\006\u04ab\047\u04a7\050\u04a2\244" +
    "\u04aa\247\u04a8\303\u049f\333\u04a0\001\002\000\010\027\uff82" +
    "\030\uff82\233\uff82\001\002\000\012\006\u04a1\050\u04a2\303" +
    "\u049f\333\u04a0\001\002\000\004\333\u05f9\001\002\000\010" +
    "\027\uff80\030\uff80\233\uff80\001\002\000\022\006\u04b7\076" +
    "\u04b1\201\u04b6\231\u04b5\234\u04ae\241\u04ad\274\u04b8\303\u04b2" +
    "\001\002\000\010\027\uff7c\030\u04a5\233\uff7c\001\002\000" +
    "\010\027\uff82\030\uff82\233\uff82\001\002\000\004\006\044" +
    "\001\002\000\010\034\u058c\235\u05ca\236\u05c9\001\002\000" +
    "\010\027\uff7c\030\u04a5\233\uff7c\001\002\000\014\027\ufeda" +
    "\030\u04df\035\ufeda\233\ufeda\241\ufeda\001\002\000\004\034" +
    "\u05cd\001\002\000\004\006\044\001\002\000\014\027\ufeda" +
    "\030\u04df\035\ufeda\233\ufeda\241\ufeda\001\002\000\014\027" +
    "\ufec6\030\ufec6\035\ufec6\233\ufec6\241\ufec6\001\002\000\004" +
    "\231\u05a2\001\002\000\004\230\u05c8\001\002\000\040\006" +
    "\067\117\u04dd\315\062\316\053\317\055\320\071\321\063" +
    "\322\057\323\066\324\054\325\060\326\064\327\056\330" +
    "\070\331\061\001\002\000\004\230\u04b9\001\002\000\004" +
    "\274\u04ba\001\002\000\004\230\u04bc\001\002\000\014\027" +
    "\ufec3\030\ufec3\035\ufec3\233\ufec3\241\ufec3\001\002\000\004" +
    "\034\u04bd\001\002\000\004\006\u011f\001\002\000\004\035" +
    "\u04bf\001\002\000\004\275\u04c1\001\002\000\014\027\ufeb7" +
    "\030\ufeb7\035\ufeb7\233\ufeb7\241\ufeb7\001\002\000\004\006" +
    "\044\001\002\000\022\027\ufeaf\030\ufeaf\034\u04c5\035\ufeaf" +
    "\062\u04c3\120\u04c4\233\ufeaf\241\ufeaf\001\002\000\006\131" +
    "\u04cf\161\u04ce\001\002\000\004\136\u04cc\001\002\000\004" +
    "\006\u011f\001\002\000\014\027\ufeb5\030\ufeb5\035\ufeb5\233" +
    "\ufeb5\241\ufeb5\001\002\000\014\027\ufeb1\030\ufeb1\035\ufeb1" +
    "\233\ufeb1\241\ufeb1\001\002\000\014\027\ufeb3\030\ufeb3\035" +
    "\ufeb3\233\ufeb3\241\ufeb3\001\002\000\004\035\u04ca\001\002" +
    "\000\020\027\ufeaf\030\ufeaf\035\ufeaf\062\u04c3\120\u04c4\233" +
    "\ufeaf\241\ufeaf\001\002\000\014\027\ufeb6\030\ufeb6\035\ufeb6" +
    "\233\ufeb6\241\ufeb6\001\002\000\004\276\u04cd\001\002\000" +
    "\014\027\ufeb0\030\ufeb0\035\ufeb0\233\ufeb0\241\ufeb0\001\002" +
    "\000\010\132\u04d0\314\u04d2\332\u04d3\001\002\000\010\132" +
    "\u04d0\314\u04d2\332\u04d3\001\002\000\006\076\u04d6\116\u04d7" +
    "\001\002\000\016\027\ufeaf\030\ufeaf\035\ufeaf\120\u04c4\233" +
    "\ufeaf\241\ufeaf\001\002\000\020\027\ufe4a\030\ufe4a\035\ufe4a" +
    "\062\ufe4a\120\ufe4a\233\ufe4a\241\ufe4a\001\002\000\004\313" +
    "\u04d4\001\002\000\020\027\ufe4b\030\ufe4b\035\ufe4b\062\ufe4b" +
    "\120\ufe4b\233\ufe4b\241\ufe4b\001\002\000\014\027\ufeb2\030" +
    "\ufeb2\035\ufeb2\233\ufeb2\241\ufeb2\001\002\000\020\027\ufe48" +
    "\030\ufe48\035\ufe48\062\ufe48\120\ufe48\233\ufe48\241\ufe48\001" +
    "\002\000\020\027\ufe49\030\ufe49\035\ufe49\062\ufe49\120\ufe49" +
    "\233\ufe49\241\ufe49\001\002\000\020\027\ufeaf\030\ufeaf\035" +
    "\ufeaf\062\u04d9\120\u04c4\233\ufeaf\241\ufeaf\001\002\000\004" +
    "\131\u04cf\001\002\000\014\027\ufeb4\030\ufeb4\035\ufeb4\233" +
    "\ufeb4\241\ufeb4\001\002\000\054\027\ufe78\030\ufe78\035\ufe78" +
    "\076\u04e8\116\u0557\120\u0548\166\u0542\172\u0540\201\u04eb\204" +
    "\u054c\231\u04ea\233\ufe78\234\u04e5\241\u0558\274\u04ec\275\u04e3" +
    "\300\u0547\301\u0549\303\u054d\304\u054e\312\u0546\001\002\000" +
    "\014\027\ufeda\030\u04df\035\ufeda\233\ufeda\241\ufeda\001\002" +
    "\000\050\006\044\007\242\011\274\034\253\043\271\046" +
    "\237\104\262\105\272\106\267\107\265\110\241\115\273" +
    "\116\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103" +
    "\232\001\002\000\014\027\ufeda\030\u04df\035\ufeda\233\ufeda" +
    "\241\ufeda\001\002\000\022\006\u04b7\076\u04b1\201\u04b6\231" +
    "\u04b5\234\u04ae\241\u04ad\274\u04b8\303\u04b2\001\002\000\014" +
    "\027\ufed7\030\ufed7\035\ufed7\233\ufed7\241\ufed7\001\002\000" +
    "\014\027\ufedb\030\ufedb\035\ufedb\233\ufedb\241\ufedb\001\002" +
    "\000\034\027\ufec8\030\ufec8\035\ufec8\076\u04e8\201\u04eb\231" +
    "\u04ea\233\ufec8\234\u04e5\241\ufec8\274\u04ec\275\u04e3\277\u04e6" +
    "\303\u04e9\001\002\000\004\006\u04f0\001\002\000\014\027" +
    "\ufe70\030\ufe70\035\ufe70\233\ufe70\241\ufe70\001\002\000\022" +
    "\027\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233\ufe2b\235\u050b\236" +
    "\u050a\241\ufe2b\001\002\000\034\027\ufec9\030\ufec9\035\ufec9" +
    "\076\u04e8\120\u053a\201\u04eb\231\u04ea\233\ufec9\234\u04e5\241" +
    "\ufec9\274\u04ec\275\u04e3\303\u04e9\001\002\000\014\027\ufecb" +
    "\030\ufecb\035\ufecb\233\ufecb\241\ufecb\001\002\000\004\034" +
    "\u0536\001\002\000\004\006\044\001\002\000\006\034\u052b" +
    "\120\u052a\001\002\000\004\230\u0509\001\002\000\004\230" +
    "\u04ed\001\002\000\004\275\u04ef\001\002\000\014\027\ufe6d" +
    "\030\ufe6d\035\ufe6d\233\ufe6d\241\ufe6d\001\002\000\004\006" +
    "\u04f0\001\002\000\024\027\ufe5a\030\ufe5a\031\u04f3\034\u04f5" +
    "\035\ufe5a\062\u04f2\120\u04f7\233\ufe5a\241\ufe5a\001\002\000" +
    "\014\027\ufe65\030\ufe65\035\ufe65\233\ufe65\241\ufe65\001\002" +
    "\000\006\131\u0503\161\u0502\001\002\000\004\006\u0500\001" +
    "\002\000\014\027\ufe5c\030\ufe5c\035\ufe5c\233\ufe5c\241\ufe5c" +
    "\001\002\000\004\006\u011f\001\002\000\014\027\ufe5e\030" +
    "\ufe5e\035\ufe5e\233\ufe5e\241\ufe5e\001\002\000\004\136\u04fb" +
    "\001\002\000\014\027\ufe60\030\ufe60\035\ufe60\233\ufe60\241" +
    "\ufe60\001\002\000\014\027\ufe62\030\ufe62\035\ufe62\233\ufe62" +
    "\241\ufe62\001\002\000\014\027\ufe64\030\ufe64\035\ufe64\233" +
    "\ufe64\241\ufe64\001\002\000\004\276\u04fc\001\002\000\014" +
    "\027\ufe5b\030\ufe5b\035\ufe5b\233\ufe5b\241\ufe5b\001\002\000" +
    "\004\035\u04fe\001\002\000\020\027\ufe5a\030\ufe5a\035\ufe5a" +
    "\062\u04f2\120\u04f7\233\ufe5a\241\ufe5a\001\002\000\014\027" +
    "\ufe61\030\ufe61\035\ufe61\233\ufe61\241\ufe61\001\002\000\022" +
    "\027\ufe5a\030\ufe5a\034\u04f5\035\ufe5a\062\u04f2\120\u04f7\233" +
    "\ufe5a\241\ufe5a\001\002\000\014\027\ufe63\030\ufe63\035\ufe63" +
    "\233\ufe63\241\ufe63\001\002\000\010\132\u04d0\314\u04d2\332" +
    "\u04d3\001\002\000\010\132\u04d0\314\u04d2\332\u04d3\001\002" +
    "\000\016\027\ufe5a\030\ufe5a\035\ufe5a\120\u04f7\233\ufe5a\241" +
    "\ufe5a\001\002\000\014\027\ufe5d\030\ufe5d\035\ufe5d\233\ufe5d" +
    "\241\ufe5d\001\002\000\020\027\ufe5a\030\ufe5a\035\ufe5a\062" +
    "\u0507\120\u04f7\233\ufe5a\241\ufe5a\001\002\000\004\131\u0503" +
    "\001\002\000\014\027\ufe5f\030\ufe5f\035\ufe5f\233\ufe5f\241" +
    "\ufe5f\001\002\000\022\027\ufe2b\030\ufe2b\035\ufe2b\062\u050c" +
    "\233\ufe2b\235\u050b\236\u050a\241\ufe2b\001\002\000\016\027" +
    "\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233\ufe2b\241\ufe2b\001\002" +
    "\000\016\027\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233\ufe2b\241" +
    "\ufe2b\001\002\000\014\006\u0514\007\u0513\076\u0510\115\u0515" +
    "\201\u0511\001\002\000\014\027\ufe67\030\ufe67\035\ufe67\233" +
    "\ufe67\241\ufe67\001\002\000\014\027\ufe6f\030\ufe6f\035\ufe6f" +
    "\233\ufe6f\241\ufe6f\001\002\000\014\027\ufe66\030\ufe66\035" +
    "\ufe66\233\ufe66\241\ufe66\001\002\000\020\027\ufe30\030\ufe30" +
    "\035\ufe30\233\ufe30\240\ufe30\241\ufe30\271\ufe30\001\002\000" +
    "\020\027\ufe2f\030\ufe2f\035\ufe2f\233\ufe2f\240\ufe2f\241\ufe2f" +
    "\271\ufe2f\001\002\000\022\027\ufe31\030\ufe31\034\u0523\035" +
    "\ufe31\233\ufe31\240\ufe31\241\ufe31\271\ufe31\001\002\000\020" +
    "\027\ufe2e\030\ufe2e\035\ufe2e\233\ufe2e\240\ufe2e\241\ufe2e\271" +
    "\ufe2e\001\002\000\026\027\ufbf2\030\ufbf2\031\170\034\ufbf2" +
    "\035\ufbf2\233\ufbf2\240\ufbf2\241\ufbf2\242\u0516\271\ufbf2\001" +
    "\002\000\020\027\ufe2d\030\ufe2d\035\ufe2d\233\ufe2d\240\ufe2d" +
    "\241\ufe2d\271\ufe2d\001\002\000\004\006\u0517\001\002\000" +
    "\004\034\u0518\001\002\000\004\006\u0519\001\002\000\012" +
    "\030\ufe11\035\ufe11\170\u051c\171\u051b\001\002\000\006\030" +
    "\u051d\035\ufe37\001\002\000\006\030\ufe12\035\ufe12\001\002" +
    "\000\006\030\ufe13\035\ufe13\001\002\000\004\006\u0520\001" +
    "\002\000\004\035\u051f\001\002\000\020\027\ufe2c\030\ufe2c" +
    "\035\ufe2c\233\ufe2c\240\ufe2c\241\ufe2c\271\ufe2c\001\002\000" +
    "\012\030\ufe11\035\ufe11\170\u051c\171\u051b\001\002\000\006" +
    "\030\u051d\035\ufe37\001\002\000\004\035\ufe38\001\002\000" +
    "\004\006\u0524\001\002\000\012\030\ufe11\035\ufe11\170\u051c" +
    "\171\u051b\001\002\000\006\030\u051d\035\ufe37\001\002\000" +
    "\004\035\u0527\001\002\000\020\027\ufe32\030\ufe32\035\ufe32" +
    "\233\ufe32\240\ufe32\241\ufe32\271\ufe32\001\002\000\014\027" +
    "\ufe69\030\ufe69\035\ufe69\233\ufe69\241\ufe69\001\002\000\014" +
    "\027\ufe68\030\ufe68\035\ufe68\233\ufe68\241\ufe68\001\002\000" +
    "\004\136\u052f\001\002\000\050\006\044\007\242\011\274" +
    "\034\253\043\271\046\237\104\262\105\272\106\267\107" +
    "\265\110\241\115\273\116\270\376\254\377\256\u0100\236" +
    "\u0101\252\u0102\244\u0103\232\001\002\000\014\027\ufe6b\030" +
    "\ufe6b\035\ufe6b\233\ufe6b\241\ufe6b\001\002\000\004\035\u052e" +
    "\001\002\000\014\027\ufe58\030\ufe58\035\ufe58\233\ufe58\241" +
    "\ufe58\001\002\000\004\276\u0530\001\002\000\004\034\u0531" +
    "\001\002\000\050\006\044\007\242\011\274\034\253\043" +
    "\271\046\237\104\262\105\272\106\267\107\265\110\241" +
    "\115\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102" +
    "\244\u0103\232\001\002\000\004\035\u0533\001\002\000\014" +
    "\027\ufe59\030\ufe59\035\ufe59\233\ufe59\241\ufe59\001\002\000" +
    "\016\076\u04e8\201\u04eb\231\u04ea\234\u04e5\274\u04ec\275\u04e3" +
    "\001\002\000\014\027\ufe71\030\ufe71\035\ufe71\233\ufe71\241" +
    "\ufe71\001\002\000\050\006\044\007\242\011\274\034\253" +
    "\043\271\046\237\104\262\105\272\106\267\107\265\110" +
    "\241\115\273\116\270\376\254\377\256\u0100\236\u0101\252" +
    "\u0102\244\u0103\232\001\002\000\004\035\u0538\001\002\000" +
    "\014\027\ufe6a\030\ufe6a\035\ufe6a\233\ufe6a\241\ufe6a\001\002" +
    "\000\014\027\ufecc\030\ufecc\035\ufecc\233\ufecc\241\ufecc\001" +
    "\002\000\004\116\u053b\001\002\000\032\027\ufeca\030\ufeca" +
    "\035\ufeca\076\u04e8\201\u04eb\231\u04ea\233\ufeca\234\u04e5\241" +
    "\ufeca\274\u04ec\275\u04e3\303\u04e9\001\002\000\014\027\ufecd" +
    "\030\ufecd\035\ufecd\233\ufecd\241\ufecd\001\002\000\014\027" +
    "\ufe6e\030\ufe6e\035\ufe6e\233\ufe6e\241\ufe6e\001\002\000\014" +
    "\027\ufe6c\030\ufe6c\035\ufe6c\233\ufe6c\241\ufe6c\001\002\000" +
    "\014\027\ufed6\030\ufed6\035\ufed6\233\ufed6\241\ufed6\001\002" +
    "\000\004\006\u05c6\001\002\000\014\027\ufe7a\030\ufe7a\035" +
    "\ufe7a\233\ufe7a\241\ufe7a\001\002\000\004\034\u05c0\001\002" +
    "\000\014\027\ufe7c\030\ufe7c\035\ufe7c\233\ufe7c\241\ufe7c\001" +
    "\002\000\014\027\ufe7e\030\ufe7e\035\ufe7e\233\ufe7e\241\ufe7e" +
    "\001\002\000\014\027\ufe83\030\ufe83\035\ufe83\233\ufe83\241" +
    "\ufe83\001\002\000\032\027\ufe78\030\ufe78\035\ufe78\076\u04e8" +
    "\201\u04eb\231\u04ea\233\ufe78\234\u04e5\241\u0558\274\u04ec\275" +
    "\u04e3\303\u04e9\001\002\000\046\027\ufe78\030\ufe78\035\ufe78" +
    "\076\u04e8\116\u0557\120\u0548\166\u0542\201\u04eb\231\u04ea\233" +
    "\ufe78\234\u04e5\241\u0558\274\u04ec\275\u04e3\301\u0549\303\u054d" +
    "\304\u054e\312\u0546\001\002\000\006\116\u0572\136\u05bb\001" +
    "\002\000\004\060\u05b4\001\002\000\014\027\ufe75\030\u057e" +
    "\035\ufe75\233\ufe75\241\ufe75\001\002\000\014\027\ufe79\030" +
    "\ufe79\035\ufe79\233\ufe79\241\ufe79\001\002\000\052\027\ufe78" +
    "\030\ufe78\035\ufe78\076\u04e8\116\u0557\120\u0548\166\u0542\172" +
    "\u0540\201\u04eb\231\u04ea\233\ufe78\234\u04e5\241\u0558\274\u04ec" +
    "\275\u04e3\300\u0547\301\u0549\303\u054d\304\u054e\312\u0546\001" +
    "\002\000\004\006\044\001\002\000\004\305\u0569\001\002" +
    "\000\014\027\ufe86\030\ufe86\035\ufe86\233\ufe86\241\ufe86\001" +
    "\002\000\014\027\ufe88\030\ufe88\035\ufe88\233\ufe88\241\ufe88" +
    "\001\002\000\014\027\ufe8a\030\ufe8a\035\ufe8a\233\ufe8a\241" +
    "\ufe8a\001\002\000\014\027\ufe8c\030\ufe8c\035\ufe8c\233\ufe8c" +
    "\241\ufe8c\001\002\000\014\027\ufe8e\030\ufe8e\035\ufe8e\233" +
    "\ufe8e\241\ufe8e\001\002\000\014\027\ufe90\030\ufe90\035\ufe90" +
    "\233\ufe90\241\ufe90\001\002\000\014\027\ufe92\030\ufe92\035" +
    "\ufe92\233\ufe92\241\ufe92\001\002\000\014\027\ufeac\030\ufeac" +
    "\035\ufeac\233\ufeac\241\ufeac\001\002\000\034\027\ufe78\030" +
    "\ufe78\035\ufe78\076\u04e8\201\u04eb\231\u04ea\233\ufe78\234\u04e5" +
    "\241\u0558\274\u04ec\275\u04e3\303\u04e9\312\u0546\001\002\000" +
    "\004\006\044\001\002\000\024\027\ufe2b\030\ufe2b\035\ufe2b" +
    "\062\u050c\233\ufe2b\235\u055a\236\u055b\240\ufe2b\241\ufe2b\001" +
    "\002\000\020\027\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233\ufe2b" +
    "\240\ufe2b\241\ufe2b\001\002\000\020\027\ufe2b\030\ufe2b\035" +
    "\ufe2b\062\u050c\233\ufe2b\240\ufe2b\241\ufe2b\001\002\000\016" +
    "\027\ufe52\030\ufe52\035\ufe52\233\ufe52\240\u055e\241\ufe52\001" +
    "\002\000\014\027\ufe72\030\ufe72\035\ufe72\233\ufe72\241\ufe72" +
    "\001\002\000\014\006\u0562\007\u0560\076\u055f\116\u0563\201" +
    "\u0561\001\002\000\014\027\ufe56\030\ufe56\035\ufe56\233\ufe56" +
    "\241\ufe56\001\002\000\014\027\ufe57\030\ufe57\035\ufe57\233" +
    "\ufe57\241\ufe57\001\002\000\014\027\ufe55\030\ufe55\035\ufe55" +
    "\233\ufe55\241\ufe55\001\002\000\014\027\ufe54\030\ufe54\035" +
    "\ufe54\233\ufe54\241\ufe54\001\002\000\014\027\ufe53\030\ufe53" +
    "\035\ufe53\233\ufe53\241\ufe53\001\002\000\016\027\ufe52\030" +
    "\ufe52\035\ufe52\233\ufe52\240\u055e\241\ufe52\001\002\000\014" +
    "\027\ufe73\030\ufe73\035\ufe73\233\ufe73\241\ufe73\001\002\000" +
    "\016\027\ufe52\030\ufe52\035\ufe52\233\ufe52\240\u055e\241\ufe52" +
    "\001\002\000\014\027\ufe74\030\ufe74\035\ufe74\233\ufe74\241" +
    "\ufe74\001\002\000\014\027\ufe80\030\ufe80\035\ufe80\233\ufe80" +
    "\241\ufe80\001\002\000\004\117\u056a\001\002\000\004\306" +
    "\u056b\001\002\000\006\307\u056d\310\u056c\001\002\000\042" +
    "\027\ufe81\030\ufe81\035\ufe81\076\ufe81\116\ufe81\120\ufe81\201" +
    "\ufe81\231\ufe81\233\ufe81\234\ufe81\241\ufe81\274\ufe81\275\ufe81" +
    "\303\ufe81\311\u056e\312\ufe81\001\002\000\042\027\ufe81\030" +
    "\ufe81\035\ufe81\076\ufe81\116\ufe81\120\ufe81\201\ufe81\231\ufe81" +
    "\233\ufe81\234\ufe81\241\ufe81\274\ufe81\275\ufe81\303\ufe81\311" +
    "\u056e\312\ufe81\001\002\000\040\027\ufe82\030\ufe82\035\ufe82" +
    "\076\ufe82\116\ufe82\120\ufe82\201\ufe82\231\ufe82\233\ufe82\234" +
    "\ufe82\241\ufe82\274\ufe82\275\ufe82\303\ufe82\312\ufe82\001\002" +
    "\000\040\027\ufe78\030\ufe78\035\ufe78\076\u04e8\116\u0557\120" +
    "\u0571\201\u04eb\231\u04ea\233\ufe78\234\u04e5\241\u0558\274\u04ec" +
    "\275\u04e3\303\u04e9\312\u0546\001\002\000\014\027\ufe85\030" +
    "\ufe85\035\ufe85\233\ufe85\241\ufe85\001\002\000\004\116\u0572" +
    "\001\002\000\034\027\ufe78\030\ufe78\035\ufe78\076\u04e8\201" +
    "\u04eb\231\u04ea\233\ufe78\234\u04e5\241\u0558\274\u04ec\275\u04e3" +
    "\303\u04e9\312\u0546\001\002\000\014\027\ufe7f\030\ufe7f\035" +
    "\ufe7f\233\ufe7f\241\ufe7f\001\002\000\040\027\ufe78\030\ufe78" +
    "\035\ufe78\076\u04e8\116\u0557\120\u0571\201\u04eb\231\u04ea\233" +
    "\ufe78\234\u04e5\241\u0558\274\u04ec\275\u04e3\303\u04e9\312\u0546" +
    "\001\002\000\014\027\ufe84\030\ufe84\035\ufe84\233\ufe84\241" +
    "\ufe84\001\002\000\016\076\u0577\201\u04eb\231\u04ea\234\u04e5" +
    "\274\u04ec\275\u04e3\001\002\000\050\006\044\007\242\011" +
    "\274\034\u0579\043\271\046\237\104\262\105\272\106\267" +
    "\107\265\110\241\115\273\116\270\376\254\377\256\u0100" +
    "\236\u0101\252\u0102\244\u0103\232\001\002\000\044\027\ufe78" +
    "\030\ufe78\035\ufe78\076\u04e8\116\u0557\120\u0548\166\u0542\201" +
    "\u04eb\231\u04ea\233\ufe78\234\u04e5\241\u0558\274\u04ec\275\u04e3" +
    "\303\u04e9\304\u054e\312\u0546\001\002\000\050\006\044\007" +
    "\242\011\274\034\253\043\271\046\237\104\262\105\272" +
    "\106\267\107\265\110\241\115\273\116\270\376\254\377" +
    "\256\u0100\236\u0101\252\u0102\244\u0103\232\001\002\000\004" +
    "\035\u057b\001\002\000\072\010\ufca0\011\ufca0\012\ufca0\013" +
    "\ufca0\014\ufca0\015\ufca0\016\ufca0\017\ufca0\020\ufca0\021\ufca0" +
    "\023\ufca0\027\ufe6a\030\ufe6a\035\ufe6a\076\ufca0\116\ufca0\120" +
    "\ufca0\166\ufca0\201\ufca0\231\ufca0\233\ufe6a\234\ufca0\241\ufe6a" +
    "\274\ufca0\275\ufca0\303\ufca0\304\ufca0\312\ufca0\001\002\000" +
    "\014\027\ufe8b\030\ufe8b\035\ufe8b\233\ufe8b\241\ufe8b\001\002" +
    "\000\014\027\ufe93\030\ufe93\035\ufe93\233\ufe93\241\ufe93\001" +
    "\002\000\024\006\u04b7\076\u0584\201\u0587\231\u0586\234\u0581" +
    "\241\u04ad\274\u0588\275\u04e3\303\u0585\001\002\000\014\027" +
    "\ufe78\030\ufe78\035\ufe78\233\ufe78\241\u0558\001\002\000\014" +
    "\027\ufe7b\030\ufe7b\035\ufe7b\233\ufe7b\241\ufe7b\001\002\000" +
    "\024\027\ufe2b\030\ufe2b\034\u058c\035\ufe2b\062\u050c\233\ufe2b" +
    "\235\u058b\236\u058f\241\ufe2b\001\002\000\014\027\ufe76\030" +
    "\ufe76\035\ufe76\233\ufe76\241\ufe76\001\002\000\014\027\ufe75" +
    "\030\u057e\035\ufe75\233\ufe75\241\ufe75\001\002\000\004\034" +
    "\u05af\001\002\000\004\006\044\001\002\000\010\034\u052b" +
    "\120\u052a\231\u05a2\001\002\000\004\230\u058a\001\002\000" +
    "\004\230\u0589\001\002\000\006\274\u04ba\275\u04ef\001\002" +
    "\000\024\027\ufe2b\030\ufe2b\034\u058c\035\ufe2b\062\u050c\233" +
    "\ufe2b\235\u058b\236\u058f\241\ufe2b\001\002\000\020\027\ufe2b" +
    "\030\ufe2b\034\u058c\035\ufe2b\062\u050c\233\ufe2b\241\ufe2b\001" +
    "\002\000\004\006\u0591\001\002\000\014\027\ufebe\030\ufebe" +
    "\035\ufebe\233\ufebe\241\ufebe\001\002\000\014\027\ufec5\030" +
    "\ufec5\035\ufec5\233\ufec5\241\ufec5\001\002\000\020\027\ufe2b" +
    "\030\ufe2b\034\u058c\035\ufe2b\062\u050c\233\ufe2b\241\ufe2b\001" +
    "\002\000\014\027\ufebf\030\ufebf\035\ufebf\233\ufebf\241\ufebf" +
    "\001\002\000\012\030\ufe11\035\ufe11\170\u051c\171\u051b\001" +
    "\002\000\006\030\u0593\035\ufebb\001\002\000\004\006\u059e" +
    "\001\002\000\004\035\u0595\001\002\000\020\027\ufe2b\030" +
    "\ufe2b\035\ufe2b\060\u0596\062\u050c\233\ufe2b\241\ufe2b\001\002" +
    "\000\004\273\u059a\001\002\000\014\027\ufeb9\030\ufeb9\035" +
    "\ufeb9\233\ufeb9\241\ufeb9\001\002\000\014\027\ufebd\030\ufebd" +
    "\035\ufebd\233\ufebd\241\ufebd\001\002\000\014\027\ufeb8\030" +
    "\ufeb8\035\ufeb8\233\ufeb8\241\ufeb8\001\002\000\004\021\u059b" +
    "\001\002\000\004\115\u059c\001\002\000\016\027\ufe2b\030" +
    "\ufe2b\035\ufe2b\062\u050c\233\ufe2b\241\ufe2b\001\002\000\014" +
    "\027\ufeba\030\ufeba\035\ufeba\233\ufeba\241\ufeba\001\002\000" +
    "\012\030\ufe11\035\ufe11\170\u051c\171\u051b\001\002\000\006" +
    "\030\u0593\035\ufebb\001\002\000\004\035\ufebc\001\002\000" +
    "\014\027\ufec0\030\ufec0\035\ufec0\233\ufec0\241\ufec0\001\002" +
    "\000\006\034\u05a5\120\u05a4\001\002\000\014\027\ufec2\030" +
    "\ufec2\035\ufec2\233\ufec2\241\ufec2\001\002\000\004\136\u05a8" +
    "\001\002\000\050\006\044\007\242\011\274\034\253\043" +
    "\271\046\237\104\262\105\272\106\267\107\265\110\241" +
    "\115\273\116\270\376\254\377\256\u0100\236\u0101\252\u0102" +
    "\244\u0103\232\001\002\000\004\035\u05a7\001\002\000\014" +
    "\027\ufead\030\ufead\035\ufead\233\ufead\241\ufead\001\002\000" +
    "\004\276\u05a9\001\002\000\004\034\u05aa\001\002\000\050" +
    "\006\044\007\242\011\274\034\253\043\271\046\237\104" +
    "\262\105\272\106\267\107\265\110\241\115\273\116\270" +
    "\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232\001" +
    "\002\000\004\034\u05ac\001\002\000\014\027\ufeae\030\ufeae" +
    "\035\ufeae\233\ufeae\241\ufeae\001\002\000\016\076\u0584\201" +
    "\u0587\231\u0586\234\u0581\274\u0588\275\u04e3\001\002\000\014" +
    "\027\ufec7\030\ufec7\035\ufec7\233\ufec7\241\ufec7\001\002\000" +
    "\050\006\044\007\242\011\274\034\253\043\271\046\237" +
    "\104\262\105\272\106\267\107\265\110\241\115\273\116" +
    "\270\376\254\377\256\u0100\236\u0101\252\u0102\244\u0103\232" +
    "\001\002\000\004\035\u05b1\001\002\000\014\027\ufec1\030" +
    "\ufec1\035\ufec1\233\ufec1\241\ufec1\001\002\000\014\027\ufe77" +
    "\030\ufe77\035\ufe77\233\ufe77\241\ufe77\001\002\000\014\027" +
    "\ufec4\030\ufec4\035\ufec4\233\ufec4\241\ufec4\001\002\000\004" +
    "\034\u05b5\001\002\000\004\302\u05b6\001\002\000\004\021" +
    "\u05b7\001\002\000\004\007\u05b8\001\002\000\004\035\u05b9" +
    "\001\002\000\044\027\ufe78\030\ufe78\035\ufe78\076\u04e8\116" +
    "\u0557\120\u0548\166\u0542\201\u04eb\231\u04ea\233\ufe78\234\u04e5" +
    "\241\u0558\274\u04ec\275\u04e3\303\u054d\304\u054e\312\u0546\001" +
    "\002\000\014\027\ufe8d\030\ufe8d\035\ufe8d\233\ufe8d\241\ufe8d" +
    "\001\002\000\004\276\u05bc\001\002\000\042\027\ufe78\030" +
    "\ufe78\035\ufe78\076\u04e8\116\u0557\120\u0571\201\u04eb\231\u04ea" +
    "\233\ufe78\234\u04e5\241\u0558\274\u04ec\275\u04e3\303\u04e9\304" +
    "\u054e\312\u0546\001\002\000\014\027\ufe87\030\ufe87\035\ufe87" +
    "\233\ufe87\241\ufe87\001\002\000\014\027\ufe8f\030\ufe8f\035" +
    "\ufe8f\233\ufe8f\241\ufe8f\001\002\000\014\027\ufe7d\030\ufe7d" +
    "\035\ufe7d\233\ufe7d\241\ufe7d\001\002\000\004\115\u05c1\001" +
    "\002\000\004\030\u05c2\001\002\000\004\115\u05c3\001\002" +
    "\000\004\035\u05c4\001\002\000\042\027\ufe78\030\ufe78\035" +
    "\ufe78\076\u04e8\116\u0557\120\u0548\201\u04eb\231\u04ea\233\ufe78" +
    "\234\u04e5\241\u0558\274\u04ec\275\u04e3\303\u04e9\304\u054e\312" +
    "\u0546\001\002\000\014\027\ufe89\030\ufe89\035\ufe89\233\ufe89" +
    "\241\ufe89\001\002\000\050\027\ufe78\030\ufe78\035\ufe78\076" +
    "\u04e8\116\u0557\120\u0548\166\u0542\201\u04eb\231\u04ea\233\ufe78" +
    "\234\u04e5\241\u0558\274\u04ec\275\u04e3\300\u0547\301\u0549\303" +
    "\u054d\304\u054e\312\u0546\001\002\000\014\027\ufe91\030\ufe91" +
    "\035\ufe91\233\ufe91\241\ufe91\001\002\000\010\034\u058c\235" +
    "\u05ca\236\u05c9\001\002\000\004\034\u058c\001\002\000\004" +
    "\034\u058c\001\002\000\014\027\ufed8\030\ufed8\035\ufed8\233" +
    "\ufed8\241\ufed8\001\002\000\014\076\u04b1\201\u04b6\231\u04b5" +
    "\234\u04ae\274\u04b8\001\002\000\050\006\044\007\242\011" +
    "\274\034\253\043\271\046\237\104\262\105\272\106\267" +
    "\107\265\110\241\115\273\116\270\376\254\377\256\u0100" +
    "\236\u0101\252\u0102\244\u0103\232\001\002\000\004\035\u05cf" +
    "\001\002\000\014\027\ufec1\030\ufec1\035\ufec1\233\ufec1\241" +
    "\ufec1\001\002\000\014\027\ufed9\030\ufed9\035\ufed9\233\ufed9" +
    "\241\ufed9\001\002\000\010\027\uff7e\030\uff7e\233\uff7e\001" +
    "\002\000\012\034\u05d5\235\u05d3\236\u05d4\272\u05d6\001\002" +
    "\000\006\034\u05ef\272\u05f0\001\002\000\006\034\u05e2\272" +
    "\u05e3\001\002\000\004\006\u05dc\001\002\000\004\034\u05d7" +
    "\001\002\000\004\006\u011f\001\002\000\004\035\u05d9\001" +
    "\002\000\020\027\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233\ufe2b" +
    "\240\ufe2b\241\ufe2b\001\002\000\016\027\ufe52\030\ufe52\035" +
    "\ufe52\233\ufe52\240\u055e\241\ufe52\001\002\000\014\027\ufe4c" +
    "\030\ufe4c\035\ufe4c\233\ufe4c\241\ufe4c\001\002\000\012\030" +
    "\ufe11\035\ufe11\170\u051c\171\u051b\001\002\000\006\030\u0593" +
    "\035\ufebb\001\002\000\004\035\u05df\001\002\000\020\027" +
    "\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233\ufe2b\240\ufe2b\241\ufe2b" +
    "\001\002\000\016\027\ufe52\030\ufe52\035\ufe52\233\ufe52\240" +
    "\u055e\241\ufe52\001\002\000\014\027\ufe4f\030\ufe4f\035\ufe4f" +
    "\233\ufe4f\241\ufe4f\001\002\000\004\006\u05e9\001\002\000" +
    "\004\034\u05e4\001\002\000\004\006\u011f\001\002\000\004" +
    "\035\u05e6\001\002\000\020\027\ufe2b\030\ufe2b\035\ufe2b\062" +
    "\u050c\233\ufe2b\240\ufe2b\241\ufe2b\001\002\000\016\027\ufe52" +
    "\030\ufe52\035\ufe52\233\ufe52\240\u055e\241\ufe52\001\002\000" +
    "\014\027\ufe4d\030\ufe4d\035\ufe4d\233\ufe4d\241\ufe4d\001\002" +
    "\000\012\030\ufe11\035\ufe11\170\u051c\171\u051b\001\002\000" +
    "\006\030\u0593\035\ufebb\001\002\000\004\035\u05ec\001\002" +
    "\000\020\027\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233\ufe2b\240" +
    "\ufe2b\241\ufe2b\001\002\000\016\027\ufe52\030\ufe52\035\ufe52" +
    "\233\ufe52\240\u055e\241\ufe52\001\002\000\014\027\ufe50\030" +
    "\ufe50\035\ufe50\233\ufe50\241\ufe50\001\002\000\004\006\u05f3" +
    "\001\002\000\020\027\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233" +
    "\ufe2b\240\ufe2b\241\ufe2b\001\002\000\016\027\ufe52\030\ufe52" +
    "\035\ufe52\233\ufe52\240\u055e\241\ufe52\001\002\000\014\027" +
    "\ufe4e\030\ufe4e\035\ufe4e\233\ufe4e\241\ufe4e\001\002\000\012" +
    "\030\ufe11\035\ufe11\170\u051c\171\u051b\001\002\000\006\030" +
    "\u0593\035\ufebb\001\002\000\004\035\u05f6\001\002\000\020" +
    "\027\ufe2b\030\ufe2b\035\ufe2b\062\u050c\233\ufe2b\240\ufe2b\241" +
    "\ufe2b\001\002\000\016\027\ufe52\030\ufe52\035\ufe52\233\ufe52" +
    "\240\u055e\241\ufe52\001\002\000\014\027\ufe51\030\ufe51\035" +
    "\ufe51\233\ufe51\241\ufe51\001\002\000\004\006\044\001\002" +
    "\000\042\006\067\047\u05fe\244\u05fd\315\062\316\053\317" +
    "\055\320\071\321\063\322\057\323\066\324\054\325\060" +
    "\326\064\327\056\330\070\331\061\001\002\000\016\027" +
    "\uff95\030\uff95\116\u0612\120\u060f\172\u060e\233\uff95\001\002" +
    "\000\010\027\uff7c\030\u04a5\233\uff7c\001\002\000\016\120" +
    "\u0602\277\u0600\300\u0605\301\u05ff\311\u0603\312\u0601\001\002" +
    "\000\016\120\u0602\277\u0600\300\u0605\301\u05ff\311\u0603\312" +
    "\u0601\001\002\000\012\027\uff8f\030\uff8f\060\u0608\233\uff8f" +
    "\001\002\000\010\027\uff93\030\uff93\233\uff93\001\002\000" +
    "\010\027\uff94\030\uff94\233\uff94\001\002\000\004\136\u0606" +
    "\001\002\000\010\027\uff90\030\uff90\233\uff90\001\002\000" +
    "\010\027\uffa0\030\uffa0\233\uffa0\001\002\000\010\027\uff91" +
    "\030\uff91\233\uff91\001\002\000\004\276\u0607\001\002\000" +
    "\010\027\uff92\030\uff92\233\uff92\001\002\000\004\302\u0609" +
    "\001\002\000\004\021\u060a\001\002\000\004\007\u060b\001" +
    "\002\000\010\027\uff8e\030\uff8e\233\uff8e\001\002\000\010" +
    "\027\uffa1\030\uffa1\233\uffa1\001\002\000\010\027\uff7f\030" +
    "\uff7f\233\uff7f\001\002\000\004\006\u0616\001\002\000\004" +
    "\116\u0614\001\002\000\010\027\uff9a\030\uff9a\233\uff9a\001" +
    "\002\000\010\027\uffa2\030\uffa2\233\uffa2\001\002\000\012" +
    "\027\uff98\030\uff98\233\uff98\300\u0613\001\002\000\010\027" +
    "\uff99\030\uff99\233\uff99\001\002\000\012\027\uff96\030\uff96" +
    "\233\uff96\300\u0615\001\002\000\010\027\uff97\030\uff97\233" +
    "\uff97\001\002\000\014\027\uff95\030\uff95\116\u0612\120\u060f" +
    "\233\uff95\001\002\000\010\027\uff9b\030\uff9b\233\uff9b\001" +
    "\002\000\010\027\uff7c\030\u04a5\233\uff7c\001\002\000\010" +
    "\027\uff7d\030\uff7d\233\uff7d\001\002\000\010\027\uff84\030" +
    "\uff84\233\uff84\001\002\000\010\027\uff7c\030\u04a5\233\uff7c" +
    "\001\002\000\004\051\u061d\001\002\000\004\006\u061b\001" +
    "\002\000\010\027\uff85\030\uff85\233\uff85\001\002\000\010" +
    "\027\uff7b\030\uff7b\233\uff7b\001\002\000\010\027\uff87\030" +
    "\uff87\233\uff87\001\002\000\004\051\u0622\001\002\000\004" +
    "\006\u04a1\001\002\000\010\027\uff88\030\uff88\233\uff88\001" +
    "\002\000\010\047\u0628\244\u0627\247\u0626\001\002\000\006" +
    "\027\uffa4\233\uffa4\001\002\000\004\333\u062d\001\002\000" +
    "\022\006\u04b7\076\u04b1\201\u04b6\231\u04b5\234\u04ae\241\u04ad" +
    "\274\u04b8\303\u04b2\001\002\000\012\006\u04a1\050\u04a2\303" +
    "\u049f\333\u04a0\001\002\000\010\027\uff9c\030\u0624\233\uff9c" +
    "\001\002\000\006\027\uff9d\233\uff9d\001\002\000\010\027" +
    "\uff9c\030\u0624\233\uff9c\001\002\000\006\027\uff9e\233\uff9e" +
    "\001\002\000\004\006\044\001\002\000\036\006\067\315" +
    "\062\316\053\317\055\320\071\321\063\322\057\323\066" +
    "\324\054\325\060\326\064\327\056\330\070\331\061\001" +
    "\002\000\016\027\uff95\030\uff95\116\u0612\120\u060f\172\u060e" +
    "\233\uff95\001\002\000\010\027\uff9c\030\u0624\233\uff9c\001" +
    "\002\000\006\027\uff9f\233\uff9f\001\002\000\010\027\uff9c" +
    "\030\u0624\233\uff9c\001\002\000\006\027\uffa3\233\uffa3\001" +
    "\002\000\010\027\uff9c\030\u0624\233\uff9c\001\002\000\006" +
    "\027\uffa5\233\uffa5\001\002\000\004\006\044\001\002\000" +
    "\042\006\067\047\u05fe\244\u05fd\315\062\316\053\317\055" +
    "\320\071\321\063\322\057\323\066\324\054\325\060\326" +
    "\064\327\056\330\070\331\061\001\002\000\010\027\uff9c" +
    "\030\u0624\233\uff9c\001\002\000\006\027\uffa6\233\uffa6\001" +
    "\002\000\006\034\u063e\117\u063d\001\002\000\006\027\ufe0f" +
    "\233\ufe0f\001\002\000\006\027\135\233\133\001\002\000" +
    "\004\173\231\001\002\000\004\006\u011f\001\002\000\004" +
    "\035\u0640\001\002\000\004\117\u063d\001\002\000\006\027" +
    "\ufe10\233\ufe10\001\002\000\010\027\ufe0c\060\u0643\233\ufe0c" +
    "\001\002\000\004\231\u0645\001\002\000\006\027\ufe0e\233" +
    "\ufe0e\001\002\000\004\232\u0646\001\002\000\006\027\ufe0d" +
    "\233\ufe0d\001\002\000\050\002\uffb2\003\027\005\010\006" +
    "\ufccf\043\ufccf\047\024\055\013\064\012\065\007\066\015" +
    "\070\020\102\004\103\035\131\031\161\032\173\006\175" +
    "\017\247\022\350\034\001\002\000\004\002\uffb1\001\002" +
    "\000\014\027\u064b\043\uff13\060\uff13\117\uff13\136\uff13\001" +
    "\002\000\012\043\u0651\060\u064f\117\u064d\136\u064e\001\002" +
    "\000\004\115\u064c\001\002\000\012\043\uff14\060\uff14\117" +
    "\uff14\136\uff14\001\002\000\014\066\u0690\070\u0275\131\u0271" +
    "\161\u0274\173\231\001\002\000\004\276\u068d\001\002\000" +
    "\012\102\u066f\103\u066d\337\u066e\340\u0670\001\002\000\006" +
    "\027\uff11\233\uff11\001\002\000\004\006\u0655\001\002\000" +
    "\006\027\ufef3\233\ufef3\001\002\000\006\027\uff0d\233\uff0d" +
    "\001\002\000\006\027\uff16\233\uff16\001\002\000\036\006" +
    "\067\315\062\316\053\317\055\320\071\321\063\322\057" +
    "\323\066\324\054\325\060\326\064\327\056\330\070\331" +
    "\061\001\002\000\024\021\ufefe\030\ufefe\060\ufefe\100\ufefe" +
    "\117\ufefe\136\ufefe\344\u0658\345\ufefe\346\ufefe\001\002\000" +
    "\022\021\u0659\030\ufefc\060\ufefc\100\ufefc\117\ufefc\136\ufefc" +
    "\345\ufefc\346\ufefc\001\002\000\022\021\ufeff\030\ufeff\060" +
    "\ufeff\100\ufeff\117\ufeff\136\ufeff\345\ufeff\346\ufeff\001\002" +
    "\000\004\076\u066b\001\002\000\020\030\ufef9\060\ufef9\100" +
    "\u065c\117\ufef9\136\ufef9\345\u065b\346\ufef9\001\002\000\014" +
    "\030\ufefb\060\ufefb\117\ufefb\136\ufefb\346\ufefb\001\002\000" +
    "\014\030\ufefa\060\ufefa\117\ufefa\136\ufefa\346\ufefa\001\002" +
    "\000\014\030\ufef7\060\ufef7\117\ufef7\136\ufef7\346\u065f\001" +
    "\002\000\012\030\u0660\060\ufef5\117\ufef5\136\ufef5\001\002" +
    "\000\012\030\ufef8\060\ufef8\117\ufef8\136\ufef8\001\002\000" +
    "\004\043\u0663\001\002\000\010\060\u064f\117\u064d\136\u064e" +
    "\001\002\000\006\027\uff12\233\uff12\001\002\000\004\006" +
    "\u0664\001\002\000\036\006\067\315\062\316\053\317\055" +
    "\320\071\321\063\322\057\323\066\324\054\325\060\326" +
    "\064\327\056\330\070\331\061\001\002\000\024\021\ufefe" +
    "\030\ufefe\060\ufefe\100\ufefe\117\ufefe\136\ufefe\344\u0658\345" +
    "\ufefe\346\ufefe\001\002\000\022\021\u0659\030\ufefc\060\ufefc" +
    "\100\ufefc\117\ufefc\136\ufefc\345\ufefc\346\ufefc\001\002\000" +
    "\020\030\ufef9\060\ufef9\100\u065c\117\ufef9\136\ufef9\345\u065b" +
    "\346\ufef9\001\002\000\014\030\ufef7\060\ufef7\117\ufef7\136" +
    "\ufef7\346\u065f\001\002\000\012\030\u0660\060\ufef5\117\ufef5" +
    "\136\ufef5\001\002\000\010\060\ufef6\117\ufef6\136\ufef6\001" +
    "\002\000\020\030\ufefd\060\ufefd\100\ufefd\117\ufefd\136\ufefd" +
    "\345\ufefd\346\ufefd\001\002\000\006\117\u064d\136\u064e\001" +
    "\002\000\004\117\u068a\001\002\000\006\117\u064d\136\u064e" +
    "\001\002\000\004\117\u0672\001\002\000\006\117\u064d\136" +
    "\u064e\001\002\000\006\027\uff0f\233\uff0f\001\002\000\014" +
    "\006\u0677\007\u0676\341\u0674\342\u0678\343\u0673\001\002\000" +
    "\010\030\u0679\117\uff00\136\uff00\001\002\000\010\030\u0679" +
    "\117\uff00\136\uff00\001\002\000\006\117\uff0c\136\uff0c\001" +
    "\002\000\010\030\u0679\117\uff00\136\uff00\001\002\000\010" +
    "\030\u0679\117\uff00\136\uff00\001\002\000\010\030\u0679\117" +
    "\uff00\136\uff00\001\002\000\014\006\u067e\007\u067d\341\u067c" +
    "\342\u067f\343\u067b\001\002\000\006\117\uff09\136\uff09\001" +
    "\002\000\010\030\u0679\117\uff00\136\uff00\001\002\000\010" +
    "\030\u0679\117\uff00\136\uff00\001\002\000\010\030\u0679\117" +
    "\uff00\136\uff00\001\002\000\010\030\u0679\117\uff00\136\uff00" +
    "\001\002\000\010\030\u0679\117\uff00\136\uff00\001\002\000" +
    "\006\117\uff04\136\uff04\001\002\000\006\117\uff01\136\uff01" +
    "\001\002\000\006\117\uff02\136\uff02\001\002\000\006\117" +
    "\uff05\136\uff05\001\002\000\006\117\uff03\136\uff03\001\002" +
    "\000\006\117\uff06\136\uff06\001\002\000\006\117\uff07\136" +
    "\uff07\001\002\000\006\117\uff0a\136\uff0a\001\002\000\006" +
    "\117\uff08\136\uff08\001\002\000\006\027\uff10\233\uff10\001" +
    "\002\000\014\006\u0677\007\u0676\341\u0674\342\u0678\343\u0673" +
    "\001\002\000\006\117\uff0b\136\uff0b\001\002\000\006\027" +
    "\uff0e\233\uff0e\001\002\000\004\117\u064d\001\002\000\006" +
    "\027\ufef4\233\ufef4\001\002\000\006\027\ufef1\233\ufef1\001" +
    "\002\000\012\070\u0275\131\u0271\161\u0274\173\231\001\002" +
    "\000\004\310\u0692\001\002\000\006\027\135\233\133\001" +
    "\002\000\006\027\ufef2\233\ufef2\001\002\000\014\027\u064b" +
    "\043\uff13\060\uff13\117\uff13\136\uff13\001\002\000\012\043" +
    "\u0651\060\u064f\117\u064d\136\u064e\001\002\000\006\027\uff15" +
    "\233\uff15\001\002\000\050\002\uffab\003\027\005\010\006" +
    "\ufccf\043\ufccf\047\024\055\013\064\012\065\007\066\015" +
    "\070\020\102\004\103\035\131\031\161\032\173\006\175" +
    "\017\247\022\350\034\001\002\000\004\002\uffac\001\002" +
    "\000\004\060\u069a\001\002\000\016\206\u06a2\223\u069e\224" +
    "\u06a4\251\u06a3\252\u06a1\253\u06a0\001\002\000\006\027\135" +
    "\233\133\001\002\000\050\002\uffaf\003\027\005\010\006" +
    "\ufccf\043\ufccf\047\024\055\013\064\012\065\007\066\015" +
    "\070\020\102\004\103\035\131\031\161\032\173\006\175" +
    "\017\247\022\350\034\001\002\000\004\002\uffb0\001\002" +
    "\000\004\021\u06ba\001\002\000\010\027\uff4b\030\u06b6\233" +
    "\uff4b\001\002\000\004\021\u06b3\001\002\000\004\021\u06b0" +
    "\001\002\000\004\021\u06ae\001\002\000\004\021\u06ab\001" +
    "\002\000\004\021\u06a5\001\002\000\004\007\u06a6\001\002" +
    "\000\012\027\uff49\030\uff49\233\uff49\254\u06a8\001\002\000" +
    "\010\027\uff51\030\uff51\233\uff51\001\002\000\004\021\u06a9" +
    "\001\002\000\004\007\u06aa\001\002\000\010\027\uff4a\030" +
    "\uff4a\233\uff4a\001\002\000\006\006\u06ac\177\u06ad\001\002" +
    "\000\010\027\uff4f\030\uff4f\233\uff4f\001\002\000\010\027" +
    "\uff50\030\uff50\233\uff50\001\002\000\004\006\u06af\001\002" +
    "\000\010\027\uff55\030\uff55\233\uff55\001\002\000\006\006" +
    "\u06b1\116\u06b2\001\002\000\010\027\uff54\030\uff54\233\uff54" +
    "\001\002\000\010\027\uff53\030\uff53\233\uff53\001\002\000" +
    "\006\062\u06b4\063\u06b5\001\002\000\010\027\uff4e\030\uff4e" +
    "\233\uff4e\001\002\000\010\027\uff4d\030\uff4d\233\uff4d\001" +
    "\002\000\016\206\u06a2\223\u069e\224\u06a4\251\u06a3\252\u06a1" +
    "\253\u06a0\001\002\000\006\027\uff56\233\uff56\001\002\000" +
    "\010\027\uff4b\030\u06b6\233\uff4b\001\002\000\006\027\uff4c" +
    "\233\uff4c\001\002\000\004\006\u06bb\001\002\000\010\027" +
    "\uff52\030\uff52\233\uff52\001\002\000\012\172\u06c1\243\u06c5" +
    "\244\u06c3\246\u06c6\001\002\000\012\172\u06c1\243\u06c5\244" +
    "\u06c3\246\u06c6\001\002\000\006\027\135\233\133\001\002" +
    "\000\050\002\uffb3\003\027\005\010\006\ufccf\043\ufccf\047" +
    "\024\055\013\064\012\065\007\066\015\070\020\102\004" +
    "\103\035\131\031\161\032\173\006\175\017\247\022\350" +
    "\034\001\002\000\004\002\uffb4\001\002\000\006\006\u070c" +
    "\007\u070b\001\002\000\006\027\uff43\233\uff43\001\002\000" +
    "\006\202\u06f7\245\u06f8\001\002\000\006\027\uff47\233\uff47" +
    "\001\002\000\006\206\u06ca\245\u06cb\001\002\000\004\245" +
    "\u06c7\001\002\000\006\006\u06c9\007\u06c8\001\002\000\006" +
    "\027\uff3f\233\uff3f\001\002\000\006\027\uff40\233\uff40\001" +
    "\002\000\004\021\u06f5\001\002\000\004\034\u06cc\001\002" +
    "\000\004\206\u06ce\001\002\000\006\027\uff3e\233\uff3e\001" +
    "\002\000\004\021\u06cf\001\002\000\006\006\u06d2\007\u06d0" +
    "\001\002\000\004\030\ufdde\001\002\000\004\030\u06d3\001" +
    "\002\000\004\030\ufddf\001\002\000\006\207\u06d4\245\u06d6" +
    "\001\002\000\004\021\ufdd4\001\002\000\004\021\u06d7\001" +
    "\002\000\004\021\ufdd5\001\002\000\004\007\u06d8\001\002" +
    "\000\006\030\u06d9\035\ufdd6\001\002\000\010\210\u06e0\211" +
    "\u06df\213\u06de\001\002\000\004\035\ufdd9\001\002\000\004" +
    "\035\ufddc\001\002\000\004\035\u06dd\001\002\000\026\027" +
    "\ufde0\030\ufde0\076\ufde0\117\ufde0\124\ufde0\136\ufde0\172\ufde0" +
    "\202\ufde0\233\ufde0\250\ufde0\001\002\000\004\021\u06f1\001" +
    "\002\000\004\021\u06ea\001\002\000\004\021\u06e1\001\002" +
    "\000\004\115\u06e2\001\002\000\016\030\ufde7\035\ufde7\214" +
    "\u06e5\215\u06e7\216\u06e6\217\u06e3\001\002\000\006\030\ufde8" +
    "\035\ufde8\001\002\000\006\030\u06e8\035\ufdd6\001\002\000" +
    "\006\030\ufdeb\035\ufdeb\001\002\000\006\030\ufde9\035\ufde9" +
    "\001\002\000\006\030\ufdea\035\ufdea\001\002\000\006\211" +
    "\u06df\213\u06de\001\002\000\004\035\ufddd\001\002\000\004" +
    "\115\u06eb\001\002\000\020\030\ufde7\035\ufde7\212\u06ed\214" +
    "\u06e5\215\u06e7\216\u06e6\217\u06e3\001\002\000\006\030\u06ee" +
    "\035\ufdd6\001\002\000\006\030\u06ee\035\ufdd6\001\002\000" +
    "\004\213\u06de\001\002\000\004\035\ufdda\001\002\000\004" +
    "\035\ufddb\001\002\000\004\115\u06f2\001\002\000\016\014" +
    "\u06f4\035\ufde7\214\u06e5\215\u06e7\216\u06e6\217\u06e3\001\002" +
    "\000\004\035\ufdd8\001\002\000\004\035\ufdd7\001\002\000" +
    "\004\006\u06f6\001\002\000\006\027\uff46\233\uff46\001\002" +
    "\000\004\245\u0703\001\002\000\004\034\u06cc\001\002\000" +
    "\012\027\uff3c\030\u06fa\233\uff3c\250\uff3c\001\002\000\004" +
    "\034\u06cc\001\002\000\010\027\uff39\233\uff39\250\u06fc\001" +
    "\002\000\004\203\u06fe\001\002\000\006\027\uff42\233\uff42" +
    "\001\002\000\006\006\u0700\007\u06ff\001\002\000\006\027" +
    "\uff3b\233\uff3b\001\002\000\006\027\uff3a\233\uff3a\001\002" +
    "\000\012\027\uff3c\030\u06fa\233\uff3c\250\uff3c\001\002\000" +
    "\010\027\uff3d\233\uff3d\250\uff3d\001\002\000\004\034\u06cc" +
    "\001\002\000\012\027\ufde1\076\u0705\124\u0706\233\ufde1\001" +
    "\002\000\010\027\ufde3\034\ufde3\233\ufde3\001\002\000\006" +
    "\204\u0708\205\u0709\001\002\000\006\027\uff41\233\uff41\001" +
    "\002\000\012\027\ufde4\034\ufde4\076\u070a\233\ufde4\001\002" +
    "\000\010\027\ufde2\034\ufde2\233\ufde2\001\002\000\010\027" +
    "\ufde5\034\ufde5\233\ufde5\001\002\000\006\027\uff44\233\uff44" +
    "\001\002\000\006\027\uff45\233\uff45\001\002\000\006\027" +
    "\uff48\233\uff48\001\002\000\004\062\uff6f\001\002\000\004" +
    "\062\uff70\001\002\000\004\062\u0711\001\002\000\004\006" +
    "\044\001\002\000\006\027\135\233\133\001\002\000\050" +
    "\002\uffad\003\027\005\010\006\ufccf\043\ufccf\047\024\055" +
    "\013\064\012\065\007\066\015\070\020\102\004\103\035" +
    "\131\031\161\032\173\006\175\017\247\022\350\034\001" +
    "\002\000\004\002\uffae\001\002\000\020\132\u071b\255\u071a" +
    "\256\u0716\257\u0718\260\u0717\261\u071c\262\u071d\001\002\000" +
    "\006\027\uff6c\233\uff6c\001\002\000\006\027\uff69\233\uff69" +
    "\001\002\000\010\027\uff63\233\uff63\270\u073a\001\002\000" +
    "\006\027\uff6e\233\uff6e\001\002\000\010\027\uff63\233\uff63" +
    "\270\u073a\001\002\000\004\034\u071e\001\002\000\006\027" +
    "\uff68\233\uff68\001\002\000\006\027\uff67\233\uff67\001\002" +
    "\000\014\263\u0721\264\u071f\265\u0724\266\u0722\267\u0723\001" +
    "\002\000\004\021\u0736\001\002\000\006\030\u0731\035\uff57" +
    "\001\002\000\004\021\u072e\001\002\000\004\021\u072b\001" +
    "\002\000\004\021\u0728\001\002\000\004\021\u0725\001\002" +
    "\000\006\062\u0726\063\u0727\001\002\000\006\030\uff5e\035" +
    "\uff5e\001\002\000\006\030\uff5d\035\uff5d\001\002\000\006" +
    "\062\u0729\063\u072a\001\002\000\006\030\uff5a\035\uff5a\001" +
    "\002\000\006\030\uff59\035\uff59\001\002\000\006\062\u072c" +
    "\063\u072d\001\002\000\006\030\uff5c\035\uff5c\001\002\000" +
    "\006\030\uff5b\035\uff5b\001\002\000\006\062\u072f\063\u0730" +
    "\001\002\000\006\030\uff62\035\uff62\001\002\000\006\030" +
    "\uff61\035\uff61\001\002\000\014\263\u0721\264\u071f\265\u0724" +
    "\266\u0722\267\u0723\001\002\000\004\035\u0733\001\002\000" +
    "\006\027\uff6a\233\uff6a\001\002\000\006\030\u0731\035\uff57" +
    "\001\002\000\004\035\uff58\001\002\000\006\062\u0737\063" +
    "\u0738\001\002\000\006\030\uff60\035\uff60\001\002\000\006" +
    "\030\uff5f\035\uff5f\001\002\000\006\027\uff6d\233\uff6d\001" +
    "\002\000\004\021\u073b\001\002\000\010\046\u073d\111\u073c" +
    "\115\u073e\001\002\000\006\027\uff66\233\uff66\001\002\000" +
    "\006\027\uff64\233\uff64\001\002\000\006\027\uff65\233\uff65" +
    "\001\002\000\006\027\uff6b\233\uff6b\001\002\000\050\002" +
    "\uffa9\003\027\005\010\006\ufccf\043\ufccf\047\024\055\013" +
    "\064\012\065\007\066\015\070\020\102\004\103\035\131" +
    "\031\161\032\173\006\175\017\247\022\350\034\001\002" +
    "\000\004\002\uffaa\001\002\000\006\027\135\233\133\001" +
    "\002\000\050\002\ufc6e\003\027\005\010\006\ufccf\043\ufccf" +
    "\047\024\055\013\064\012\065\007\066\015\070\020\102" +
    "\004\103\035\131\031\161\032\173\006\175\017\247\022" +
    "\350\034\001\002\000\004\002\ufc6f\001\002\000\004\247" +
    "\u083d\001\002\000\004\002\ufff5\001\002\000\006\027\135" +
    "\233\133\001\002\000\004\006\u081f\001\002\000\004\006" +
    "\044\001\002\000\006\027\uff29\233\uff29\001\002\000\006" +
    "\027\135\233\133\001\002\000\010\235\u07de\236\u07df\241" +
    "\u07e0\001\002\000\004\241\u07d5\001\002\000\004\006\u079e" +
    "\001\002\000\004\241\u0795\001\002\000\004\006\044\001" +
    "\002\000\006\006\044\007\u0757\001\002\000\006\027\uff17" +
    "\233\uff17\001\002\000\006\027\135\233\133\001\002\000" +
    "\050\002\uff2e\003\027\005\010\006\ufccf\043\ufccf\047\024" +
    "\055\013\064\012\065\007\066\015\070\020\102\004\103" +
    "\035\131\031\161\032\173\006\175\017\247\022\350\034" +
    "\001\002\000\004\002\uff2d\001\002\000\004\062\ufe3b\001" +
    "\002\000\004\062\ufe3a\001\002\000\004\062\u0759\001\002" +
    "\000\004\006\u075b\001\002\000\004\034\u075e\001\002\000" +
    "\010\031\170\034\ufbf2\242\u075c\001\002\000\004\006\u075d" +
    "\001\002\000\004\034\u075e\001\002\000\004\006\u0760\001" +
    "\002\000\006\027\ufe3c\233\ufe3c\001\002\000\012\030\ufe11" +
    "\035\ufe11\170\u051c\171\u051b\001\002\000\006\030\u051d\035" +
    "\ufe37\001\002\000\004\035\u0763\001\002\000\016\027\ufe2b" +
    "\062\u050c\134\u0764\233\ufe2b\237\u0766\240\ufe2b\001\002\000" +
    "\004\006\u0774\001\002\000\006\027\ufe35\233\ufe35\001\002" +
    "\000\004\034\u076d\001\002\000\006\027\ufe39\233\ufe39\001" +
    "\002\000\010\027\ufe28\233\ufe28\240\u0769\001\002\000\006" +
    "\006\u076b\116\u076c\001\002\000\006\027\ufe33\233\ufe33\001" +
    "\002\000\006\027\ufe2a\233\ufe2a\001\002\000\006\027\ufe29" +
    "\233\ufe29\001\002\000\004\006\u011f\001\002\000\004\035" +
    "\u076f\001\002\000\014\027\ufe2b\062\u050c\134\u0764\233\ufe2b" +
    "\240\ufe2b\001\002\000\006\027\ufe36\233\ufe36\001\002\000" +
    "\012\027\ufe2b\062\u050c\233\ufe2b\240\ufe2b\001\002\000\014" +
    "\027\ufe25\062\ufe25\121\ufe25\233\ufe25\240\ufe25\001\002\000" +
    "\014\027\ufe26\062\ufe26\121\u078c\233\ufe26\240\ufe26\001\002" +
    "\000\032\015\u077b\016\u0776\017\u077c\020\u077d\021\u0780\023" +
    "\u0781\126\u0782\130\u077a\150\u077f\151\u077e\152\u0778\153\u0777" +
    "\001\002\000\014\027\ufe24\062\ufe24\121\ufe24\233\ufe24\240" +
    "\ufe24\001\002\000\014\007\ufe18\011\ufe18\046\ufe18\115\ufe18" +
    "\116\ufe18\001\002\000\014\007\ufe1c\011\ufe1c\046\ufe1c\115" +
    "\ufe1c\116\ufe1c\001\002\000\014\007\ufe17\011\ufe17\046\ufe17" +
    "\115\ufe17\116\ufe17\001\002\000\014\007\242\011\274\046" +
    "\237\115\273\116\270\001\002\000\004\034\u0784\001\002" +
    "\000\014\007\ufe19\011\ufe19\046\ufe19\115\ufe19\116\ufe19\001" +
    "\002\000\014\007\ufe16\011\ufe16\046\ufe16\115\ufe16\116\ufe16" +
    "\001\002\000\014\007\ufe15\011\ufe15\046\ufe15\115\ufe15\116" +
    "\ufe15\001\002\000\014\007\ufe14\011\ufe14\046\ufe14\115\ufe14" +
    "\116\ufe14\001\002\000\014\007\ufe1a\011\ufe1a\046\ufe1a\115" +
    "\ufe1a\116\ufe1a\001\002\000\014\007\ufe1d\011\ufe1d\046\ufe1d" +
    "\115\ufe1d\116\ufe1d\001\002\000\014\007\ufe1b\011\ufe1b\046" +
    "\ufe1b\115\ufe1b\116\ufe1b\001\002\000\016\007\ufe1f\011\ufe1f" +
    "\046\ufe1f\115\ufe1f\116\ufe1f\120\u0783\001\002\000\014\007" +
    "\ufe1e\011\ufe1e\046\ufe1e\115\ufe1e\116\ufe1e\001\002\000\014" +
    "\007\242\011\274\046\237\115\273\116\270\001\002\000" +
    "\006\030\u0786\035\ufe21\001\002\000\014\007\242\011\274" +
    "\046\237\115\273\116\270\001\002\000\004\035\u0788\001" +
    "\002\000\014\027\ufe23\062\ufe23\121\ufe23\233\ufe23\240\ufe23" +
    "\001\002\000\006\030\u0786\035\ufe21\001\002\000\004\035" +
    "\ufe22\001\002\000\014\027\ufe20\062\ufe20\121\ufe20\233\ufe20" +
    "\240\ufe20\001\002\000\004\006\u0774\001\002\000\012\027" +
    "\ufe27\062\ufe27\233\ufe27\240\ufe27\001\002\000\010\027\ufe28" +
    "\233\ufe28\240\u0769\001\002\000\006\027\ufe34\233\ufe34\001" +
    "\002\000\006\027\ufe42\233\ufe42\001\002\000\006\034\u063e" +
    "\117\u063d\001\002\000\006\027\135\233\133\001\002\000" +
    "\050\002\uff34\003\027\005\010\006\ufccf\043\ufccf\047\024" +
    "\055\013\064\012\065\007\066\015\070\020\102\004\103" +
    "\035\131\031\161\032\173\006\175\017\247\022\350\034" +
    "\001\002\000\004\002\uff33\001\002\000\006\006\044\007" +
    "\u0757\001\002\000\004\062\u0797\001\002\000\004\006\u0799" +
    "\001\002\000\004\034\u075e\001\002\000\010\031\170\034" +
    "\ufbf2\242\u079a\001\002\000\004\006\u079b\001\002\000\004" +
    "\034\u075e\001\002\000\006\027\ufe3e\233\ufe3e\001\002\000" +
    "\006\027\ufe44\233\ufe44\001\002\000\022\027\ufdec\034\u06cc" +
    "\062\u07a0\172\u07a8\176\u07a3\202\u07a9\203\u079f\233\ufdec\001" +
    "\002\000\004\006\u07d2\001\002\000\020\027\ufdec\034\u06cc" +
    "\172\u07a8\201\u07d0\202\u07a9\203\u079f\233\ufdec\001\002\000" +
    "\020\027\ufdee\030\u07ad\117\ufdee\136\u07af\172\ufdee\202\u07ae" +
    "\233\ufdee\001\002\000\006\027\ufdf7\233\ufdf7\001\002\000" +
    "\004\021\u07c3\001\002\000\016\027\ufdee\030\u07ad\136\u07af" +
    "\172\ufdee\202\u07ae\233\ufdee\001\002\000\006\027\ufdfb\233" +
    "\ufdfb\001\002\000\006\027\ufdfe\233\ufdfe\001\002\000\006" +
    "\027\135\233\133\001\002\000\004\006\u07be\001\002\000" +
    "\004\062\u07aa\001\002\000\004\034\u06cc\001\002\000\016" +
    "\027\ufdee\030\u07ad\136\u07af\172\ufdee\202\u07ae\233\ufdee\001" +
    "\002\000\010\027\ufdec\172\u07a8\233\ufdec\001\002\000\010" +
    "\034\u06cc\202\u07b5\203\u079f\001\002\000\004\062\u07b2\001" +
    "\002\000\006\221\u07b1\222\u07b0\001\002\000\012\027\ufdef" +
    "\117\ufdef\172\ufdef\233\ufdef\001\002\000\012\027\ufdf0\117" +
    "\ufdf0\172\ufdf0\233\ufdf0\001\002\000\004\034\u06cc\001\002" +
    "\000\020\027\ufdee\030\u07ad\117\ufdee\136\u07af\172\ufdee\202" +
    "\u07ae\233\ufdee\001\002\000\012\027\ufdf1\117\ufdf1\172\ufdf1" +
    "\233\ufdf1\001\002\000\004\062\u07ba\001\002\000\020\027" +
    "\ufdee\030\u07ad\117\ufdee\136\u07af\172\ufdee\202\u07ae\233\ufdee" +
    "\001\002\000\020\027\ufdee\030\u07ad\117\ufdee\136\u07af\172" +
    "\ufdee\202\u07ae\233\ufdee\001\002\000\012\027\ufdf4\117\ufdf4" +
    "\172\ufdf4\233\ufdf4\001\002\000\012\027\ufdf3\117\ufdf3\172" +
    "\ufdf3\233\ufdf3\001\002\000\004\034\u06cc\001\002\000\020" +
    "\027\ufdee\030\u07ad\117\ufdee\136\u07af\172\ufdee\202\u07ae\233" +
    "\ufdee\001\002\000\012\027\ufdf2\117\ufdf2\172\ufdf2\233\ufdf2" +
    "\001\002\000\006\027\ufdf8\233\ufdf8\001\002\000\006\027" +
    "\ufded\233\ufded\001\002\000\050\002\uff37\003\027\005\010" +
    "\006\ufccf\043\ufccf\047\024\055\013\064\012\065\007\066" +
    "\015\070\020\102\004\103\035\131\031\161\032\173\006" +
    "\175\017\247\022\350\034\001\002\000\004\002\uff38\001" +
    "\002\000\010\027\ufdec\172\u07a8\233\ufdec\001\002\000\006" +
    "\027\ufdf9\233\ufdf9\001\002\000\006\177\u07c5\200\u07c4\001" +
    "\002\000\020\027\ufdec\034\u06cc\062\u07a0\172\u07a8\202\u07a9" +
    "\203\u079f\233\ufdec\001\002\000\020\027\ufdec\034\u06cc\062" +
    "\u07a0\172\u07a8\202\u07a9\203\u079f\233\ufdec\001\002\000\006" +
    "\027\ufe00\233\ufe00\001\002\000\006\027\ufdff\233\ufdff\001" +
    "\002\000\012\027\ufdf5\117\u07c9\172\ufdf5\233\ufdf5\001\002" +
    "\000\004\220\u07cc\001\002\000\010\027\ufdec\172\u07a8\233" +
    "\ufdec\001\002\000\006\027\ufdfa\233\ufdfa\001\002\000\004" +
    "\157\u07cd\001\002\000\004\006\u07ce\001\002\000\010\027" +
    "\ufdf6\172\ufdf6\233\ufdf6\001\002\000\006\027\ufdfc\233", 
    "\ufdfc", 
    "\001", 
    "\002", 
    "\000", 
    "\016", 
    "\027", 
    "\ufdec", 
    "\034", 
    "\u06cc", 
    "\172", 
    "\u07a8", 
    "\202", 
    "\u07a9", 
    "\203", 
    "\u079f", 
    "\233", 
    "\ufdec", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufdfd", 
    "\233", 
    "\ufdfd", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\034", 
    "\ufde1", 
    "\076", 
    "\u0705", 
    "\124", 
    "\u0706", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u06cc", 
    "\001", 
    "\002", 
    "\000", 
    "\020", 
    "\027", 
    "\ufde6", 
    "\030", 
    "\ufde6", 
    "\117", 
    "\ufde6", 
    "\136", 
    "\ufde6", 
    "\172", 
    "\ufde6", 
    "\202", 
    "\ufde6", 
    "\233", 
    "\ufde6", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\006", 
    "\044", 
    "\007", 
    "\u0757", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\062", 
    "\u07d7", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u07d9", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u075e", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\031", 
    "\170", 
    "\034", 
    "\ufbf2", 
    "\242", 
    "\u07da", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u07db", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u075e", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe3d", 
    "\233", 
    "\ufe3d", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe43", 
    "\233", 
    "\ufe43", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\241", 
    "\u07f2", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\241", 
    "\u07e9", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\006", 
    "\044", 
    "\007", 
    "\u0757", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\062", 
    "\u07e2", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u07e4", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u075e", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\031", 
    "\170", 
    "\034", 
    "\ufbf2", 
    "\242", 
    "\u07e5", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u07e6", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u075e", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe41", 
    "\233", 
    "\ufe41", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe47", 
    "\233", 
    "\ufe47", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\006", 
    "\044", 
    "\007", 
    "\u0757", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\062", 
    "\u07eb", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u07ed", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u075e", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\031", 
    "\170", 
    "\034", 
    "\ufbf2", 
    "\242", 
    "\u07ee", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u07ef", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u075e", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe3f", 
    "\233", 
    "\ufe3f", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe45", 
    "\233", 
    "\ufe45", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\006", 
    "\044", 
    "\007", 
    "\u0757", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\062", 
    "\u07f4", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u07f6", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u075e", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\031", 
    "\170", 
    "\034", 
    "\ufbf2", 
    "\242", 
    "\u07f7", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u07f8", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u075e", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe40", 
    "\233", 
    "\ufe40", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe46", 
    "\233", 
    "\ufe46", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\uff2c", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\uff2b", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\034", 
    "\u0802", 
    "\117", 
    "\u0801", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\uff2f", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\uff30", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u0818", 
    "\001", 
    "\002", 
    "\000", 
    "\022", 
    "\006", 
    "\u0806", 
    "\076", 
    "\u04b1", 
    "\201", 
    "\u04b6", 
    "\231", 
    "\u04b5", 
    "\234", 
    "\u04ae", 
    "\241", 
    "\u04ad", 
    "\274", 
    "\u04b8", 
    "\303", 
    "\u04b2", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\030", 
    "\u04df", 
    "\035", 
    "\ufeda", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\u080d", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\030", 
    "\u04df", 
    "\035", 
    "\ufeda", 
    "\001", 
    "\002", 
    "\000", 
    "\040", 
    "\006", 
    "\067", 
    "\117", 
    "\u04dd", 
    "\315", 
    "\062", 
    "\316", 
    "\053", 
    "\317", 
    "\055", 
    "\320", 
    "\071", 
    "\321", 
    "\063", 
    "\322", 
    "\057", 
    "\323", 
    "\066", 
    "\324", 
    "\054", 
    "\325", 
    "\060", 
    "\326", 
    "\064", 
    "\327", 
    "\056", 
    "\330", 
    "\070", 
    "\331", 
    "\061", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\030", 
    "\u04df", 
    "\035", 
    "\ufeda", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\030", 
    "\u04df", 
    "\035", 
    "\ufeda", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\ufee0", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\ufedd", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\ufedc", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\ufede", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\027", 
    "\ufe2b", 
    "\062", 
    "\u050c", 
    "\233", 
    "\ufe2b", 
    "\240", 
    "\ufe2b", 
    "\271", 
    "\ufe2b", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\027", 
    "\ufece", 
    "\233", 
    "\ufece", 
    "\240", 
    "\ufece", 
    "\271", 
    "\u0810", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufe52", 
    "\233", 
    "\ufe52", 
    "\240", 
    "\u055e", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\u0814", 
    "\007", 
    "\u0813", 
    "\076", 
    "\u0811", 
    "\116", 
    "\u0815", 
    "\201", 
    "\u0812", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufed1", 
    "\233", 
    "\ufed1", 
    "\240", 
    "\ufed1", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufed0", 
    "\233", 
    "\ufed0", 
    "\240", 
    "\ufed0", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufed2", 
    "\233", 
    "\ufed2", 
    "\240", 
    "\ufed2", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufed3", 
    "\233", 
    "\ufed3", 
    "\240", 
    "\ufed3", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufecf", 
    "\233", 
    "\ufecf", 
    "\240", 
    "\ufecf", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufee1", 
    "\233", 
    "\ufee1", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\ufedf", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u0819", 
    "\001", 
    "\002", 
    "\000", 
    "\022", 
    "\006", 
    "\u0806", 
    "\076", 
    "\u04b1", 
    "\201", 
    "\u04b6", 
    "\231", 
    "\u04b5", 
    "\234", 
    "\u04ae", 
    "\241", 
    "\u04ad", 
    "\274", 
    "\u04b8", 
    "\303", 
    "\u04b2", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\u081b", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\027", 
    "\ufe2b", 
    "\062", 
    "\u050c", 
    "\233", 
    "\ufe2b", 
    "\240", 
    "\ufe2b", 
    "\271", 
    "\ufe2b", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\027", 
    "\ufece", 
    "\233", 
    "\ufece", 
    "\240", 
    "\ufece", 
    "\271", 
    "\u0810", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufe52", 
    "\233", 
    "\ufe52", 
    "\240", 
    "\u055e", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufee2", 
    "\233", 
    "\ufee2", 
    "\001", 
    "\002", 
    "\000", 
    "\016", 
    "\027", 
    "\ufe01", 
    "\060", 
    "\u0820", 
    "\136", 
    "\u0822", 
    "\154", 
    "\u0821", 
    "\225", 
    "\u0823", 
    "\233", 
    "\ufe01", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\224", 
    "\u0838", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\223", 
    "\u0830", 
    "\226", 
    "\u0832", 
    "\227", 
    "\u0831", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\223", 
    "\u0828", 
    "\226", 
    "\u082a", 
    "\227", 
    "\u0829", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\223", 
    "\u0827", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\uff35", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\uff36", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe06", 
    "\233", 
    "\ufe06", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\006", 
    "\u082f", 
    "\007", 
    "\u082e", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\230", 
    "\u082c", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u082b", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe05", 
    "\233", 
    "\ufe05", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u082d", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe03", 
    "\233", 
    "\ufe03", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe0a", 
    "\233", 
    "\ufe0a", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe0b", 
    "\233", 
    "\ufe0b", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\006", 
    "\u0837", 
    "\007", 
    "\u0836", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\230", 
    "\u0834", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u0833", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe04", 
    "\233", 
    "\ufe04", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u0835", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe02", 
    "\233", 
    "\ufe02", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe08", 
    "\233", 
    "\ufe08", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe09", 
    "\233", 
    "\ufe09", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\021", 
    "\u0839", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\007", 
    "\u083a", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufe07", 
    "\233", 
    "\ufe07", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\uff31", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\uff32", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\302", 
    "\u046b", 
    "\335", 
    "\u0467", 
    "\336", 
    "\u0466", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\uff18", 
    "\233", 
    "\uff18", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\uff2a", 
    "\233", 
    "\uff2a", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\u0849", 
    "\027", 
    "\ufc26", 
    "\043", 
    "\u084a", 
    "\060", 
    "\ufc26", 
    "\233", 
    "\ufc26", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\310", 
    "\u0845", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufc3c", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\ufc2e", 
    "\027", 
    "\ufc2e", 
    "\043", 
    "\ufc2e", 
    "\060", 
    "\ufc2e", 
    "\233", 
    "\ufc2e", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\ufc2f", 
    "\027", 
    "\ufc2f", 
    "\043", 
    "\ufc2f", 
    "\060", 
    "\ufc2f", 
    "\233", 
    "\ufc2f", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\ufc3a", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufc3b", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufc36", 
    "\060", 
    "\u084c", 
    "\233", 
    "\ufc36", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufc28", 
    "\060", 
    "\ufc28", 
    "\233", 
    "\ufc28", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u084b", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufc27", 
    "\060", 
    "\ufc27", 
    "\233", 
    "\ufc27", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\067", 
    "\u0850", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\ufc38", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufc39", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\007", 
    "\u0851", 
    "\027", 
    "\ufc34", 
    "\233", 
    "\ufc34", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufc35", 
    "\233", 
    "\ufc35", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufc37", 
    "\233", 
    "\ufc37", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\uffee", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\uffef", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\u0849", 
    "\027", 
    "\ufc26", 
    "\043", 
    "\u084a", 
    "\060", 
    "\ufc26", 
    "\233", 
    "\ufc26", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufc21", 
    "\060", 
    "\u085a", 
    "\233", 
    "\ufc21", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\u0849", 
    "\027", 
    "\ufc26", 
    "\043", 
    "\u084a", 
    "\060", 
    "\ufc26", 
    "\233", 
    "\ufc26", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufc2b", 
    "\060", 
    "\ufc2b", 
    "\233", 
    "\ufc2b", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u085e", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\ufc2c", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufc2d", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\061", 
    "\u085f", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\021", 
    "\u0860", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\062", 
    "\u0861", 
    "\063", 
    "\u0862", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\u0864", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\u0863", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufc23", 
    "\233", 
    "\ufc23", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufc22", 
    "\233", 
    "\ufc22", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\ufc2a", 
    "\060", 
    "\ufc2a", 
    "\233", 
    "\ufc2a", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\006", 
    "\u0849", 
    "\027", 
    "\ufc26", 
    "\043", 
    "\u084a", 
    "\233", 
    "\ufc26", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\ufc30", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufc31", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\044", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\ufbf3", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufbf4", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\006", 
    "\u086f", 
    "\043", 
    "\u0870", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufc25", 
    "\233", 
    "\ufc25", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u0874", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\ufc32", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufc33", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\ufc24", 
    "\233", 
    "\ufc24", 
    "\001", 
    "\002", 
    "\000", 
    "\054", 
    "\006", 
    "\264", 
    "\007", 
    "\242", 
    "\011", 
    "\274", 
    "\012", 
    "\243", 
    "\034", 
    "\253", 
    "\043", 
    "\271", 
    "\046", 
    "\237", 
    "\071", 
    "\u0876", 
    "\104", 
    "\262", 
    "\105", 
    "\272", 
    "\106", 
    "\267", 
    "\107", 
    "\265", 
    "\110", 
    "\241", 
    "\115", 
    "\273", 
    "\116", 
    "\270", 
    "\376", 
    "\254", 
    "\377", 
    "\256", 
    "\u0100", 
    "\236", 
    "\u0101", 
    "\252", 
    "\u0102", 
    "\244", 
    "\u0103", 
    "\232", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\034", 
    "\u08a1", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdb8", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdbb", 
    "\001", 
    "\002", 
    "\000", 
    "\054", 
    "\006", 
    "\264", 
    "\007", 
    "\242", 
    "\011", 
    "\274", 
    "\012", 
    "\243", 
    "\034", 
    "\253", 
    "\043", 
    "\271", 
    "\046", 
    "\237", 
    "\071", 
    "\u0876", 
    "\104", 
    "\262", 
    "\105", 
    "\272", 
    "\106", 
    "\267", 
    "\107", 
    "\265", 
    "\110", 
    "\241", 
    "\115", 
    "\273", 
    "\116", 
    "\270", 
    "\376", 
    "\254", 
    "\377", 
    "\256", 
    "\u0100", 
    "\236", 
    "\u0101", 
    "\252", 
    "\u0102", 
    "\244", 
    "\u0103", 
    "\232", 
    "\001", 
    "\002", 
    "\000", 
    "\022", 
    "\027", 
    "\135", 
    "\101", 
    "\u087d", 
    "\134", 
    "\u087c", 
    "\154", 
    "\u0887", 
    "\162", 
    "\u0889", 
    "\164", 
    "\u0882", 
    "\174", 
    "\u0884", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdb6", 
    "\001", 
    "\002", 
    "\000", 
    "\056", 
    "\006", 
    "\ufd71", 
    "\007", 
    "\ufd71", 
    "\011", 
    "\ufd71", 
    "\034", 
    "\u0112", 
    "\043", 
    "\ufd71", 
    "\046", 
    "\ufd71", 
    "\104", 
    "\ufd71", 
    "\105", 
    "\ufd71", 
    "\106", 
    "\ufd71", 
    "\107", 
    "\ufd71", 
    "\110", 
    "\ufd71", 
    "\115", 
    "\ufd71", 
    "\116", 
    "\ufd71", 
    "\120", 
    "\u0111", 
    "\124", 
    "\ufd71", 
    "\125", 
    "\ufd71", 
    "\376", 
    "\ufd71", 
    "\377", 
    "\ufd71", 
    "\u0100", 
    "\ufd71", 
    "\u0101", 
    "\ufd71", 
    "\u0102", 
    "\ufd71", 
    "\u0103", 
    "\ufd71", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\044", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda2", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda4", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda6", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda8", 
    "\001", 
    "\002", 
    "\000", 
    "\056", 
    "\006", 
    "\ufd71", 
    "\007", 
    "\ufd71", 
    "\011", 
    "\ufd71", 
    "\034", 
    "\u0112", 
    "\043", 
    "\ufd71", 
    "\046", 
    "\ufd71", 
    "\104", 
    "\ufd71", 
    "\105", 
    "\ufd71", 
    "\106", 
    "\ufd71", 
    "\107", 
    "\ufd71", 
    "\110", 
    "\ufd71", 
    "\115", 
    "\ufd71", 
    "\116", 
    "\ufd71", 
    "\120", 
    "\u0111", 
    "\124", 
    "\ufd71", 
    "\125", 
    "\ufd71", 
    "\376", 
    "\ufd71", 
    "\377", 
    "\ufd71", 
    "\u0100", 
    "\ufd71", 
    "\u0101", 
    "\ufd71", 
    "\u0102", 
    "\ufd71", 
    "\u0103", 
    "\ufd71", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdac", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\163", 
    "\u0894", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdae", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdb3", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\044", 
    "\034", 
    "\361", 
    "\043", 
    "\364", 
    "\073", 
    "\365", 
    "\074", 
    "\357", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\002", 
    "\ufda0", 
    "\003", 
    "\027", 
    "\005", 
    "\010", 
    "\006", 
    "\ufccf", 
    "\043", 
    "\ufccf", 
    "\047", 
    "\024", 
    "\055", 
    "\013", 
    "\064", 
    "\012", 
    "\065", 
    "\007", 
    "\066", 
    "\015", 
    "\070", 
    "\020", 
    "\102", 
    "\004", 
    "\103", 
    "\035", 
    "\131", 
    "\031", 
    "\161", 
    "\032", 
    "\173", 
    "\006", 
    "\175", 
    "\017", 
    "\247", 
    "\022", 
    "\350", 
    "\034", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\163", 
    "\u088a", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\006", 
    "\044", 
    "\007", 
    "\242", 
    "\011", 
    "\274", 
    "\034", 
    "\253", 
    "\043", 
    "\271", 
    "\046", 
    "\237", 
    "\104", 
    "\262", 
    "\105", 
    "\272", 
    "\106", 
    "\267", 
    "\107", 
    "\265", 
    "\110", 
    "\241", 
    "\115", 
    "\273", 
    "\116", 
    "\270", 
    "\376", 
    "\254", 
    "\377", 
    "\256", 
    "\u0100", 
    "\236", 
    "\u0101", 
    "\252", 
    "\u0102", 
    "\244", 
    "\u0103", 
    "\232", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\027", 
    "\135", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda3", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda1", 
    "\001", 
    "\002", 
    "\000", 
    "\020", 
    "\027", 
    "\ufdaa", 
    "\030", 
    "\u088f", 
    "\134", 
    "\ufdaa", 
    "\162", 
    "\ufdaa", 
    "\164", 
    "\ufdaa", 
    "\174", 
    "\ufdaa", 
    "\233", 
    "\ufdaa", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\044", 
    "\034", 
    "\361", 
    "\043", 
    "\364", 
    "\073", 
    "\365", 
    "\074", 
    "\357", 
    "\001", 
    "\002", 
    "\000", 
    "\016", 
    "\027", 
    "\135", 
    "\134", 
    "\u087c", 
    "\162", 
    "\u0889", 
    "\164", 
    "\u0882", 
    "\174", 
    "\u0884", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdad", 
    "\001", 
    "\002", 
    "\000", 
    "\020", 
    "\027", 
    "\ufdaa", 
    "\030", 
    "\u088f", 
    "\134", 
    "\ufdaa", 
    "\162", 
    "\ufdaa", 
    "\164", 
    "\ufdaa", 
    "\174", 
    "\ufdaa", 
    "\233", 
    "\ufdaa", 
    "\001", 
    "\002", 
    "\000", 
    "\016", 
    "\027", 
    "\ufdab", 
    "\134", 
    "\ufdab", 
    "\162", 
    "\ufdab", 
    "\164", 
    "\ufdab", 
    "\174", 
    "\ufdab", 
    "\233", 
    "\ufdab", 
    "\001", 
    "\002", 
    "\000", 
    "\050", 
    "\006", 
    "\044", 
    "\007", 
    "\242", 
    "\011", 
    "\274", 
    "\034", 
    "\u01d2", 
    "\043", 
    "\271", 
    "\046", 
    "\237", 
    "\104", 
    "\262", 
    "\105", 
    "\272", 
    "\106", 
    "\267", 
    "\107", 
    "\265", 
    "\110", 
    "\241", 
    "\115", 
    "\273", 
    "\116", 
    "\270", 
    "\376", 
    "\254", 
    "\377", 
    "\256", 
    "\u0100", 
    "\236", 
    "\u0101", 
    "\252", 
    "\u0102", 
    "\244", 
    "\u0103", 
    "\232", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\027", 
    "\135", 
    "\162", 
    "\u0889", 
    "\164", 
    "\u0882", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda7", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\027", 
    "\135", 
    "\162", 
    "\u0889", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda5", 
    "\001", 
    "\002", 
    "\000", 
    "\022", 
    "\027", 
    "\135", 
    "\062", 
    "\u089a", 
    "\134", 
    "\u087c", 
    "\154", 
    "\u0887", 
    "\162", 
    "\u0889", 
    "\164", 
    "\u0882", 
    "\174", 
    "\u0884", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u089c", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdaf", 
    "\001", 
    "\002", 
    "\000", 
    "\020", 
    "\027", 
    "\135", 
    "\134", 
    "\u087c", 
    "\154", 
    "\u0887", 
    "\162", 
    "\u0889", 
    "\164", 
    "\u0882", 
    "\174", 
    "\u0884", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdb0", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\027", 
    "\135", 
    "\162", 
    "\u0889", 
    "\164", 
    "\u0882", 
    "\174", 
    "\u0884", 
    "\233", 
    "\133", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufda9", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdb9", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\006", 
    "\044", 
    "\034", 
    "\u01a3", 
    "\043", 
    "\u01a4", 
    "\046", 
    "\u01a5", 
    "\115", 
    "\u019f", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\035", 
    "\u08a3", 
    "\001", 
    "\002", 
    "\000", 
    "\054", 
    "\006", 
    "\ufdb1", 
    "\007", 
    "\ufdb1", 
    "\011", 
    "\ufdb1", 
    "\012", 
    "\ufdb1", 
    "\034", 
    "\ufdb1", 
    "\043", 
    "\ufdb1", 
    "\046", 
    "\ufdb1", 
    "\072", 
    "\u08a4", 
    "\104", 
    "\ufdb1", 
    "\105", 
    "\ufdb1", 
    "\106", 
    "\ufdb1", 
    "\107", 
    "\ufdb1", 
    "\110", 
    "\ufdb1", 
    "\115", 
    "\ufdb1", 
    "\116", 
    "\ufdb1", 
    "\376", 
    "\ufdb1", 
    "\377", 
    "\ufdb1", 
    "\u0100", 
    "\ufdb1", 
    "\u0101", 
    "\ufdb1", 
    "\u0102", 
    "\ufdb1", 
    "\u0103", 
    "\ufdb1", 
    "\001", 
    "\002", 
    "\000", 
    "\052", 
    "\006", 
    "\ufdb2", 
    "\007", 
    "\ufdb2", 
    "\011", 
    "\ufdb2", 
    "\012", 
    "\ufdb2", 
    "\034", 
    "\ufdb2", 
    "\043", 
    "\ufdb2", 
    "\046", 
    "\ufdb2", 
    "\104", 
    "\ufdb2", 
    "\105", 
    "\ufdb2", 
    "\106", 
    "\ufdb2", 
    "\107", 
    "\ufdb2", 
    "\110", 
    "\ufdb2", 
    "\115", 
    "\ufdb2", 
    "\116", 
    "\ufdb2", 
    "\376", 
    "\ufdb2", 
    "\377", 
    "\ufdb2", 
    "\u0100", 
    "\ufdb2", 
    "\u0101", 
    "\ufdb2", 
    "\u0102", 
    "\ufdb2", 
    "\u0103", 
    "\ufdb2", 
    "\001", 
    "\002", 
    "\000", 
    "\052", 
    "\006", 
    "\264", 
    "\007", 
    "\242", 
    "\011", 
    "\274", 
    "\012", 
    "\243", 
    "\034", 
    "\253", 
    "\043", 
    "\271", 
    "\046", 
    "\237", 
    "\104", 
    "\262", 
    "\105", 
    "\272", 
    "\106", 
    "\267", 
    "\107", 
    "\265", 
    "\110", 
    "\241", 
    "\115", 
    "\273", 
    "\116", 
    "\270", 
    "\376", 
    "\254", 
    "\377", 
    "\256", 
    "\u0100", 
    "\236", 
    "\u0101", 
    "\252", 
    "\u0102", 
    "\244", 
    "\u0103", 
    "\232", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdb7", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\ufdba", 
    "\001", 
    "\002", 
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u08a5\000\032\002\036\004\024\021\022\025\020\027" +
    "\032\031\015\035\004\041\013\155\010\234\035\251\025" +
    "\u0182\027\001\001\000\002\001\001\000\002\001\001\000" +
    "\032\003\245\054\244\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\245\u0879\252\u0877\253\u0876\265\u087a\001" +
    "\001\000\004\026\u086d\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\026\u0865\001\001\000\004\022\u0856\001" +
    "\001\000\010\003\u02c5\042\u0852\117\u02c4\001\001\000\016" +
    "\026\u083f\033\u0841\315\u0277\u0148\u0840\u014b\u026f\u0158\u0271\001" +
    "\001\000\002\001\001\000\016\272\u0745\332\u0746\u0139\u0752" +
    "\u013a\u0751\u0173\u074a\u0174\u0749\001\001\000\014\003\u0280\036" +
    "\u0741\104\u027d\120\u0283\121\u0281\001\001\000\002\001\001" +
    "\000\010\351\u0467\u013a\u0460\u0174\u0464\001\001\000\002\001" +
    "\001\000\024\010\u041d\013\u0414\014\u0412\015\u0413\016\u040d" +
    "\u0136\u041c\u017d\u040e\u017e\u0416\u0181\u041a\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\002\u040c\004\024\021\022" +
    "\025\020\027\032\031\015\035\004\041\013\155\010\234" +
    "\035\251\025\u0182\027\001\001\000\002\001\001\000\012" +
    "\003\u0364\104\u0362\174\u03dd\176\u0366\001\001\000\014\003" +
    "\u03b5\104\u03b3\235\u03b9\237\u03b7\240\u03b6\001\001\000\002" +
    "\001\001\000\010\003\040\u015e\041\u0192\042\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\u015f\173\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\112\050\001\001\000\002\001\001\000\004\u016c\164\001" +
    "\001\000\006\u012c\064\u012e\051\001\001\000\002\001\001" +
    "\000\004\u012f\163\001\001\000\004\u012f\162\001\001\000" +
    "\004\u012f\161\001\001\000\004\u012f\160\001\001\000\004" +
    "\u012f\157\001\001\000\004\u012f\156\001\001\000\004\u012f" +
    "\155\001\001\000\004\u012f\154\001\001\000\004\u012f\153" +
    "\001\001\000\004\u012f\152\001\001\000\004\u016c\122\001" +
    "\001\000\004\u012f\120\001\001\000\004\u012d\103\001\001" +
    "\000\004\u012f\100\001\001\000\004\u012f\072\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\136\001" +
    "\001\000\004\u0193\125\001\001\000\002\001\001\000\004" +
    "\u016c\131\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\133\001\001\000\002\001\001" +
    "\000\032\002\135\004\024\021\022\025\020\027\032\031" +
    "\015\035\004\041\013\155\010\234\035\251\025\u0182\027" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\002" +
    "\137\004\024\021\022\025\020\027\032\031\015\035\004" +
    "\041\013\155\010\234\035\251\025\u0182\027\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\112\143\001\001" +
    "\000\004\u016c\151\001\001\000\006\u012c\144\u012e\051\001" +
    "\001\000\004\u016c\145\001\001\000\002\001\001\000\004" +
    "\u0193\147\001\001\000\004\u016c\150\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\005\165\001\001\000" +
    "\032\002\166\004\024\021\022\025\020\027\032\031\015" +
    "\035\004\041\013\155\010\234\035\251\025\u0182\027\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\u016d\212\u016e\210" +
    "\u016f\207\u0170\206\u0171\204\001\001\000\004\u0171\u03b2\001" +
    "\001\000\002\001\001\000\006\u0170\u03b1\u0171\204\001\001" +
    "\000\004\u0171\u03b0\001\001\000\006\u0170\u03af\u0171\204\001" +
    "\001\000\002\001\001\000\006\u0170\u03ae\u0171\204\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\u016e\u03ad\u016f\207\u0170\206\u0171\204\001\001\000\004" +
    "\u0160\225\001\001\000\010\u016f\224\u0170\206\u0171\204\001" +
    "\001\000\012\u016e\223\u016f\207\u0170\206\u0171\204\001\001" +
    "\000\004\u0171\222\001\001\000\006\u0170\221\u0171\204\001" +
    "\001\000\010\u016f\220\u0170\206\u0171\204\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\u03ab\001\001\000\004" +
    "\315\227\001\001\000\006\u0161\u0256\u0163\u0259\001\001\000" +
    "\032\003\245\054\244\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\245\265\316\234\317\233\331\246\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\003\245\054\244\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\245\265\317\u0248\331\246\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\250\u0244\001\001" +
    "\000\002\001\001\000\004\247\u023f\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\061\u0222\001\001\000\004" +
    "\055\u0216\001\001\000\002\001\001\000\022\003\304\054" +
    "\u0160\056\250\060\262\062\247\063\232\064\260\065\254" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\030\003\245\054\244\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\245\265\317" +
    "\u01fa\331\246\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\057\u01f0\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\005\334\321\333\322\332\324\330\325\327" +
    "\326\325\327\326\330\323\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u0194\277\001\001\000\024\003\304\054\303" +
    "\056\250\060\262\062\247\063\232\064\260\065\254\067" +
    "\305\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\003\304" +
    "\054\312\056\250\060\262\062\247\063\232\064\260\065" +
    "\254\066\314\001\001\000\022\003\304\054\317\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\001\001\000" +
    "\002\001\001\000\022\003\304\054\316\056\250\060\262" +
    "\062\247\063\232\064\260\065\254\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\143\u0112\150\u01e1\001\001\000\004\003\u01dc\001" +
    "\001\000\006\143\u0112\150\u01da\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\003\357\104\362" +
    "\177\361\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\003\304\054\340" +
    "\056\250\060\262\062\247\063\232\064\260\065\254\266" +
    "\337\001\001\000\006\005\334\330\355\001\001\000\010" +
    "\267\341\270\347\271\346\001\001\000\002\001\001\000" +
    "\024\003\304\054\340\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\266\354\001\001\000\002\001\001\000" +
    "\004\271\351\001\001\000\004\271\350\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\270\353\271\346\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\131\u01bc\001" +
    "\001\000\004\210\u0199\001\001\000\010\003\357\104\362" +
    "\177\u018d\001\001\000\004\323\u0189\001\001\000\004\210" +
    "\u0185\001\001\000\002\001\001\000\004\136\365\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\204\377\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\227\u0105\232\u0103\001\001\000\004" +
    "\231\u0170\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\231\u016d\001\001\000\010\003\357" +
    "\104\362\177\u010e\001\001\000\004\231\u010c\001\001\000" +
    "\002\001\001\000\010\003\357\104\362\177\u0109\001\001" +
    "\000\006\227\u0105\232\u010a\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\143\u0112\150\u0113\001\001\000\002\001" +
    "\001\000\006\143\u0112\150\u0163\001\001\000\024\003\304" +
    "\054\u0117\056\250\060\262\062\247\063\232\064\260\065" +
    "\254\144\u0115\001\001\000\006\227\u0105\232\u0114\001\001" +
    "\000\002\001\001\000\004\151\u0159\001\001\000\002\001" +
    "\001\000\010\143\u013c\145\u013f\226\u013b\001\001\000\002" +
    "\001\001\000\004\225\u011a\001\001\000\002\001\001\000" +
    "\004\140\u011f\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\141\u0122\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\141\u0124" +
    "\001\001\000\002\001\001\000\004\222\u0126\001\001\000" +
    "\002\001\001\000\004\223\u0137\001\001\000\004\222\u0129" +
    "\001\001\000\002\001\001\000\004\223\u012b\001\001\000" +
    "\002\001\001\000\004\222\u0136\001\001\000\006\222\u0133" +
    "\224\u0132\001\001\000\004\222\u0131\001\001\000\004\222" +
    "\u0130\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\222\u0135\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\003" +
    "\304\054\u0152\056\250\060\262\062\247\063\232\064\260" +
    "\065\254\001\001\000\004\147\u0146\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\143\u0141" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\003\304\054\u0147\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\003\304\054\u0149" +
    "\056\250\060\262\062\247\063\232\064\260\065\254\001" +
    "\001\000\002\001\001\000\022\003\304\054\u014b\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\001\001\000" +
    "\004\146\u014d\001\001\000\022\003\304\054\u014f\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\146\u0150\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\225\u0154\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\030\003\304\054" +
    "\u0117\056\250\060\262\062\247\063\232\064\260\065\254" +
    "\144\u015b\152\u016c\153\u015d\001\001\000\002\001\001\000" +
    "\030\003\304\054\u0117\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\144\u015b\152\u015e\153\u015d\001\001\000" +
    "\006\151\u0168\154\u016b\001\001\000\026\003\304\054\u0117" +
    "\056\250\060\262\062\247\063\232\064\260\065\254\144" +
    "\u015b\153\u016a\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\003\304\054\u0160\056\250\060\262\062\247\063" +
    "\232\064\260\065\254\143\u0112\150\u0161\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\003\304\054\u0160\056" +
    "\250\060\262\062\247\063\232\064\260\065\254\143\u0112" +
    "\150\u0163\001\001\000\002\001\001\000\004\151\u0165\001" +
    "\001\000\002\001\001\000\006\151\u0168\154\u0167\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\003\304\054\u0175\056\250\060\262\062\247\063" +
    "\232\064\260\065\254\001\001\000\004\207\u0177\001\001" +
    "\000\022\003\304\054\u0181\056\250\060\262\062\247\063" +
    "\232\064\260\065\254\001\001\000\002\001\001\000\004" +
    "\205\u017b\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\206\u017d\001\001\000\004\140\u017e\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\207\u0182\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\227\u0105\232\u0186\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\003\357" +
    "\104\362\177\u018b\001\001\000\016\005\334\324\u018a\325" +
    "\327\326\325\327\326\330\323\001\001\000\002\001\001" +
    "\000\004\323\u018c\001\001\000\002\001\001\000\006\227" +
    "\u018f\233\u018e\001\001\000\006\227\u0105\232\u0198\001\001" +
    "\000\010\003\357\104\362\177\u0194\001\001\000\002\001" +
    "\001\000\010\003\357\104\362\177\u0192\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\143" +
    "\u0112\150\u0196\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\211\u019b\001\001\000\002\001" +
    "\001\000\006\227\u0105\232\u019c\001\001\000\002\001\001" +
    "\000\012\003\u019f\047\u01a0\051\u01a1\053\u01a5\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\212\u01b9\001\001" +
    "\000\004\050\u01b1\001\001\000\012\003\u019f\047\u01ae\051" +
    "\u01a1\053\u01a5\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\052\u01a7\001\001\000\006\003\u019f\053\u01ab\001" +
    "\001\000\002\001\001\000\006\003\u019f\053\u01a9\001\001" +
    "\000\004\052\u01aa\001\001\000\002\001\001\000\004\052" +
    "\u01ac\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\003\u019f\051\u01b5\053" +
    "\u01a5\001\001\000\002\001\001\000\010\003\u019f\051\u01b3" +
    "\053\u01a5\001\001\000\004\050\u01b4\001\001\000\002\001" +
    "\001\000\004\050\u01b6\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\132\u01c0\001\001\000\006\133\u01c3\134\u01c2\001" +
    "\001\000\002\001\001\000\006\003\u01ca\135\u01cb\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\134\u01c8\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\003\304\054\u01d0\056\250\060\262\062\247\063\232\064" +
    "\260\065\254\241\u01cf\001\001\000\012\005\334\326\u01d9" +
    "\327\326\330\323\001\001\000\004\242\u01d8\001\001\000" +
    "\022\003\304\054\u01d2\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\001\001\000\004\242\u01d4\001\001\000" +
    "\022\003\304\054\u01d6\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\242\u01d7\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\005\334\327\u01db\330" +
    "\323\001\001\000\002\001\001\000\020\005\334\322\u01de" +
    "\324\330\325\327\326\325\327\326\330\323\001\001\000" +
    "\002\001\001\000\002\001\001\000\020\005\334\322\u01e0" +
    "\324\330\325\327\326\325\327\326\330\323\001\001\000" +
    "\002\001\001\000\014\005\334\325\u01e2\326\325\327\326" +
    "\330\323\001\001\000\002\001\001\000\024\003\304\054" +
    "\312\056\250\060\262\062\247\063\232\064\260\065\254" +
    "\066\u01e4\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\246\u01e7\001\001\000\004\250\u01ef\001\001\000\002" +
    "\001\001\000\004\250\u01eb\001\001\000\024\003\245\054" +
    "\244\056\250\060\262\062\247\063\232\064\260\065\254" +
    "\245\u01ec\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\003\304\060\u01f5\062\247\063\232\064" +
    "\260\065\254\001\001\000\016\003\304\060\u01f3\062\247" +
    "\063\232\064\260\065\254\001\001\000\004\057\u01f4\001" +
    "\001\000\002\001\001\000\004\057\u01f6\001\001\000\002" +
    "\001\001\000\024\003\304\054\312\056\250\060\262\062" +
    "\247\063\232\064\260\065\254\066\u01f8\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\003" +
    "\u019f\047\u01fc\051\u01a1\053\u01a5\001\001\000\002\001\001" +
    "\000\004\320\u01fe\001\001\000\026\003\245\054\244\056" +
    "\250\060\262\062\247\063\232\064\260\065\254\245\265" +
    "\331\u0200\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u0195\u0205\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\003\u019f\047" +
    "\u0207\051\u01a1\053\u01a5\001\001\000\002\001\001\000\012" +
    "\003\u019f\047\u0209\051\u01a1\053\u01a5\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\003\u019f" +
    "\047\u020d\051\u01a1\053\u01a5\001\001\000\002\001\001\000" +
    "\012\003\u019f\047\u020f\051\u01a1\053\u01a5\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u0195\u0212\001\001\000" +
    "\002\001\001\000\002\001\001\000\020\003\304\056\u0219" +
    "\060\262\062\247\063\232\064\260\065\254\001\001\000" +
    "\020\003\304\056\u0217\060\262\062\247\063\232\064\260" +
    "\065\254\001\001\000\002\001\001\000\004\055\u0218\001" +
    "\001\000\002\001\001\000\004\055\u021a\001\001\000\002" +
    "\001\001\000\014\003\304\062\u022f\063\232\064\260\065" +
    "\254\001\001\000\014\003\304\062\u022d\063\232\064\260" +
    "\065\254\001\001\000\014\003\304\062\u022b\063\232\064" +
    "\260\065\254\001\001\000\014\003\304\062\u0229\063\232" +
    "\064\260\065\254\001\001\000\014\003\304\062\u0227\063" +
    "\232\064\260\065\254\001\001\000\014\003\304\062\u0225" +
    "\063\232\064\260\065\254\001\001\000\014\003\304\062" +
    "\u0223\063\232\064\260\065\254\001\001\000\002\001\001" +
    "\000\004\061\u0224\001\001\000\002\001\001\000\004\061" +
    "\u0226\001\001\000\002\001\001\000\004\061\u0228\001\001" +
    "\000\002\001\001\000\004\061\u022a\001\001\000\002\001" +
    "\001\000\004\061\u022c\001\001\000\002\001\001\000\004" +
    "\061\u022e\001\001\000\002\001\001\000\004\061\u0230\001" +
    "\001\000\002\001\001\000\024\003\304\054\u0233\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\172\u0232\001" +
    "\001\000\002\001\001\000\004\173\u0235\001\001\000\024" +
    "\003\304\054\u0233\056\250\060\262\062\247\063\232\064" +
    "\260\065\254\172\u0236\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\247\u0238\001\001\000\004\250\u023e\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\250\u0240\001\001\000\002\001\001\000\004\u0195\u0242" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\003\304\054\312\056\250\060\262\062\247" +
    "\063\232\064\260\065\254\066\u0246\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\u0195\u024a" +
    "\001\001\000\002\001\001\000\004\u0195\u024c\001\001\000" +
    "\002\001\001\000\004\u0195\u024e\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u0195\u0251\001\001\000\004\u0196" +
    "\u0253\001\001\000\004\u0195\u0255\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\u025a\001\001\000\002\001\001" +
    "\000\004\u0162\u025c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u025f\001\001\000\004" +
    "\u0165\u0260\001\001\000\002\001\001\000\004\u0166\u0262\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\u0167\u0266" +
    "\001\001\000\002\001\001\000\004\u0168\u0267\001\001\000" +
    "\002\001\001\000\022\003\304\054\u0269\056\250\060\262" +
    "\062\247\063\232\064\260\065\254\001\001\000\012\315" +
    "\u0277\u0148\u039f\u014b\u026f\u0158\u0271\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\315\u0277\u0148\u0272\u014b\u026f\u0158\u0271\u0169\u0276\001\001" +
    "\000\012\315\u0279\u0149\u039e\u014b\u0278\u0158\u027a\001\001\000" +
    "\012\003\u0364\104\u0362\174\u0365\176\u0366\001\001\000\012" +
    "\315\u0279\u0149\u0361\u014b\u0278\u0158\u027a\001\001\000\004\u016a" +
    "\u0360\001\001\000\014\003\u033e\104\u033a\u0159\u033f\u015b\u033c" +
    "\u015c\u033b\001\001\000\014\003\u0280\036\u0337\104\u027d\120" +
    "\u0283\121\u0281\001\001\000\012\315\u0277\u0148\u0330\u014b\u026f" +
    "\u0158\u0271\001\001\000\002\001\001\000\012\315\u0279\u0149" +
    "\u027c\u014b\u0278\u0158\u027a\001\001\000\012\315\u0287\u014a\u032f" +
    "\u014b\u0286\u0158\u0289\001\001\000\012\315\u0287\u014a\u032e\u014b" +
    "\u0286\u0158\u0289\001\001\000\012\315\u0287\u014a\u032d\u014b\u0286" +
    "\u0158\u0289\001\001\000\014\003\u0280\036\u0284\104\u027d\120" +
    "\u0283\121\u0281\001\001\000\002\001\001\000\016\040\u0295" +
    "\041\u0293\073\u0296\122\u032c\123\u0292\124\u0291\001\001\000" +
    "\010\003\u0280\104\u027d\121\u032b\001\001\000\002\001\001" +
    "\000\016\040\u0295\041\u0293\073\u0296\122\u0324\123\u0292\124" +
    "\u0291\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\u0285\001\001\000\012\315\u0287\u014a" +
    "\u028a\u014b\u0286\u0158\u0289\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\003\u0280\036\u028b\104\u027d\120\u0283\121" +
    "\u0281\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\005\u028c\001\001\000\002\001\001\000\016\040\u0295\041" +
    "\u0293\073\u0296\122\u0294\123\u0292\124\u0291\001\001\000\016" +
    "\003\u019f\047\u0303\051\u01a1\053\u01a5\075\u0302\077\u0306\001" +
    "\001\000\004\140\u02ff\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\003\u02c5\042\u02c6\117" +
    "\u02c4\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\040\u0295\041\u0293\124\u02c3\001\001\000\002\001\001\000" +
    "\024\003\u029a\054\u0299\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\125\u029c\001\001\000\004\126\u02c2\001" +
    "\001\000\002\001\001\000\004\126\u02a5\001\001\000\002" +
    "\001\001\000\004\130\u029f\001\001\000\002\001\001\000" +
    "\002\001\001\000\024\003\u029a\054\u0299\056\250\060\262" +
    "\062\247\063\232\064\260\065\254\125\u02a1\001\001\000" +
    "\002\001\001\000\004\130\u02a3\001\001\000\002\001\001" +
    "\000\024\003\u029a\054\u0299\056\250\060\262\062\247\063" +
    "\232\064\260\065\254\125\u02a6\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\u0197\u02ab\001" +
    "\001\000\004\u0198\u02c1\001\001\000\004\u0198\u02c0\001\001" +
    "\000\002\001\001\000\004\u0198\u02be\001\001\000\002\001" +
    "\001\000\004\u0198\u02b0\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\u0198\u02bb\001\001\000\004\u0198\u02ba\001" +
    "\001\000\004\u0198\u02b9\001\001\000\002\001\001\000\004" +
    "\u0198\u02b6\001\001\000\002\001\001\000\004\u0198\u02b8\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u0198\u02bd\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\045\u02fa\116\u02cc\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\043\u02ce\045\u02cb\116" +
    "\u02cc\001\001\000\004\115\u02f8\001\001\000\004\115\u02f7" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\115" +
    "\u02f6\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\003\u02d7\044\u02d8\001\001\000\004\115\u02d6\001\001\000" +
    "\004\115\u02d4\001\001\000\006\045\u02d5\116\u02cc\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\045\u02dc\116\u02cc\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\045\u02db\116\u02cc\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\045\u02df" +
    "\116\u02cc\001\001\000\002\001\001\000\006\113\u02e3\115" +
    "\u02e2\001\001\000\004\115\u02f5\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\114\u02e7\001\001\000\004\115" +
    "\u02f4\001\001\000\004\115\u02f3\001\001\000\002\001\001" +
    "\000\004\115\u02f2\001\001\000\004\115\u02f1\001\001\000" +
    "\002\001\001\000\004\115\u02ec\001\001\000\002\001\001" +
    "\000\004\115\u02ef\001\001\000\004\115\u02f0\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\045\u02fd\116\u02cc\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\040\u0295\041\u0293\073" +
    "\u0296\123\u0301\124\u0291\001\001\000\002\001\001\000\004" +
    "\137\u031a\001\001\000\004\142\u0318\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\142\u0310\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\142\u030b\001\001\000" +
    "\002\001\001\000\004\076\u030d\001\001\000\016\003\u019f" +
    "\047\u0303\051\u01a1\053\u01a5\075\u030e\077\u0306\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\076\u0311\001\001\000\002\001\001\000\004\100\u0313\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\100\u0317\001\001\000\002\001\001\000\004\076" +
    "\u0319\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\074\u031c\001\001\000\004\111\u0320\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\140\u0322\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\003\u019f\047\u0326\051\u01a1" +
    "\053\u01a5\001\001\000\002\001\001\000\014\003\u0280\037" +
    "\u032a\104\u027d\120\u0329\121\u0281\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u016a\u0332\001\001\000" +
    "\002\001\001\000\004\003\u0334\001\001\000\002\001\001" +
    "\000\004\003\u0336\001\001\000\002\001\001\000\004\005" +
    "\u0338\001\001\000\012\315\u0279\u0149\u0339\u014b\u0278\u0158\u027a" +
    "\001\001\000\002\001\001\000\014\005\u034a\073\u0348\u0155" +
    "\u035f\u0156\u0349\u0157\u0346\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\005\u034a\073\u0348\u0155" +
    "\u0357\u0156\u0349\u0157\u0346\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\003\u033e\104\u033a\u015c\u0342\001\001\000" +
    "\002\001\001\000\014\005\u034a\073\u0348\u0155\u0344\u0156\u0349" +
    "\u0157\u0346\001\001\000\002\001\001\000\006\143\u0112\150" +
    "\u034f\001\001\000\002\001\001\000\010\003\357\104\362" +
    "\177\u034c\001\001\000\010\005\u034a\u0156\u034b\u0157\u0346\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\005\u034a\u0157\u034d\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\u0350\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\u0354\001" +
    "\001\000\002\001\001\000\004\005\u0356\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\003\u019f\047\u0359\051" +
    "\u01a1\053\u01a5\001\001\000\002\001\001\000\014\003\u033e" +
    "\104\u033a\u015a\u035d\u015b\u035c\u015c\u033b\001\001\000\012\003" +
    "\u033e\104\u033a\u015b\u035e\u015c\u033b\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\u014c\u036a" +
    "\001\001\000\002\001\001\000\004\u014d\u0376\001\001\000" +
    "\002\001\001\000\004\u0153\u036f\001\001\000\024\003\304" +
    "\054\u0370\056\250\060\262\062\247\063\232\064\260\065" +
    "\254\u0154\u0371\001\001\000\002\001\001\000\016\005\u034a" +
    "\073\u0348\u0152\u0372\u0155\u0374\u0156\u0349\u0157\u0346\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\u014c\u0375\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u014f\u0382\001\001\000\024\003\304\054\u0379\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\u014e\u037a\001" +
    "\001\000\016\005\u034a\073\u0348\u0152\u037f\u0155\u0374\u0156\u0349" +
    "\u0157\u0346\001\001\000\002\001\001\000\016\005\u034a\073" +
    "\u0348\u0152\u037e\u0155\u0374\u0156\u0349\u0157\u0346\001\001\000\016" +
    "\005\u034a\073\u0348\u0152\u037d\u0155\u0374\u0156\u0349\u0157\u0346\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\u0150\u0391\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\003\304\054\u0384\056\250\060\262\062\247" +
    "\063\232\064\260\065\254\001\001\000\002\001\001\000" +
    "\004\u0151\u0386\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u0151\u038c\001\001\000\002\001\001\000\016\005\u034a" +
    "\073\u0348\u0152\u038e\u0155\u0374\u0156\u0349\u0157\u0346\001\001\000" +
    "\002\001\001\000\024\003\304\054\u0233\056\250\060\262" +
    "\062\247\063\232\064\260\065\254\172\u0394\001\001\000" +
    "\022\003\304\054\u0392\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\001\001\000\002\001\001\000\016\005" +
    "\u034a\073\u0348\u0152\u0393\u0155\u0374\u0156\u0349\u0157\u0346\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\005\u034a\073" +
    "\u0348\u0152\u0396\u0155\u0374\u0156\u0349\u0157\u0346\001\001\000\002" +
    "\001\001\000\012\003\u019f\047\u0398\051\u01a1\053\u01a5\001" +
    "\001\000\002\001\001\000\012\003\u0364\104\u0362\175\u039c" +
    "\176\u039b\001\001\000\010\003\u0364\104\u0362\176\u039d\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u016a\u03a0\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\u0167\u03a3\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\u0164" +
    "\u03a8\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\u0164\u03aa\001\001\000\002\001\001\000\032\002\u03ac\004" +
    "\024\021\022\025\020\027\032\031\015\035\004\041\013" +
    "\155\010\234\035\251\025\u0182\027\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\005\u03c3\073\u03c0\167\u03dc\170\u03c2\171\u03c1\001\001" +
    "\000\002\001\001\000\014\005\u03c3\073\u03c0\167\u03d4\170" +
    "\u03c2\171\u03c1\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\003\u03b5\104" +
    "\u03b3\240\u03bb\001\001\000\002\001\001\000\014\005\u03c3" +
    "\073\u03c0\167\u03be\170\u03c2\171\u03c1\001\001\000\006\143" +
    "\u0112\150\u03c9\001\001\000\002\001\001\000\010\003\357" +
    "\104\362\177\u03c6\001\001\000\010\005\u03c3\170\u03c5\171" +
    "\u03c1\001\001\000\002\001\001\000\002\001\001\000\032" +
    "\002\u03c4\004\024\021\022\025\020\027\032\031\015\035" +
    "\004\041\013\155\010\234\035\251\025\u0182\027\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\005\u03c3\171" +
    "\u03c7\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\005\u03ca\001\001\000\032\002\u03cb\004\024\021\022\025" +
    "\020\027\032\031\015\035\004\041\013\155\010\234\035" +
    "\251\025\u0182\027\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\u03cf\001\001\000\032" +
    "\002\u03d0\004\024\021\022\025\020\027\032\031\015\035" +
    "\004\041\013\155\010\234\035\251\025\u0182\027\001\001" +
    "\000\002\001\001\000\004\005\u03d2\001\001\000\032\002" +
    "\u03d3\004\024\021\022\025\020\027\032\031\015\035\004" +
    "\041\013\155\010\234\035\251\025\u0182\027\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\003\u019f\047\u03d6" +
    "\051\u01a1\053\u01a5\001\001\000\002\001\001\000\014\003" +
    "\u03b5\104\u03b3\236\u03da\237\u03d9\240\u03b6\001\001\000\012" +
    "\003\u03b5\104\u03b3\237\u03db\240\u03b6\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\156\u03e0\001\001\000\004\157" +
    "\u03ec\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\165\u03e4\001\001\000\024\003\304\054\u03e5\056\250\060" +
    "\262\062\247\063\232\064\260\065\254\166\u03e6\001\001" +
    "\000\002\001\001\000\016\005\u03c3\073\u03c0\164\u03e8\167" +
    "\u03e9\170\u03c2\171\u03c1\001\001\000\002\001\001\000\004" +
    "\156\u03ea\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\161\u03f5\001\001\000\002\001\001" +
    "\000\024\003\304\054\u03ee\056\250\060\262\062\247\063" +
    "\232\064\260\065\254\160\u03f1\001\001\000\016\005\u03c3" +
    "\073\u03c0\164\u03f4\167\u03e9\170\u03c2\171\u03c1\001\001\000" +
    "\016\005\u03c3\073\u03c0\164\u03f3\167\u03e9\170\u03c2\171\u03c1" +
    "\001\001\000\016\005\u03c3\073\u03c0\164\u03f2\167\u03e9\170" +
    "\u03c2\171\u03c1\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\162\u0404\001\001\000\002\001\001\000\022\003\304" +
    "\054\u03f9\056\250\060\262\062\247\063\232\064\260\065" +
    "\254\001\001\000\002\001\001\000\004\163\u03fb\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\163\u0401\001\001" +
    "\000\002\001\001\000\016\005\u03c3\073\u03c0\164\u0403\167" +
    "\u03e9\170\u03c2\171\u03c1\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\003\304\054\u0233\056\250\060\262\062" +
    "\247\063\232\064\260\065\254\172\u0409\001\001\000\022" +
    "\003\304\054\u0407\056\250\060\262\062\247\063\232\064" +
    "\260\065\254\001\001\000\016\005\u03c3\073\u03c0\164\u0408" +
    "\167\u03e9\170\u03c2\171\u03c1\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\005\u03c3\073\u03c0\164\u040b\167\u03e9" +
    "\170\u03c2\171\u03c1\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\u0458" +
    "\001\001\000\006\003\u0446\u0137\u0447\001\001\000\004\011" +
    "\u0442\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u017f\u043d\001\001\000" +
    "\002\001\001\000\004\011\u0432\001\001\000\004\011\u0428" +
    "\001\001\000\002\001\001\000\004\u017f\u041e\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\u0421\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\u0180\u0423\001" +
    "\001\000\004\003\u0426\001\001\000\004\005\u0424\001\001" +
    "\000\032\002\u0425\004\024\021\022\025\020\027\032\031" +
    "\015\035\004\041\013\155\010\234\035\251\025\u0182\027" +
    "\001\001\000\002\001\001\000\004\u0180\u0427\001\001\000" +
    "\002\001\001\000\004\003\u042b\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\012\u042d\001\001\000\004\003" +
    "\u0430\001\001\000\004\005\u042e\001\001\000\032\002\u042f" +
    "\004\024\021\022\025\020\027\032\031\015\035\004\041" +
    "\013\155\010\234\035\251\025\u0182\027\001\001\000\002" +
    "\001\001\000\004\012\u0431\001\001\000\002\001\001\000" +
    "\004\006\u0433\001\001\000\004\020\u0438\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\u043b\001\001\000\004\005\u0439\001\001\000\032\002\u043a" +
    "\004\024\021\022\025\020\027\032\031\015\035\004\041" +
    "\013\155\010\234\035\251\025\u0182\027\001\001\000\002" +
    "\001\001\000\004\020\u043c\001\001\000\002\001\001\000" +
    "\004\003\u043e\001\001\000\004\u0180\u043f\001\001\000\004" +
    "\005\u0440\001\001\000\032\002\u0441\004\024\021\022\025" +
    "\020\027\032\031\015\035\004\041\013\155\010\234\035" +
    "\251\025\u0182\027\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\005\u0444\001\001\000\032\002\u0445\004\024" +
    "\021\022\025\020\027\032\031\015\035\004\041\013\155" +
    "\010\234\035\251\025\u0182\027\001\001\000\002\001\001" +
    "\000\004\u0138\u0451\001\001\000\004\005\u044d\001\001\000" +
    "\002\001\001\000\006\003\u0446\u0137\u044a\001\001\000\004" +
    "\005\u044b\001\001\000\032\002\u044c\004\024\021\022\025" +
    "\020\027\032\031\015\035\004\041\013\155\010\234\035" +
    "\251\025\u0182\027\001\001\000\002\001\001\000\032\002" +
    "\u044e\004\024\021\022\025\020\027\032\031\015\035\004" +
    "\041\013\155\010\234\035\251\025\u0182\027\001\001\000" +
    "\002\001\001\000\004\003\u0454\001\001\000\004\003\u0452" +
    "\001\001\000\002\001\001\000\004\u0138\u0453\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\u0456\001\001" +
    "\000\004\u0138\u0457\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\017\u045b\001\001\000\002\001\001\000\004" +
    "\005\u045c\001\001\000\032\002\u045d\004\024\021\022\025" +
    "\020\027\032\031\015\035\004\041\013\155\010\234\035" +
    "\251\025\u0182\027\001\001\000\002\001\001\000\004\017" +
    "\u045f\001\001\000\002\001\001\000\004\005\u073f\001\001" +
    "\000\006\003\u070e\363\u070f\001\001\000\006\003\u06bb\352" +
    "\u06bd\001\001\000\004\003\u0698\001\001\000\004\005\u0696" +
    "\001\001\000\004\003\u0693\001\001\000\004\003\u0648\001" +
    "\001\000\002\001\001\000\004\003\u0639\001\001\000\004" +
    "\003\u0494\001\001\000\004\003\u046b\001\001\000\002\001" +
    "\001\000\004\u0175\u046d\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\112\u0470\001\001\000\006\u012c\u0471\u012e" +
    "\051\001\001\000\004\u0176\u0472\001\001\000\004\u0177\u0475" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\u0178" +
    "\u0478\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\112\u047b\001\001\000" +
    "\006\u012c\u047c\u012e\051\001\001\000\004\u0176\u047d\001\001" +
    "\000\004\u0177\u047e\001\001\000\004\u0178\u047f\001\001\000" +
    "\002\001\001\000\004\u0179\u0481\001\001\000\002\001\001" +
    "\000\006\u012c\u0483\u012e\051\001\001\000\006\112\u048d\u017a" +
    "\u048c\001\001\000\006\112\u0486\u017b\u0485\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\315\u0489\001\001\000" +
    "\004\315\u048a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\315\u0277\u0148\u048f\u014b\u026f\u0158\u0271\001\001\000\002" +
    "\001\001\000\012\003\u019f\047\u0491\051\u01a1\053\u01a5\001" +
    "\001\000\002\001\001\000\004\005\u0493\001\001\000\002" +
    "\001\001\000\004\u0184\u0499\001\001\000\002\001\001\000" +
    "\012\374\u0633\377\u04af\u0102\u04b2\u0103\u04b3\001\001\000\004" +
    "\376\u0631\001\001\000\006\u018a\u049d\u018b\u049c\001\001\000" +
    "\004\005\u049a\001\001\000\032\002\u049b\004\024\021\022" +
    "\025\020\027\032\031\015\035\004\041\013\155\010\234" +
    "\035\251\025\u0182\027\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\u0183\u0624\001\001\000\004\u018b\u061f\001" +
    "\001\000\004\u018c\u0619\001\001\000\004\u018d\u04a5\001\001" +
    "\000\002\001\001\000\004\u018b\u04a3\001\001\000\002\001" +
    "\001\000\006\u018a\u04a8\u018b\u049c\001\001\000\002\001\001" +
    "\000\006\u018a\u0617\u018b\u049c\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\374\u04ae\377\u04af\u0102\u04b2\u0103\u04b3" +
    "\001\001\000\004\u018d\u04ab\001\001\000\002\001\001\000" +
    "\004\003\u05d1\001\001\000\006\u0104\u05b2\u0105\u058c\001\001" +
    "\000\004\u018d\u05d0\001\001\000\004\373\u05cf\001\001\000" +
    "\002\001\001\000\004\003\u05cb\001\001\000\004\373\u05ca" +
    "\001\001\000\002\001\001\000\004\u0135\u05a2\001\001\000" +
    "\002\001\001\000\012\u010e\u04dd\u0110\u04db\u012c\u04da\u012e\051" +
    "\001\001\000\002\001\001\000\004\u0109\u04ba\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\140\u04bd\001\001\000\002\001\001\000\004\u010a\u04bf\001" +
    "\001\000\002\001\001\000\004\003\u04c1\001\001\000\010" +
    "\u010b\u04c5\u010c\u04c7\u010d\u04c6\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\140\u04c8\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\u010b\u04ca\u010c\u04c7\u010d\u04c6\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\u012b\u04d7\001" +
    "\001\000\004\u012b\u04d0\001\001\000\002\001\001\000\004" +
    "\u010d\u04d4\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\u010c\u04d9\u010d\u04c6\001\001\000\002\001" +
    "\001\000\002\001\001\000\040\u0111\u0555\u0112\u0554\u0113\u0553" +
    "\u0114\u0552\u0115\u0551\u0116\u0550\u0117\u054f\u0118\u054e\u011a\u0544\u011b" +
    "\u0543\u011c\u0542\u011d\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001" +
    "\000\004\373\u053e\001\001\000\022\003\304\054\u04e1\056" +
    "\250\060\262\062\247\063\232\064\260\065\254\001\001" +
    "\000\004\373\u04df\001\001\000\012\374\u04e0\377\u04af\u0102" +
    "\u04b2\u0103\u04b3\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\u0121\u04e6\u0123\u04e3\001\001\000\004\u0127\u053d\001" +
    "\001\000\002\001\001\000\010\340\u050e\u0124\u053c\u0125\u050c" +
    "\001\001\000\006\u0121\u0538\u0123\u04e3\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u0533\001\001\000\004" +
    "\u0132\u052b\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u0126\u04ed\001\001\000\002\001\001\000\004\u0127\u04f0" +
    "\001\001\000\014\u0128\u04f9\u0129\u04f8\u012a\u04f7\u0133\u04f5\u0134" +
    "\u04f3\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\140\u04fc\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\u012a\u04fe\u0133\u04f5\u0134\u04f3" +
    "\001\001\000\002\001\001\000\012\u0129\u0500\u012a\u04f7\u0133" +
    "\u04f5\u0134\u04f3\001\001\000\002\001\001\000\004\u012b\u0505" +
    "\001\001\000\004\u012b\u0503\001\001\000\004\u0134\u0504\001" +
    "\001\000\002\001\001\000\006\u0133\u0507\u0134\u04f3\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\340\u050e\u0124" +
    "\u050d\u0125\u050c\001\001\000\006\340\u050e\u0125\u0528\001\001" +
    "\000\006\340\u050e\u0125\u0527\001\001\000\004\003\u0511\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\347" +
    "\u0519\001\001\000\004\334\u051d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\347\u0520\001\001\000\004\334\u0521" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\347" +
    "\u0524\001\001\000\004\334\u0525\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\003\304\054\u052c\056\250\060\262" +
    "\062\247\063\232\064\260\065\254\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\003\304\054\u0531\056\250\060" +
    "\262\062\247\063\232\064\260\065\254\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u0123\u0534\001\001\000" +
    "\002\001\001\000\022\003\304\054\u0536\056\250\060\262" +
    "\062\247\063\232\064\260\065\254\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\u0121\u053b\u0123\u04e3\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\u011c\u05be" +
    "\u011d\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000\032\u0114" +
    "\u05bd\u0115\u0551\u0116\u0550\u0117\u054f\u0118\u054e\u011a\u0544\u011b\u0543" +
    "\u011c\u0542\u011d\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\u011e\u057e\001\001" +
    "\000\002\001\001\000\036\u0112\u057c\u0113\u0553\u0114\u0552\u0115" +
    "\u0551\u0116\u0550\u0117\u054f\u0118\u054e\u011a\u0544\u011b\u0543\u011c\u0542" +
    "\u011d\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000\004\003" +
    "\u0575\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\u011b\u0567\u011c\u0542\u011d\u0540\u011f\u054a\u0121\u0549\u0123" +
    "\u04e3\001\001\000\004\003\u0558\001\001\000\004\340\u055b" +
    "\001\001\000\004\340\u0565\001\001\000\004\340\u0563\001" +
    "\001\000\004\376\u055c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\376\u0564" +
    "\001\001\000\002\001\001\000\004\376\u0566\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u0119\u0573\001\001\000" +
    "\004\u0119\u056e\001\001\000\002\001\001\000\020\u011a\u056f" +
    "\u011b\u0543\u011c\u0542\u011d\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\u011b\u0572" +
    "\u011c\u0542\u011d\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000" +
    "\002\001\001\000\020\u011a\u0574\u011b\u0543\u011c\u0542\u011d\u0540" +
    "\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000\002\001\001\000" +
    "\004\u0123\u0534\001\001\000\022\003\304\054\u0577\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\001\001\000" +
    "\026\u0116\u057b\u0117\u054f\u0118\u054e\u011a\u0544\u011b\u0543\u011c\u0542" +
    "\u011d\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000\022\003" +
    "\304\054\u0579\056\250\060\262\062\247\063\232\064\260" +
    "\065\254\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\016\374\u0581\377\u04af" +
    "\u0102\u04b2\u0103\u04b3\u0121\u0582\u0123\u04e3\001\001\000\006\u011d" +
    "\u057f\u011f\u054a\001\001\000\002\001\001\000\014\340\u050e" +
    "\u0104\u05b2\u0105\u058c\u0124\u053c\u0125\u050c\001\001\000\002\001" +
    "\001\000\004\u011e\u05b1\001\001\000\002\001\001\000\004" +
    "\003\u05ac\001\001\000\006\u0132\u052b\u0135\u05a2\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\u0109\u04ba\u0126\u04ed" +
    "\001\001\000\014\340\u050e\u0104\u058d\u0105\u058c\u0124\u050d\u0125" +
    "\u050c\001\001\000\010\340\u050e\u0105\u05a0\u0125\u0527\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\340\u050e\u0105\u058f\u0125\u0528\001\001\000\002\001\001" +
    "\000\004\347\u0591\001\001\000\004\u0106\u0593\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\340\u0598\u0107\u0597" +
    "\u0108\u0596\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\340\u0598\u0108\u059c\001\001\000\002\001" +
    "\001\000\004\347\u059e\001\001\000\004\u0106\u059f\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\003\304\054\u05a5" +
    "\056\250\060\262\062\247\063\232\064\260\065\254\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\003\304\054\u05aa\056\250\060" +
    "\262\062\247\063\232\064\260\065\254\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\u0103\u05ad\u0123\u0534\001" +
    "\001\000\002\001\001\000\022\003\304\054\u05af\056\250" +
    "\060\262\062\247\063\232\064\260\065\254\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\030\u0115\u05b9" +
    "\u0116\u0550\u0117\u054f\u0118\u054e\u011a\u0544\u011b\u0543\u011c\u0542\u011d" +
    "\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\u0118\u05bc\u011a\u0544\u011b\u0543\u011c" +
    "\u0542\u011d\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\u0117\u05c4\u0118\u054e\u011a\u0544\u011b\u0543\u011c\u0542\u011d" +
    "\u0540\u011f\u054a\u0121\u0549\u0123\u04e3\001\001\000\002\001\001" +
    "\000\034\u0113\u05c6\u0114\u0552\u0115\u0551\u0116\u0550\u0117\u054f\u0118" +
    "\u054e\u011a\u0544\u011b\u0543\u011c\u0542\u011d\u0540\u011f\u054a\u0121\u0549" +
    "\u0123\u04e3\001\001\000\002\001\001\000\006\u0104\u058d\u0105" +
    "\u058c\001\001\000\004\u0105\u058f\001\001\000\004\u0105\u05a0" +
    "\001\001\000\002\001\001\000\004\u0103\u05ad\001\001\000" +
    "\022\003\304\054\u05cd\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\140\u05d7\001\001\000\002\001\001" +
    "\000\004\340\u05d9\001\001\000\004\376\u05da\001\001\000" +
    "\002\001\001\000\004\347\u05dc\001\001\000\004\u0106\u05dd" +
    "\001\001\000\002\001\001\000\004\340\u05df\001\001\000" +
    "\004\376\u05e0\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\140\u05e4\001\001\000\002\001" +
    "\001\000\004\340\u05e6\001\001\000\004\376\u05e7\001\001" +
    "\000\002\001\001\000\004\347\u05e9\001\001\000\004\u0106" +
    "\u05ea\001\001\000\002\001\001\000\004\340\u05ec\001\001" +
    "\000\004\376\u05ed\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\340\u05f0\001\001\000\004\376\u05f1\001\001" +
    "\000\002\001\001\000\004\347\u05f3\001\001\000\004\u0106" +
    "\u05f4\001\001\000\002\001\001\000\004\340\u05f6\001\001" +
    "\000\004\376\u05f7\001\001\000\002\001\001\000\004\003" +
    "\u05f9\001\001\000\010\u012c\u05fa\u012e\051\u0191\u05fb\001\001" +
    "\000\006\u0185\u0610\u0186\u060f\001\001\000\004\u018d\u060c\001" +
    "\001\000\004\u0187\u060b\001\001\000\004\u0187\u0603\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u0186\u0616\001\001\000\002\001\001\000\004" +
    "\u018d\u0618\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u018d\u061e\001\001\000\002\001\001\000\004\u018c\u061d" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\u018b\u0622\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\374\u062a\377\u04af\u0102\u04b2\u0103\u04b3\001\001" +
    "\000\006\u018a\u0628\u018b\u049c\001\001\000\004\u0183\u0629\001" +
    "\001\000\002\001\001\000\004\u0183\u062b\001\001\000\002" +
    "\001\001\000\004\003\u062d\001\001\000\006\u012c\u062e\u012e" +
    "\051\001\001\000\006\u0185\u062f\u0186\u060f\001\001\000\004" +
    "\u0183\u0630\001\001\000\002\001\001\000\004\u0183\u0632\001" +
    "\001\000\002\001\001\000\004\u0183\u0634\001\001\000\002" +
    "\001\001\000\004\003\u0636\001\001\000\010\u012c\u05fa\u012e" +
    "\051\u0191\u0637\001\001\000\004\u0183\u0638\001\001\000\002" +
    "\001\001\000\006\312\u063b\313\u063a\001\001\000\002\001" +
    "\001\000\004\005\u0646\001\001\000\004\315\u0641\001\001" +
    "\000\004\140\u063e\001\001\000\002\001\001\000\004\313" +
    "\u0640\001\001\000\002\001\001\000\004\314\u0643\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\002\u0647\004\024\021\022\025\020" +
    "\027\032\031\015\035\004\041\013\155\010\234\035\251" +
    "\025\u0182\027\001\001\000\002\001\001\000\004\u013b\u0649" +
    "\001\001\000\012\u013c\u0653\u0142\u0652\u0143\u0651\u0145\u064f\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\315\u0277" +
    "\u0148\u068e\u014b\u026f\u0158\u0271\001\001\000\002\001\001\000" +
    "\004\u0146\u066b\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\u012c\u0655\u012e\051\001\001\000\004\u013d\u0656\001\001" +
    "\000\004\u013e\u0659\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u013f\u065c\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\u0140\u065d\001\001\000\004\u0141\u0660\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\u0142\u0652" +
    "\u0143\u0651\u0145\u0661\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\u012c\u0664\u012e\051\001\001\000\004\u013d\u0665" +
    "\001\001\000\004\u013e\u0666\001\001\000\004\u013f\u0667\001" +
    "\001\000\004\u0140\u0668\001\001\000\004\u0141\u0669\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\u0142\u068b\u0143" +
    "\u0651\001\001\000\002\001\001\000\006\u0142\u0688\u0143\u0651" +
    "\001\001\000\002\001\001\000\006\u0142\u0670\u0143\u0651\001" +
    "\001\000\002\001\001\000\004\u0147\u0674\001\001\000\004" +
    "\u015d\u0687\001\001\000\004\u015d\u0686\001\001\000\002\001" +
    "\001\000\004\u015d\u0685\001\001\000\004\u015d\u0684\001\001" +
    "\000\004\u015d\u0679\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u015d\u0683\001\001\000\004\u015d\u0682\001\001" +
    "\000\004\u015d\u0681\001\001\000\004\u015d\u0680\001\001\000" +
    "\004\u015d\u067f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u0147\u068a\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\u0143\u068d\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\315\u0277\u0148" +
    "\u0690\u014b\u026f\u0158\u0271\001\001\000\002\001\001\000\004" +
    "\005\u0692\001\001\000\002\001\001\000\004\u013b\u0694\001" +
    "\001\000\012\u013c\u0695\u0142\u0652\u0143\u0651\u0145\u064f\001\001" +
    "\000\002\001\001\000\032\002\u0697\004\024\021\022\025" +
    "\020\027\032\031\015\035\004\041\013\155\010\234\035" +
    "\251\025\u0182\027\001\001\000\002\001\001\000\004\357" +
    "\u069a\001\001\000\004\360\u069e\001\001\000\004\005\u069b" +
    "\001\001\000\032\002\u069c\004\024\021\022\025\020\027" +
    "\032\031\015\035\004\041\013\155\010\234\035\251\025" +
    "\u0182\027\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\361\u06b6\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\362\u06a6\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\360\u06b7\001\001\000\002\001" +
    "\001\000\004\361\u06b8\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\353\u070c\354\u06c1\001" +
    "\001\000\006\353\u06c3\354\u06c1\001\001\000\004\005\u06be" +
    "\001\001\000\032\002\u06bf\004\024\021\022\025\020\027" +
    "\032\031\015\035\004\041\013\155\010\234\035\251\025" +
    "\u0182\027\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\302\u06cc" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\303\u06d0\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u017c\u06d4\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\304\u06db\305\u06da\306\u06d9\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\307\u06e3" +
    "\001\001\000\002\001\001\000\006\305\u06e8\306\u06d9\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\307\u06eb\001\001\000\004\306\u06ef\001\001\000\004" +
    "\306\u06ee\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\307\u06f2\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\302\u06f8\001\001" +
    "\000\004\355\u06fa\001\001\000\004\302\u0700\001\001\000" +
    "\004\356\u06fc\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\355\u0701\001\001\000\002\001\001\000\004\302\u0703" +
    "\001\001\000\004\301\u0706\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\364\u0711\001\001\000\004\003\u0714\001\001\000" +
    "\004\005\u0712\001\001\000\032\002\u0713\004\024\021\022" +
    "\025\020\027\032\031\015\035\004\041\013\155\010\234" +
    "\035\251\025\u0182\027\001\001\000\002\001\001\000\004" +
    "\365\u0718\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\366\u073e\001\001\000\002\001\001\000\004\366\u0738" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\367\u071f\001\001\000\002\001\001\000\004" +
    "\370\u0731\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\367\u0733\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\370\u0734\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\002\u0740\004\024\021\022\025\020\027" +
    "\032\031\015\035\004\041\013\155\010\234\035\251\025" +
    "\u0182\027\001\001\000\002\001\001\000\004\005\u0742\001" +
    "\001\000\032\002\u0743\004\024\021\022\025\020\027\032" +
    "\031\015\035\004\041\013\155\010\234\035\251\025\u0182" +
    "\027\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\u083a\001\001\000\002\001\001\000" +
    "\006\003\u07fc\371\u07fd\001\001\000\002\001\001\000\004" +
    "\005\u07fa\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\u0790\001\001" +
    "\000\006\003\u0755\350\u0757\001\001\000\002\001\001\000" +
    "\004\005\u0753\001\001\000\032\002\u0754\004\024\021\022" +
    "\025\020\027\032\031\015\035\004\041\013\155\010\234" +
    "\035\251\025\u0182\027\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\u0759\001\001\000\004\333\u078f\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\333\u075e\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\347\u0760\001\001\000\004" +
    "\334\u0761\001\001\000\002\001\001\000\010\335\u0766\336" +
    "\u0764\340\u0767\001\001\000\012\341\u0770\342\u0772\343\u0771" +
    "\345\u0774\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\337\u0769\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\140\u076d\001\001\000\002\001\001\000\006\336\u076f" +
    "\340\u0767\001\001\000\002\001\001\000\004\340\u078d\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\346\u0778" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\064\u078a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\064\u0784\001\001\000\004\344\u0786\001\001\000\004" +
    "\064\u0788\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\344\u0789\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\342\u078c\343\u0771\345\u0774\001\001\000\002\001" +
    "\001\000\004\337\u078e\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\312\u0791\313\u063a\001\001\000\004\005" +
    "\u0792\001\001\000\032\002\u0793\004\024\021\022\025\020" +
    "\027\032\031\015\035\004\041\013\155\010\234\035\251" +
    "\025\u0182\027\001\001\000\002\001\001\000\006\003\u0755" +
    "\350\u0795\001\001\000\002\001\001\000\004\003\u0797\001" +
    "\001\000\004\333\u079c\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\333\u079b\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\273\u07a6\274\u07a5\275\u07a4\277\u07a1" +
    "\300\u07a3\302\u07a0\001\001\000\002\001\001\000\012\275" +
    "\u07ce\277\u07a1\300\u07a3\302\u07a0\001\001\000\004\276\u07c7" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\276" +
    "\u07c0\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\005\u07be\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\302\u07aa\001\001\000\004\276\u07ab\001\001\000\004" +
    "\277\u07bc\001\001\000\006\300\u07b5\302\u07b6\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\302\u07b2\001\001\000\004\276\u07b3\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\276\u07b8" +
    "\001\001\000\004\276\u07b7\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\302\u07ba\001\001\000\004\276\u07bb" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\002\u07bf\004\024\021\022\025\020\027\032" +
    "\031\015\035\004\041\013\155\010\234\035\251\025\u0182" +
    "\027\001\001\000\002\001\001\000\004\277\u07c1\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\274\u07c6\275" +
    "\u07a4\277\u07a1\300\u07a3\302\u07a0\001\001\000\014\274\u07c5" +
    "\275\u07a4\277\u07a1\300\u07a3\302\u07a0\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\310\u07c9\001\001\000\002" +
    "\001\001\000\004\277\u07ca\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\275\u07d0\277\u07a1\300\u07a3\302\u07a0\001" +
    "\001\000\002\001\001\000\004\301\u07d2\001\001\000\004" +
    "\302\u07d3\001\001\000\002\001\001\000\006\003\u0755\350" +
    "\u07d5\001\001\000\002\001\001\000\004\003\u07d7\001\001" +
    "\000\004\333\u07dc\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\333\u07db\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\003" +
    "\u0755\350\u07e0\001\001\000\002\001\001\000\004\003\u07e2" +
    "\001\001\000\004\333\u07e7\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\333\u07e6\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\003\u0755\350\u07e9\001\001\000" +
    "\002\001\001\000\004\003\u07eb\001\001\000\004\333\u07f0" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\333" +
    "\u07ef\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\003\u0755\350\u07f2\001\001\000\002\001\001\000\004\003" +
    "\u07f4\001\001\000\004\333\u07f9\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\333\u07f8\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\002\u07fb\004\024\021\022" +
    "\025\020\027\032\031\015\035\004\041\013\155\010\234" +
    "\035\251\025\u0182\027\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\u07fe\001\001\000\032\002\u07ff\004" +
    "\024\021\022\025\020\027\032\031\015\035\004\041\013" +
    "\155\010\234\035\251\025\u0182\027\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\372\u0803\377\u0802\u0102\u0804" +
    "\u0103\u04b3\001\001\000\004\373\u0816\001\001\000\002\001" +
    "\001\000\004\373\u080b\001\001\000\014\u010e\u0807\u0110\u0806" +
    "\u012c\u04da\u012e\051\u0130\u0808\001\001\000\004\373\u080a\001" +
    "\001\000\004\373\u0809\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\340" +
    "\u080d\001\001\000\004\375\u080e\001\001\000\004\376\u0815" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\372\u0819\377\u0802\u0102\u0804\u0103\u04b3\001\001\000\002" +
    "\001\001\000\004\340\u081b\001\001\000\004\375\u081c\001" +
    "\001\000\004\376\u081d\001\001\000\002\001\001\000\004" +
    "\311\u0823\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\u0824\001\001" +
    "\000\032\002\u0825\004\024\021\022\025\020\027\032\031" +
    "\015\035\004\041\013\155\010\234\035\251\025\u0182\027" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\032\002\u083b\004" +
    "\024\021\022\025\020\027\032\031\015\035\004\041\013" +
    "\155\010\234\035\251\025\u0182\027\001\001\000\002\001" +
    "\001\000\006\u013a\u083d\u0174\u083e\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\023\u0847\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\u0845\001\001\000\032\002\u0846\004\024\021" +
    "\022\025\020\027\032\031\015\035\004\041\013\155\010" +
    "\234\035\251\025\u0182\027\001\001\000\002\001\001\000" +
    "\004\032\u084c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\u084d\001" +
    "\001\000\032\002\u084e\004\024\021\022\025\020\027\032" +
    "\031\015\035\004\041\013\155\010\234\035\251\025\u0182" +
    "\027\001\001\000\002\001\001\000\004\034\u0851\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\u0853\001" +
    "\001\000\032\002\u0854\004\024\021\022\025\020\027\032" +
    "\031\015\035\004\041\013\155\010\234\035\251\025\u0182" +
    "\027\001\001\000\002\001\001\000\004\023\u0864\001\001" +
    "\000\004\024\u085a\001\001\000\004\023\u0858\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\u085b\001\001" +
    "\000\032\002\u085c\004\024\021\022\025\020\027\032\031" +
    "\015\035\004\041\013\155\010\234\035\251\025\u0182\027" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\u0866\001\001\000\004\005\u0867\001\001\000\032" +
    "\002\u0868\004\024\021\022\025\020\027\032\031\015\035" +
    "\004\041\013\155\010\234\035\251\025\u0182\027\001\001" +
    "\000\002\001\001\000\004\003\u086a\001\001\000\004\005" +
    "\u086b\001\001\000\032\002\u086c\004\024\021\022\025\020" +
    "\027\032\031\015\035\004\041\013\155\010\234\035\251" +
    "\025\u0182\027\001\001\000\002\001\001\000\004\030\u0870" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\005" +
    "\u0871\001\001\000\032\002\u0872\004\024\021\022\025\020" +
    "\027\032\031\015\035\004\041\013\155\010\234\035\251" +
    "\025\u0182\027\001\001\000\002\001\001\000\002\001\001" +
    "\000\030\003\245\054\244\056\250\060\262\062\247\063" +
    "\232\064\260\065\254\245\u0879\253\u08a6\265\u087a\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\003\245\054\244\056\250\060\262\062\247\063\232" +
    "\064\260\065\254\245\u0879\253\u089f\265\u087a\001\001\000" +
    "\022\005\u0887\255\u0885\256\u0884\260\u0882\261\u0880\262\u087f" +
    "\263\u087e\264\u087d\001\001\000\002\001\001\000\006\143" +
    "\u0112\150\u089d\001\001\000\004\003\u0898\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\143\u0112\150\u0896\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\003\357\104\362\177\u088d\001\001\000\032\002\u088c" +
    "\004\024\021\022\025\020\027\032\031\015\035\004\041" +
    "\013\155\010\234\035\251\025\u0182\027\001\001\000\002" +
    "\001\001\000\024\003\304\054\340\056\250\060\262\062" +
    "\247\063\232\064\260\065\254\266\u088a\001\001\000\006" +
    "\005\u0887\264\u088b\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\257\u088f\001\001\000\010\003\357\104\362" +
    "\177\u0891\001\001\000\016\005\u0887\260\u0890\261\u0880\262" +
    "\u087f\263\u087e\264\u087d\001\001\000\002\001\001\000\004" +
    "\257\u0892\001\001\000\002\001\001\000\024\003\304\054" +
    "\u01d0\056\250\060\262\062\247\063\232\064\260\065\254" +
    "\241\u0894\001\001\000\012\005\u0887\262\u0895\263\u087e\264" +
    "\u087d\001\001\000\002\001\001\000\010\005\u0887\263\u0897" +
    "\264\u087d\001\001\000\002\001\001\000\020\005\u0887\256" +
    "\u089a\260\u0882\261\u0880\262\u087f\263\u087e\264\u087d\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\005\u0887\256" +
    "\u089c\260\u0882\261\u0880\262\u087f\263\u087e\264\u087d\001\001" +
    "\000\002\001\001\000\014\005\u0887\261\u089e\262\u087f\263" +
    "\u087e\264\u087d\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\003\u019f\047\u08a1\051\u01a1\053\u01a5\001\001\000" +
    "\002\001\001\000\004\254\u08a4\001\001\000\002\001\001" +
    "\000\026\003\245\054\244\056\250\060\262\062\247\063" +
    "\232\064\260\065\254\245\u0879\265\u08a5\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    
    /* Reporte de error encontrado. */
    public void report_error(String message, Object info) {
        StringBuilder m = new StringBuilder("Error");
        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            m.append(" " + s.value.toString());
            if (s.left >= 0) {                
                m.append(" in line "+(s.left));
                if (s.right >= 0)
                    m.append(", column "+(s.right));
            }
        }
        m.append(" : "+message);
        System.err.println(m);
    }
   
    /* Cuando se encuentra un error de donde el sistema no puede
        recuperarse, se lanza un error fatal. Se despliega el mensaje
        de error y se finaliza la ejecucion. */
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }

    /* Metodo main para garantizar la ejecucion del analizador
       lexico y sintactico, ademas que se pase como parametro la tabla
       de simbolos correspondiente. */
    public static void main(String[] args){
        try {
             parser asin = new parser(
                    new Lexer( new FileReader(args[0])));
            Object result = asin.parse().value;
            System.out.println("\n*** Resultados finales ***");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
	
	
	

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1043: // FINAL ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FINAL",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1042: // FINAL ::= PUNTOCOMA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FINAL",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1041: // OBJECT ::= IDENTIFICADOR PUNTO IDENTIFICADOR PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1040: // OBJECT ::= IDENTIFICADOR PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1039: // OBJECT ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1038: // TRUNCATE1 ::= TRUNCATE TABLE OBJECT FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRUNCATE1",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1037: // TRUNCATE1 ::= TRUNCATE TABLE OBJECT FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRUNCATE1",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1036: // COMA1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMA1",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1035: // COMA1 ::= COMA OBJECT COMA1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMA1",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1034: // EXISTS1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXISTS1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1033: // EXISTS1 ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXISTS1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1032: // COMA2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMA2",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1031: // COMA2 ::= COMA IDENTIFICADOR COMA2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMA2",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1030: // DROPT ::= TABLE EXISTS1 OBJECT COMA1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPT",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1029: // DROPT ::= TABLE EXISTS1 OBJECT COMA1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPT",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1028: // OBJECT2 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT2",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1027: // OBJECT2 ::= IDENTIFICADOR PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT2",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1026: // COMA3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMA3",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1025: // COMA3 ::= COMA OBJECT2 COMA3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMA3",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1024: // DROPV ::= VIEW EXISTS1 OBJECT2 COMA3 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPV",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1023: // DROPV ::= VIEW EXISTS1 OBJECT2 COMA3 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPV",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1022: // DROPU ::= USER EXISTS1 IDENTIFICADOR FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPU",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1021: // DROPU ::= USER EXISTS1 IDENTIFICADOR FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPU",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1020: // DROPD ::= DATABASE EXISTS1 IDENTIFICADOR COMA2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPD",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1019: // DROPD ::= DATABASE EXISTS1 IDENTIFICADOR COMA2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPD",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1018: // DROPI3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI3",310, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1017: // DROPI3 ::= COMA OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI3",310, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1016: // DROPI3 ::= COMA OBJECT ON OBJECT DROPI3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI3",310, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1015: // DROPI2 ::= OBJECT DROPI3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI2",309, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1014: // DROPI2 ::= OBJECT ON OBJECT DROPI3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI2",309, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1013: // DROPI ::= INDEX DROPI2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI",308, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1012: // DROPI ::= INDEX DROPI2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI",308, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1011: // DROPI ::= INDEX IF EXISTS DROPI2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI",308, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1010: // DROPI ::= INDEX IF EXISTS DROPI2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPI",308, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1009: // DROPPROC4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPPROC4",382, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1008: // DROPPROC4 ::= COMA OBJECT DROPPROC4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPPROC4",382, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1007: // DROPPROC3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPPROC3",381, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1006: // DROPPROC3 ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPPROC3",381, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1005: // DROPPROC2 ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPPROC2",380, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1004: // DROPPROC2 ::= PROC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPPROC2",380, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1003: // DROPPROC ::= DROPPROC2 DROPPROC3 OBJECT DROPPROC4 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPPROC",379, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1002: // DROPPROC ::= DROPPROC2 DROPPROC3 OBJECT DROPPROC4 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPPROC",379, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1001: // DROPFUNC ::= FUNCTION DROPPROC3 OBJECT DROPPROC4 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPFUNC",383, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1000: // DROPFUNC ::= FUNCTION DROPPROC3 OBJECT DROPPROC4 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROPFUNC",383, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 999: // DROP1 ::= DROPFUNC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 998: // DROP1 ::= DROPPROC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 997: // DROP1 ::= DROPI 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 996: // DROP1 ::= DROPU 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 995: // DROP1 ::= DROPV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 994: // DROP1 ::= DROPD 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 993: // DROP1 ::= DROPT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 992: // WITH1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("WITH1",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 991: // WITH1 ::= WITH PARENTESISIZQ DELAYED_DURABILITY IGUAL ON PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("WITH1",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 990: // WITH1 ::= WITH PARENTESISIZQ DELAYED_DURABILITY IGUAL OFF PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("WITH1",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 989: // IDVAR2 ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("IDVAR2",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 988: // IDVAR2 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("IDVAR2",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 987: // IDVAR ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("IDVAR",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 986: // IDVAR ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("IDVAR",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 985: // IDVAR ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("IDVAR",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 984: // TRAN1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRAN1",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 983: // TRAN1 ::= TRANSACTION IDVAR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRAN1",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 982: // TRAN1 ::= TRAN IDVAR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRAN1",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 981: // COMMIT1 ::= COMMIT TRAN1 WITH1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMIT1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 980: // COMMIT1 ::= COMMIT TRAN1 WITH1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMIT1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 979: // TRAN2 ::= TRANSACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRAN2",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 978: // TRAN2 ::= TRAN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRAN2",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 977: // ROLLBACK1 ::= ROLLBACK TRAN2 IDVAR FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROLLBACK1",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 976: // ROLLBACK1 ::= ROLLBACK TRAN2 IDVAR FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROLLBACK1",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 975: // SAVE1 ::= SAVE TRAN2 IDVAR2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAVE1",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 974: // SAVE1 ::= SAVE TRAN2 IDVAR2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAVE1",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 973: // DESC1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DESC1",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 972: // DESC1 ::= STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DESC1",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 971: // WITH2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("WITH2",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 970: // WITH2 ::= WITH MARK DESC1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("WITH2",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 969: // BEGINTRAN1 ::= TRAN2 IDVAR WITH2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGINTRAN1",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 968: // BEGINTRAN1 ::= TRAN2 IDVAR WITH2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGINTRAN1",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 967: // BEGIN1 ::= BEGIN SQLSTATEMENT END FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGIN1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 966: // BEGIN1 ::= BEGIN SQLSTATEMENT END FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGIN1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 965: // BEGIN1 ::= BEGIN BEGINTRAN1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGIN1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 964: // OPQUER2 ::= PARENTESISIZQ IDENTIFICADOR COMA STRINGA PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPQUER2",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 963: // OPROW6 ::= STRINGA PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPROW6",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 962: // OPROW6 ::= OBJECT PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPROW6",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 961: // OPROW5 ::= COMA OPROW6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPROW5",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 960: // OPROW4 ::= OPROW5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPROW4",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 959: // OPROW4 ::= PUNTOCOMA STRINGA PUNTOCOMA STRINGA OPROW5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPROW4",89, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 958: // OPROW3 ::= STRINGA OPROW4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPROW3",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 957: // OPROW2 ::= PARENTESISIZQ STRINGA COMA OPROW3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPROW2",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 956: // ROWSETF ::= OPENQUERY OPQUER2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROWSETF",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 955: // ROWSETF ::= OPENROWSET OPROW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROWSETF",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 954: // COLUMNSLIST2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNSLIST2",95, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 953: // COLUMNSLIST2 ::= COMA IDENTIFICADOR COLUMNSLIST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNSLIST2",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 952: // COLUMNSLIST ::= IDENTIFICADOR COLUMNSLIST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNSLIST",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 951: // INSERT12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT12",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 950: // INSERT12 ::= COMA PARENTESISIZQ INSERT9 PARENTESISDER INSERT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT12",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 949: // INSERT10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT10",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 948: // INSERT10 ::= COMA INSERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT10",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 947: // INSERT21 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT21",406, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 946: // INSERT21 ::= COMA DOUBLENUM INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT21",406, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 945: // INSERT21 ::= COMA ENTERODECIMAL INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT21",406, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 944: // INSERT21 ::= COMA ARROBA IDENTIFICADOR INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT21",406, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 943: // INSERT21 ::= COMA STRINGA INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT21",406, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 942: // INSERT21 ::= COMA IDENTIFICADOR INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT21",406, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 941: // INSERT20 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT20",405, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 940: // INSERT20 ::= DOUBLENUM INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT20",405, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 939: // INSERT20 ::= ENTERODECIMAL INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT20",405, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 938: // INSERT20 ::= ARROBA IDENTIFICADOR INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT20",405, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 937: // INSERT20 ::= STRINGA INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT20",405, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 936: // INSERT20 ::= IDENTIFICADOR INSERT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT20",405, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 935: // INSERT9 ::= OBJECT PARENTESIS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT9",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 934: // INSERT9 ::= OBJECT PARENTESISIZQ INSERT20 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT9",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 933: // INSERT9 ::= E3 INSERT10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT9",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 932: // INSERT9 ::= DEFAULT INSERT10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT9",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 931: // INSERT8 ::= EXECUTE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT8",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 930: // INSERT8 ::= DEFAULT VALUES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT8",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 929: // INSERT8 ::= VALUES PARENTESISIZQ INSERT9 PARENTESISDER INSERT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT8",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 928: // INSERT7 ::= INSERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT7",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 927: // INSERT7 ::= OUTPUT1 INSERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT7",81, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 926: // INSERT6 ::= INSERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT6",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 925: // INSERT6 ::= PARENTESISIZQ COLUMNSLIST PARENTESISDER INSERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT6",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 924: // INSERT5 ::= ARROBA IDENTIFICADOR INSERT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT5",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 923: // INSERT5 ::= ROWSETF INSERT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT5",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 922: // INSERT5 ::= OBJECT INSERT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT5",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 921: // INSERT4 ::= INSERT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT4",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 920: // INSERT4 ::= INTO INSERT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT4",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 919: // INSERT3 ::= INSERT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT3",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 918: // INSERT3 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT3",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 917: // INSERT2 ::= INSERT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 916: // INSERT2 ::= TOP PARENTESISIZQ SCALAREXP PARENTESISDER INSERT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 915: // INSERT1 ::= INSERT INSERT2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 914: // INSERT1 ::= INSERT INSERT2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 913: // F ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 912: // F ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 911: // F ::= DOUBLENUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 910: // F ::= ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 909: // F ::= PARENTESISIZQ SCALAREXP PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 908: // T1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T1",40, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 907: // T1 ::= DIV F T1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T1",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 906: // T1 ::= MULTI F T1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T1",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 905: // T ::= F T1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 904: // E1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E1",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 903: // E1 ::= RESTA T E1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E1",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 902: // E1 ::= SUMA T E1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E1",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 901: // SCALAREXP ::= T E1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCALAREXP",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 900: // FUNC4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC4",402, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 899: // FUNC4 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC4",402, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 898: // FUNC4 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC4",402, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 897: // FUNC3 ::= E3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC3",53, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 896: // FUNC3 ::= MULTI 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC3",53, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 895: // FUNC2 ::= E3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC2",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 894: // FUNC2 ::= DISTINCT E3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC2",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 893: // FUNC2 ::= ALL E3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC2",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 892: // FUNC ::= SUM PARENTESISIZQ FUNC2 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 891: // FUNC ::= MIN PARENTESISIZQ FUNC2 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 890: // FUNC ::= MAX PARENTESISIZQ FUNC2 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 889: // FUNC ::= COUNT PARENTESISIZQ FUNC4 FUNC3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 888: // FUNC ::= AVG PARENTESISIZQ FUNC2 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNC",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 887: // CONST ::= STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 886: // CONST ::= RESTA DOUBLENUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 885: // CONST ::= DOUBLENUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 884: // CONST ::= RESTA ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 883: // CONST ::= ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 882: // CONST ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 881: // SUB1 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SUB1",403, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 880: // SUB1 ::= STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SUB1",403, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 879: // SUB1 ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SUB1",403, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 878: // SUB2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SUB2",404, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 877: // SUB2 ::= FROM SUB1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SUB2",404, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 876: // EXPIZADA ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 875: // EXPIZADA ::= TRIM PARENTESISIZQ SUB1 SUB2 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 874: // EXPIZADA ::= UPPER PARENTESISIZQ SUB1 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 873: // EXPIZADA ::= LOWER PARENTESISIZQ SUB1 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 872: // EXPIZADA ::= TRANSLATE PARENTESISIZQ SUB1 COMA SUB1 COMA SUB1 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 871: // EXPIZADA ::= SUBSTRING PARENTESISIZQ SUB1 COMA SCALAREXP COMA SCALAREXP PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 870: // EXPIZADA ::= NULLIF PARENTESISIZQ SCALAREXP COMA SCALAREXP PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 869: // EXPIZADA ::= FUNC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 868: // EXPIZADA ::= CONST 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 867: // EXPIZADA ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPIZADA",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 866: // G ::= EXPIZADA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("G",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 865: // G ::= PARENTESISIZQ E3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("G",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 864: // F4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F4",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 863: // F4 ::= PORCENTAJE G F4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F4",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 862: // F4 ::= IGUAL G F4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F4",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 861: // F4 ::= DIFERENTE G F4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F4",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 860: // F4 ::= MENORIGUAL G F4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F4",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 859: // F4 ::= MAYORIGUAL G F4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F4",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 858: // F4 ::= MAYORQUE G F4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F4",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 857: // F4 ::= MENORQUE G F4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F4",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 856: // F3 ::= G F4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F3",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 855: // T4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T4",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 854: // T4 ::= DIV F3 T4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T4",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 853: // T4 ::= MULTI F3 T4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T4",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 852: // T3 ::= F3 T4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T3",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 851: // E4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E4",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 850: // E4 ::= RESTA T3 E4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E4",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 849: // E4 ::= SUMA T3 E4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E4",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 848: // E3 ::= T3 E4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E3",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 847: // EXECUTE9 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE9",75, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 846: // EXECUTE9 ::= COMA EXECUTE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE9",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 845: // EXECUTE10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE10",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 844: // EXECUTE10 ::= DEFAULT EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE10",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 843: // EXECUTE10 ::= IDENTIFICADOR EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE10",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 842: // EXECUTE10 ::= STRINGA EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE10",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 841: // EXECUTE10 ::= DOUBLENUM EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE10",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 840: // EXECUTE10 ::= ENTERODECIMAL EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE10",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 839: // EXECUTE8 ::= ARROBA IDENTIFICADOR EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE8",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 838: // EXECUTE8 ::= ARROBA IDENTIFICADOR OUTPUT EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE8",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 837: // EXECUTE8 ::= DEFAULT EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE8",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 836: // EXECUTE8 ::= IDENTIFICADOR EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE8",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 835: // EXECUTE8 ::= STRINGA EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE8",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 834: // EXECUTE8 ::= DOUBLENUM EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE8",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 833: // EXECUTE8 ::= ENTERODECIMAL EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE8",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 832: // EXECUTE7 ::= EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE7",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 831: // EXECUTE7 ::= OUTPUT EXECUTE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE7",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 830: // EXECUTE7 ::= IGUAL EXECUTE8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE7",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 829: // EXECUTE6 ::= EXECUTE10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE6",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 828: // EXECUTE6 ::= ARROBA IDENTIFICADOR EXECUTE7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE6",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 827: // EXECUTE5 ::= ARROBA IDENTIFICADOR EXECUTE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE5",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 826: // EXECUTE5 ::= OBJECT EXECUTE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE5",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 825: // EXECUTE5 ::= OBJECT PUNTOCOMA ENTERODECIMAL EXECUTE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE5",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 824: // EXECUTE11 ::= OBJECT EXECUTE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE11",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 823: // EXECUTE11 ::= OBJECT PUNTOCOMA ENTERODECIMAL EXECUTE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE11",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 822: // EXECUTE4 ::= EXECUTE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE4",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 821: // EXECUTE4 ::= IGUAL EXECUTE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE4",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 820: // EXECUTE3 ::= EXECUTE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE3",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 819: // EXECUTE3 ::= ARROBA IDENTIFICADOR EXECUTE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE3",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 818: // EXECUTE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE2",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 817: // EXECUTE2 ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE2",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 816: // EXECUTE2 ::= EXEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE2",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 815: // EXECUTE1 ::= EXECUTE2 EXECUTE3 PUNTOCOMA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE1",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 814: // COLUMN_NAME2 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMN_NAME2",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 813: // COLUMN_NAME2 ::= MULTI 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMN_NAME2",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 812: // COLUMN_NAME ::= INSERTED PUNTO COLUMN_NAME2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMN_NAME",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 811: // COLUMN_NAME ::= DELETED PUNTO COLUMN_NAME2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMN_NAME",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 810: // DML_SELECT_LIST2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML_SELECT_LIST2",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 809: // DML_SELECT_LIST2 ::= COMA DML_SELECT_LIST 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML_SELECT_LIST2",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 808: // DML_SELECT_LIST3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML_SELECT_LIST3",96, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 807: // DML_SELECT_LIST3 ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML_SELECT_LIST3",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 806: // DML_SELECT_LIST ::= IDENTIFICADOR PUNTO MULTI DML_SELECT_LIST3 DML_SELECT_LIST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML_SELECT_LIST",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 805: // DML_SELECT_LIST ::= SCALAREXP DML_SELECT_LIST3 DML_SELECT_LIST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML_SELECT_LIST",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 804: // DML_SELECT_LIST ::= COLUMN_NAME DML_SELECT_LIST3 DML_SELECT_LIST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML_SELECT_LIST",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 803: // OUTPUT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTPUT3",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 802: // OUTPUT3 ::= PARENTESISIZQ COLUMNSLIST PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTPUT3",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 801: // OUTPUT2 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTPUT2",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 800: // OUTPUT2 ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTPUT2",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 799: // OUTPUT4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTPUT4",93, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 798: // OUTPUT4 ::= INTO OUTPUT2 OUTPUT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTPUT4",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 797: // OUTPUT1 ::= OUTPUT DML_SELECT_LIST OUTPUT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTPUT1",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 796: // SAM_CL3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 795: // SAM_CL3 ::= ROWS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 794: // SAM_CL3 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 793: // SAM_CL ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 792: // SAM_CL ::= TABLESAMPLE PARENTESISIZQ SCALAREXP SAM_CL3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL",135, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 791: // TB1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB1",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 790: // TB1 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB1",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 789: // TB1 ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB1",134, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 788: // TB3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB3",133, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 787: // TB3 ::= COMA E3 TB3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB3",133, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 786: // TB5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB5",132, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 785: // TB5 ::= PARENTESISIZQ COLUMNSLIST PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB5",132, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 784: // TB4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB4",131, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 783: // TB4 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB4",131, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 782: // TB4 ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB4",131, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 781: // TB2 ::= PUNTO IDENTIFICADOR PARENTESISIZQ E3 TB3 PARENTESISDER TB4 TB5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB2",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 780: // TB2 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB2",130, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 779: // TB2 ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB2",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 778: // JOINTYPE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTYPE3",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 777: // JOINTYPE3 ::= OUTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTYPE3",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 776: // JOINTYPE ::= FULL JOINTYPE3 JOIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTYPE",149, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 775: // JOINTYPE ::= RIGHT JOINTYPE3 JOIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTYPE",149, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 774: // JOINTYPE ::= LEFT JOINTYPE3 JOIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTYPE",149, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 773: // JOINTYPE ::= JOIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTYPE",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 772: // JOINTYPE ::= INNER JOIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTYPE",149, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 771: // TABLE3 ::= CROSS JOIN TB_SOURCE PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE3",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 770: // TABLE3 ::= JOINTYPE TB_SOURCE ON SCWM PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE3",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 769: // TABLE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE2",152, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 768: // TABLE2 ::= CROSS JOIN TB_SOURCE TABLE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE2",152, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 767: // TABLE2 ::= JOINTYPE TB_SOURCE ON SCWM TABLE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE2",152, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 766: // TB_SOURCE ::= PARENTESISIZQ TB_SOURCE TABLE3 TABLE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 765: // TB_SOURCE ::= ARROBA IDENTIFICADOR TB2 TABLE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 764: // TB_SOURCE ::= ROWSETF TB1 TABLE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 763: // TB_SOURCE ::= OBJECT TB1 SAM_CL TABLE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 762: // DEFOBJETO2 ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFOBJETO2",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 761: // DEFOBJETO2 ::= ROWSETF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFOBJETO2",124, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 760: // DEFOBJETO2 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFOBJETO2",124, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 759: // DEFOBJETO1 ::= DEFOBJETO2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFOBJETO1",123, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 758: // DEFOBJETO1 ::= PERCENT DEFOBJETO2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFOBJETO1",123, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 757: // DEFOBJETO ::= DEFOBJETO2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFOBJETO",122, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 756: // DEFOBJETO ::= TOP PARENTESISIZQ SCALAREXP PARENTESISDER DEFOBJETO1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFOBJETO",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 755: // ARGUMENT2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ARGUMENT2",121, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 754: // ARGUMENT2 ::= COMA ARGUMENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ARGUMENT2",121, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 753: // ARGUMENT ::= E3 ARGUMENT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ARGUMENT",120, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 752: // FQ3 ::= FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ3",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 751: // FQ3 ::= FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ3",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 750: // FQ3 ::= WHERE CURRENT OF IDENTIFICADOR FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ3",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 749: // FQ3 ::= WHERE CURRENT OF IDENTIFICADOR FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ3",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 748: // FQ3 ::= WHERE CURRENT OF GLOBAL IDENTIFICADOR FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ3",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 747: // FQ3 ::= WHERE CURRENT OF GLOBAL IDENTIFICADOR FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ3",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 746: // FQ3 ::= WHERE SCWM FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ3",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 745: // FQ3 ::= WHERE SCWM FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ3",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 744: // FQ2 ::= FQ3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ2",118, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 743: // FQ2 ::= FROM TB_SOURCE FQ3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ2",118, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 742: // FINALQUERY ::= FQ2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FINALQUERY",117, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 741: // FINALQUERY ::= OUTPUT1 FQ2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FINALQUERY",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 740: // FQ5 ::= FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ5",341, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 739: // FQ5 ::= WHERE CURRENT OF IDENTIFICADOR FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ5",341, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 738: // FQ5 ::= WHERE CURRENT OF GLOBAL IDENTIFICADOR FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ5",341, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 737: // FQ5 ::= WHERE SCWM FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ5",341, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 736: // FQ4 ::= FQ5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ4",340, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 735: // FQ4 ::= FROM TB_SOURCE FQ5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FQ4",340, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 734: // FINALQUERY2 ::= FQ4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FINALQUERY2",339, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 733: // FINALQUERY2 ::= OUTPUT1 FQ4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FINALQUERY2",339, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 732: // UPD16 ::= PARENTESISIZQ ARGUMENT PARENTESISDER UPD18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD16",334, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 731: // UPD16 ::= IGUAL E3 UPD18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD16",334, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 730: // UPD18 ::= FINALQUERY2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD18",336, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 729: // UPD18 ::= COMA UPD12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD18",336, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 728: // UPD20 ::= E3 UPD18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD20",338, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 727: // UPD19 ::= IGUAL UPD20 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD19",337, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 726: // UPD17 ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD17",335, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 725: // UPD17 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD17",335, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 724: // UPD17 ::= ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD17",335, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 723: // UPD15 ::= WRITE PARENTESISIZQ E3 COMA UPD17 COMA UPD17 PARENTESISDER UPD18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD15",333, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 722: // UPD15 ::= IDENTIFICADOR UPD16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD15",333, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 721: // UPD14 ::= NULL UPD18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD14",332, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 720: // UPD14 ::= DEFAULT UPD18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD14",332, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 719: // UPD14 ::= E3 UPD18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD14",332, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 718: // UPD13 ::= PUNTO UPD15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD13",331, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 717: // UPD13 ::= IGUAL UPD14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD13",331, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 716: // UPD12 ::= ARROBA IDENTIFICADOR UPD19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD12",330, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 715: // UPD12 ::= IDENTIFICADOR UPD13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD12",330, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 714: // UPDATE11 ::= UPDATE DEFOBJETO SET UPD12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE11",329, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 713: // UPD6 ::= PARENTESISIZQ ARGUMENT PARENTESISDER UPD8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD6",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 712: // UPD6 ::= IGUAL E3 UPD8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD6",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 711: // UPD8 ::= FINALQUERY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD8",114, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 710: // UPD8 ::= COMA UPD2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD8",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 709: // UPD10 ::= E3 UPD8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD10",116, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 708: // UPD9 ::= IGUAL UPD10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD9",115, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 707: // UPD7 ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD7",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 706: // UPD7 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD7",113, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 705: // UPD7 ::= ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD7",113, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 704: // UPD5 ::= WRITE PARENTESISIZQ E3 COMA UPD7 COMA UPD7 PARENTESISDER UPD8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD5",111, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 703: // UPD5 ::= IDENTIFICADOR UPD6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD5",111, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 702: // UPD4 ::= NULL UPD8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD4",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 701: // UPD4 ::= DEFAULT UPD8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD4",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 700: // UPD4 ::= E3 UPD8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD4",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 699: // UPD3 ::= PUNTO UPD5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD3",109, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 698: // UPD3 ::= IGUAL UPD4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD3",109, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 697: // UPD2 ::= ARROBA IDENTIFICADOR UPD9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD2",108, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 696: // UPD2 ::= IDENTIFICADOR UPD3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPD2",108, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 695: // UPDATE1 ::= UPDATE DEFOBJETO SET UPD2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 694: // SCWM5 ::= SCWM2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 693: // SCWM4 ::= PARENTESISIZQ SCWM PARENTESISDER SCWM5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM4",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 692: // SCWM4 ::= PREDICADO SCWM5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM4",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 691: // SCWM3 ::= SCWM4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM3",104, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 690: // SCWM3 ::= NOT SCWM4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM3",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 689: // SCWM2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM2",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 688: // SCWM2 ::= OR SCWM3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM2",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 687: // SCWM2 ::= AND SCWM3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM2",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 686: // SCWM ::= PARENTESISIZQ SCWM PARENTESISDER SCWM2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 685: // SCWM ::= NOT1 PREDICADO SCWM2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SCWM",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 684: // PRED2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED2",100, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 683: // PRED2 ::= COMA E3 PRED2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED2",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 682: // PRED3 ::= LIKE STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED3",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 681: // PRED3 ::= IN PARENTESISIZQ E3 PRED2 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED3",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 680: // PRED3 ::= BETWEEN E3 AND E3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED3",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 679: // COMPARADORES ::= MAYORMENOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARADORES",148, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 678: // COMPARADORES ::= DIFMENOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARADORES",148, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 677: // COMPARADORES ::= DIFMAYOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARADORES",148, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 676: // COMPARADORES ::= DIFIGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARADORES",148, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 675: // PRED1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED1",99, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 674: // PRED1 ::= NOT1 PRED3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED1",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 673: // PRED1 ::= IS NOT1 NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED1",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 672: // PRED1 ::= COMPARADORES E3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PRED1",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 671: // FT1 ::= PARENTESISIZQ COLUMNSLIST PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FT1",147, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 670: // FT1 ::= MULTI 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FT1",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 669: // FT1 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FT1",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 668: // PREDICADO ::= FREETEXT PARENTESISIZQ FT1 COMA STRINGA PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICADO",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 667: // PREDICADO ::= CONTAINS PARENTESISIZQ FT1 COMA CSC1 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICADO",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 666: // PREDICADO ::= E3 PRED1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICADO",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 665: // CSC3 ::= CSC1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC3",146, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 664: // CSC3 ::= NOT CSC1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC3",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 663: // CSC2 ::= OPAND CSC1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC2",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 662: // CSC2 ::= OPOR CSC1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC2",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 661: // CSC2 ::= OR CSC1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC2",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 660: // CSC2 ::= AND CSC3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC2",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 659: // CSC1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC1",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 658: // CSC1 ::= PARENTESISIZQ CSC1 PARENTESISDER CSC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC1",144, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 657: // CSC1 ::= STRINGA CSC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CSC1",144, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 656: // NOT1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NOT1",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 655: // NOT1 ::= NOT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NOT1",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 654: // DEL15 ::= ROWSETF FINALQUERY2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL15",346, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 653: // DEL15 ::= ARROBA IDENTIFICADOR FINALQUERY2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL15",346, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 652: // DEL15 ::= OBJECT FINALQUERY2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL15",346, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 651: // DEL14 ::= DEL15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL14",345, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 650: // DEL14 ::= FROM DEL15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL14",345, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 649: // DEL13 ::= DEL14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL13",344, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 648: // DEL13 ::= PERCENT DEL14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL13",344, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 647: // DEL12 ::= DEL14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL12",343, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 646: // DEL12 ::= TOP PARENTESISIZQ SCALAREXP PARENTESISDER DEL13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL12",343, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 645: // DELETE11 ::= DELETE DEL12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DELETE11",342, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 644: // DEL5 ::= ROWSETF FINALQUERY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL5",158, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 643: // DEL5 ::= ARROBA IDENTIFICADOR FINALQUERY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL5",158, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 642: // DEL5 ::= OBJECT FINALQUERY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL5",158, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 641: // DEL4 ::= DEL5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL4",157, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 640: // DEL4 ::= FROM DEL5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL4",157, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 639: // DEL3 ::= DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL3",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 638: // DEL3 ::= PERCENT DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL3",156, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 637: // DEL2 ::= DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL2",155, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 636: // DEL2 ::= TOP PARENTESISIZQ SCALAREXP PARENTESISDER DEL3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL2",155, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 635: // DELETE1 ::= DELETE DEL2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DELETE1",154, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 634: // SELECT32 ::= FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT32",214, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 633: // SELECT31 ::= SELECT32 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT31",213, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 632: // SELECT31 ::= ORDER BY ORDER_BY SELECT32 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT31",213, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 631: // SELECT29 ::= SELECT31 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT29",212, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 630: // SELECT29 ::= HAVING SCWM SELECT31 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT29",212, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 629: // SELECT28 ::= SELECT29 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT28",211, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 628: // SELECT28 ::= GROUP BY GROUP_BY SELECT29 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT28",211, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 627: // SELECT27 ::= SELECT28 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT27",210, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 626: // SELECT27 ::= WHERE SCWM SELECT28 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT27",210, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 625: // SELECT26 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT26",209, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 624: // SELECT26 ::= COMA TB_SOURCE SELECT26 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT26",209, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 623: // SELECT25 ::= SELECT27 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT25",208, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 622: // SELECT25 ::= FROM TB_SOURCE SELECT26 SELECT27 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT25",208, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 621: // SELECT24 ::= SELECT25 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT24",207, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 620: // SELECT24 ::= INTO OBJECT SELECT25 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT24",207, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 619: // SELECT24 ::= INTO OBJECT ON IDENTIFICADOR SELECT25 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT24",207, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 618: // SELECT23 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT23",206, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 617: // SELECT23 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT23",206, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 616: // SELECT33 ::= SELIST SELECT24 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT33",215, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 615: // SELECT22 ::= SELECT33 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT22",205, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 614: // SELECT22 ::= TOP PARENTESISIZQ SCALAREXP PARENTESISDER SELECT23 SELECT33 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT22",205, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 613: // SELECT21 ::= SELECT22 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT21",204, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 612: // SELECT21 ::= DISTINCT SELECT22 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT21",204, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 611: // SELECT21 ::= ALL SELECT22 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT21",204, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 610: // SELECT20 ::= SELECT SELECT21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT20",203, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 609: // SELECT12 ::= FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT12",178, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 608: // SELECT12 ::= FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT12",178, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 607: // SELECT11 ::= SELECT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT11",177, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 606: // SELECT11 ::= ORDER BY ORDER_BY SELECT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT11",177, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 605: // SELECT10 ::= SELECT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT10",176, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 604: // SELECT10 ::= HAVING SCWM SELECT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT10",176, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 603: // SELECT9 ::= SELECT10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT9",175, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 602: // SELECT9 ::= GROUP BY GROUP_BY SELECT10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT9",175, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 601: // SELECT8 ::= SELECT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT8",174, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 600: // SELECT8 ::= WHERE SCWM SELECT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT8",174, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 599: // SELECT7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT7",173, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 598: // SELECT7 ::= COMA TB_SOURCE SELECT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT7",173, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 597: // SELECT6 ::= SELECT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT6",172, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 596: // SELECT6 ::= FROM TB_SOURCE SELECT7 SELECT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT6",172, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 595: // SELECT5 ::= SELECT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT5",171, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 594: // SELECT5 ::= INTO OBJECT SELECT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT5",171, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 593: // SELECT5 ::= INTO OBJECT ON IDENTIFICADOR SELECT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT5",171, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 592: // SELECT4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT4",170, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 591: // SELECT4 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT4",170, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 590: // SELECT13 ::= SELIST SELECT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT13",179, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 589: // SELIST4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST4",166, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 588: // SELIST4 ::= COMA SELIST 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST4",166, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 587: // SELECT3 ::= SELECT13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT3",169, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 586: // SELECT3 ::= TOP PARENTESISIZQ SCALAREXP PARENTESISDER SELECT4 SELECT13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT3",169, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 585: // SELECT2 ::= SELECT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT2",168, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 584: // SELECT2 ::= DISTINCT SELECT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT2",168, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 583: // SELECT2 ::= ALL SELECT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT2",168, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 582: // SELECT1 ::= SELECT SELECT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT1",167, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 581: // SELIST3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 580: // SELIST3 ::= STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 579: // SELIST3 ::= AS STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",165, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 578: // SELIST3 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 577: // SELIST3 ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",165, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 576: // SELIST2 ::= DOLAR ROWGUID 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST2",164, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 575: // SELIST2 ::= DOLAR IDENTITY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST2",164, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 574: // SELIST ::= OBJECT PARENTESISIZQ ARGUMENT PARENTESISDER SELIST3 SELIST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 573: // SELIST ::= E3 SELIST3 SELIST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 572: // SELIST ::= IDENTIFICADOR PUNTO SELIST2 SELIST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 571: // SELIST ::= IDENTIFICADOR PUNTO MULTI SELIST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 570: // SELIST ::= MULTI SELIST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 569: // ORDER_BY4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER_BY4",183, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 568: // ORDER_BY4 ::= COMA ORDER_BY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER_BY4",183, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 567: // ORDER_BY3 ::= ORDER_BY4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER_BY3",182, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 566: // ORDER_BY3 ::= DESC ORDER_BY4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER_BY3",182, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 565: // ORDER_BY3 ::= ASC ORDER_BY4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER_BY3",182, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 564: // ORDER_BY2 ::= ORDER_BY3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER_BY2",181, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 563: // ORDER_BY2 ::= COLLATE IDENTIFICADOR ORDER_BY3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER_BY2",181, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 562: // ORDER_BY ::= E3 ORDER_BY2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER_BY",180, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 561: // GROUP_BY2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GROUP_BY2",160, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 560: // GROUP_BY2 ::= COMA E3 GROUP_BY2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GROUP_BY2",160, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 559: // GROUP_BY ::= PARENTESISIZQ E3 GROUP_BY2 PARENTESISIZQ 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GROUP_BY",159, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 558: // GROUP_BY ::= E3 GROUP_BY2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GROUP_BY",159, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 557: // FILESPEC6 ::= FILENAME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC6",378, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 556: // FILESPEC6 ::= FILE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC6",378, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 555: // FILESPEC5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC5",196, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 554: // FILESPEC5 ::= COMA FILEGROWTH IGUAL ENTERODECIMAL PORCENTAJE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC5",196, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 553: // FILESPEC5 ::= COMA FILEGROWTH IGUAL ENTERODECIMAL TAM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC5",196, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 552: // FILESPEC4 ::= FILESPEC5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC4",195, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 551: // FILESPEC4 ::= COMA MAXSIZE IGUAL ENTERODECIMAL UNLIMITED FILESPEC5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC4",195, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 550: // FILESPEC4 ::= COMA MAXSIZE IGUAL ENTERODECIMAL TAM FILESPEC5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC4",195, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 549: // FILESPEC3 ::= FILESPEC4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC3",194, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 548: // FILESPEC3 ::= COMA SIZE IGUAL ENTERODECIMAL TAM FILESPEC4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC3",194, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 547: // FILESPEC2 ::= STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC2",193, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 546: // FILESPEC2 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC2",193, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 545: // FILESPEC ::= PARENTESISIZQ NAME IGUAL FILESPEC2 COMA FILESPEC6 IGUAL STRINGA FILESPEC3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESPEC",192, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 544: // FILEGROUP2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILEGROUP2",191, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // FILEGROUP2 ::= CONTAINS MEMORY_OPTIMIZED_DATA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILEGROUP2",191, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // FILEGROUP2 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILEGROUP2",191, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // FILEGROUP2 ::= CONTAINS FILESTREAM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILEGROUP2",191, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // FILEGROUP2 ::= CONTAINS FILESTREAM DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILEGROUP2",191, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // FILEGROUP1 ::= FILEGROUP IDENTIFICADOR FILEGROUP2 FILESPEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILEGROUP1",190, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // TAM ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TAM",197, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // TAM ::= TB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TAM",197, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // TAM ::= GB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TAM",197, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // TAM ::= MB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TAM",197, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // TAM ::= KB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TAM",197, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // CDATABASE5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE5",189, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // CDATABASE5 ::= COLLATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE5",189, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // CDATABASE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE4",188, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // CDATABASE4 ::= FOR ATTACH_REBUILD_LOG 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE4",188, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // CDATABASE4 ::= FOR ATTACH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE4",188, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // CDATABASE4 ::= LOG ON FILESPEC CDATABASE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE4",188, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // CDATABASE4 ::= COMA LOG ON FILESPEC CDATABASE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE4",188, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // CDATABASE4 ::= COMA FILEGROUP1 CDATABASE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE4",188, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // CDATABASE4 ::= COMA FILESPEC CDATABASE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE4",188, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // CDATABASE6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE6",198, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // CDATABASE6 ::= AS SNAPSHOT OF IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE6",198, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // CDATABASE3 ::= CDATABASE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE3",187, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // CDATABASE3 ::= LOG ON FILESPEC CDATABASE4 CDATABASE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE3",187, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // CDATABASE3 ::= FILEGROUP1 CDATABASE4 CDATABASE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE3",187, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // CDATABASE3 ::= FILESPEC CDATABASE4 CDATABASE6 CDATABASE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE3",187, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // CDATABASE2 ::= CDATABASE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE2",186, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // CDATABASE2 ::= ON CDATABASE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE2",186, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // CDATABASE2 ::= ON PRIMARY CDATABASE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE2",186, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // CDATABASE1 ::= CDATABASE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE1",185, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // CDATABASE1 ::= CONTAINMENT IGUAL PARTIAL CDATABASE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE1",185, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // CDATABASE1 ::= CONTAINMENT IGUAL NONE CDATABASE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CDATABASE1",185, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // CUSER1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // CUSER1 ::= FROM ASYMMETRIC KEY IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // CUSER1 ::= FOR ASYMMETRIC KEY IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // CUSER1 ::= FROM CERTIFICATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // CUSER1 ::= FOR CERTIFICATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // CUSER1 ::= WITHOUT LOGIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // CUSER1 ::= WITH PASSWORD IGUAL STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // CUSER1 ::= FROM LOGIN STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // CUSER1 ::= FROM LOGIN IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // CUSER1 ::= FOR LOGIN STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // CUSER1 ::= FOR LOGIN IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CUSER1",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // CVIEW3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CVIEW3",202, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // CVIEW3 ::= WITH CHECK OPTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CVIEW3",202, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // CVIEW2 ::= AS SELECT20 CVIEW3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CVIEW2",201, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // CVIEW1 ::= CVIEW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CVIEW1",200, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // CVIEW1 ::= PARENTESISIZQ COLUMNSLIST PARENTESISDER CVIEW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CVIEW1",200, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // ASCDESC ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ASCDESC",229, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // ASCDESC ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ASCDESC",229, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // ASCDESC ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ASCDESC",229, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // COMPARISON_OP ::= DIFMAYOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // COMPARISON_OP ::= MAYORIGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // COMPARISON_OP ::= MAYORQUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // COMPARISON_OP ::= DIFMENOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // COMPARISON_OP ::= MENORIGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // COMPARISON_OP ::= MENORQUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // COMPARISON_OP ::= DIFIGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // COMPARISON_OP ::= DIFERENTE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // COMPARISON_OP ::= MAYORMENOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // COMPARISON_OP ::= IGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // COMPARISON_OP ::= IS NOT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // COMPARISON_OP ::= IS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON_OP",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // COMPARISON ::= IDENTIFICADOR COMPARISON_OP CONST 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARISON",227, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // DISJUNCT2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DISJUNCT2",226, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // DISJUNCT2 ::= COMA CONST DISJUNCT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DISJUNCT2",226, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // DISJUNCT ::= IDENTIFICADOR IN PARENTESISIZQ CONST DISJUNCT2 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DISJUNCT",225, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // CONJUNCT ::= COMPARISON 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONJUNCT",224, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // CONJUNCT ::= DISJUNCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONJUNCT",224, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // FILTER_PREDICATE ::= CONJUNCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILTER_PREDICATE",223, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // FILTER_PREDICATE ::= CONJUNCT AND CONJUNCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILTER_PREDICATE",223, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // CINDEX6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX6",221, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // CINDEX6 ::= FILESTREAM_ON NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX6",221, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // CINDEX6 ::= FILESTREAM_ON IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX6",221, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // ONCLAUSE ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ONCLAUSE",222, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // ONCLAUSE ::= ON IDENTIFICADOR PUNTOPUNTO IDENTIFICADOR PARENTESISIZQ IDENTIFICADOR ASCDESC CINDEX3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ONCLAUSE",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // ONCLAUSE ::= ON ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ONCLAUSE",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // ONCLAUSE ::= ON STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ONCLAUSE",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // ONCLAUSE ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ONCLAUSE",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // ONCLAUSE ::= ON DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ONCLAUSE",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // ONCLAUSE ::= ON OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ONCLAUSE",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // ONCLAUSE ::= ON OBJECT PARENTESISIZQ IDENTIFICADOR ASCDESC CINDEX3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ONCLAUSE",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // CINDEX5 ::= ONCLAUSE CINDEX6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX5",220, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // CINDEX5 ::= WHERE FILTER_PREDICATE ONCLAUSE CINDEX6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX5",220, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // CINDEX4 ::= CINDEX5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX4",219, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // CINDEX4 ::= INCLUDE PARENTESISIZQ COLUMNSLIST PARENTESISDER CINDEX5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX4",219, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // CINDEX3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX3",218, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // CINDEX3 ::= COMA IDENTIFICADOR ASCDESC CINDEX3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX3",218, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // CINDEX2 ::= PARENTESISIZQ IDENTIFICADOR ASCDESC CINDEX3 PARENTESISDER CINDEX4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX2",217, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // CINDEX7 ::= STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX7",230, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // CINDEX7 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX7",230, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // CINDEX1 ::= INDEX CINDEX7 ON IDENTIFICADOR PUNTOPUNTO IDENTIFICADOR CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // CINDEX1 ::= NONCLUSTERED INDEX CINDEX7 ON IDENTIFICADOR PUNTOPUNTO IDENTIFICADOR CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // CINDEX1 ::= CLUSTERED INDEX CINDEX7 ON IDENTIFICADOR PUNTOPUNTO IDENTIFICADOR CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // CINDEX1 ::= UNIQUE NONCLUSTERED INDEX CINDEX7 ON IDENTIFICADOR PUNTOPUNTO IDENTIFICADOR CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // CINDEX1 ::= UNIQUE CLUSTERED INDEX CINDEX7 ON IDENTIFICADOR PUNTOPUNTO IDENTIFICADOR CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // CINDEX1 ::= UNIQUE INDEX CINDEX7 ON IDENTIFICADOR PUNTOPUNTO IDENTIFICADOR CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // CINDEX1 ::= INDEX CINDEX7 ON OBJECT CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // CINDEX1 ::= NONCLUSTERED INDEX CINDEX7 ON OBJECT CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // CINDEX1 ::= CLUSTERED INDEX CINDEX7 ON OBJECT CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // CINDEX1 ::= UNIQUE NONCLUSTERED INDEX CINDEX7 ON OBJECT CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // CINDEX1 ::= UNIQUE CLUSTERED INDEX CINDEX7 ON OBJECT CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // CINDEX1 ::= UNIQUE INDEX CINDEX7 ON OBJECT CINDEX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CINDEX1",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // OPCIONESC ::= SET DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPCIONESC",297, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // OPCIONESC ::= SET NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPCIONESC",297, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // OPCIONESC ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPCIONESC",297, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // OPCIONESC ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPCIONESC",297, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // TABLEINDEX ::= INDEX OBJECT COLUMNSTORE PARENTESISIZQ COLUMNSLIST PARENTESISDER ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLEINDEX",253, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // TABLEINDEX ::= INDEX OBJECT NONCLUSTERED COLUMNSTORE PARENTESISIZQ COLUMNSLIST PARENTESISDER ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLEINDEX",253, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // TABLEINDEX ::= INDEX OBJECT CLUSTERED COLUMNSTORE ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLEINDEX",253, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // TABLEINDEX ::= INDEX OBJECT PARENTESISIZQ IDENTIFICADOR ASCDESC TCONSTRAINT4 PARENTESISDER ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLEINDEX",253, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // TABLEINDEX ::= INDEX OBJECT NONCLUSTERED PARENTESISIZQ IDENTIFICADOR ASCDESC TCONSTRAINT4 PARENTESISDER ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLEINDEX",253, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // TABLEINDEX ::= INDEX OBJECT CLUSTERED PARENTESISIZQ IDENTIFICADOR ASCDESC TCONSTRAINT4 PARENTESISDER ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLEINDEX",253, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // FILESTREAMCLAUSE ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESTREAMCLAUSE",252, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // FILESTREAMCLAUSE ::= FILESTREAM_ON NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESTREAMCLAUSE",252, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // FILESTREAMCLAUSE ::= FILESTREAM_ON IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESTREAMCLAUSE",252, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // FILESTREAMCLAUSE ::= FILESTREAM_ON PRIMARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESTREAMCLAUSE",252, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // FILESTREAMCLAUSE ::= FILESTREAM_ON DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESTREAMCLAUSE",252, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // FILESTREAMCLAUSE ::= FILESTREAM_ON STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILESTREAMCLAUSE",252, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // COLUMNC12 ::= PARENTESISIZQ E3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC12",304, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // COLUMNC12 ::= NOT FOR REPLICATION PARENTESISIZQ E3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC12",304, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // COLUMNC11 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC11",306, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // COLUMNC11 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC11",306, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // COLUMNC10 ::= COLUMNC11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC10",305, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // COLUMNC10 ::= ON UPDATE OPCIONESC COLUMNC11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC10",305, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // COLUMNC9 ::= COLUMNC10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC9",296, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // COLUMNC9 ::= ON DELETE OPCIONESC COLUMNC10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC9",296, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // COLUMNC8 ::= COLUMNC9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC8",295, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // COLUMNC8 ::= PARENTESISIZQ COLUMNSLIST PARENTESISDER COLUMNC9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC8",295, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // COLUMNC7 ::= COLUMNC8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC7",294, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // COLUMNC7 ::= PUNTO IDENTIFICADOR COLUMNC8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC7",294, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // COLUMNC6 ::= IDENTIFICADOR COLUMNC7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC6",293, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // COLUMNC5 ::= REFERENCES COLUMNC6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC5",292, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // COLUMNC4 ::= ONCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC4",291, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // COLUMNC3 ::= COLUMNC4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC3",290, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // COLUMNC3 ::= NONCLUSTERED COLUMNC4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC3",290, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // COLUMNC3 ::= CLUSTERED COLUMNC4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC3",290, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // COLUMNC2 ::= DEFAULT PARENTESISIZQ E3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC2",289, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // COLUMNC2 ::= CHECK COLUMNC12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC2",289, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // COLUMNC2 ::= REFERENCES COLUMNC6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC2",289, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // COLUMNC2 ::= FOREIGN KEY COLUMNC5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC2",289, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // COLUMNC2 ::= UNIQUE COLUMNC3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC2",289, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // COLUMNC2 ::= PRIMARY KEY COLUMNC3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNC2",289, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // COLUMNCONSTRAINT ::= COLUMNC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNCONSTRAINT",287, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // COLUMNCONSTRAINT ::= CONSTRAINT OBJECT COLUMNC2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNCONSTRAINT",287, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // COLUMNINDEX ::= INDEX OBJECT ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNINDEX",285, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // COLUMNINDEX ::= INDEX OBJECT NONCLUSTERED ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNINDEX",285, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // COLUMNINDEX ::= INDEX OBJECT CLUSTERED ONCLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNINDEX",285, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // COLUMNDEF15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF15",284, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // COLUMNDEF15 ::= COMA CTABLE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF15",284, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // COLUMNDEF15 ::= COMA COLUMNCONSTRAINT COLUMNDEF15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF15",284, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // COLUMNDEF14 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF14",283, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // COLUMNDEF14 ::= COLUMNINDEX 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF14",283, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // COLUMNDEF13 ::= COLUMNDEF14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF13",282, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // COLUMNDEF13 ::= COLUMNCONSTRAINT COLUMNDEF15 COLUMNDEF14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF13",282, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // COLUMNDEF12 ::= COLUMNDEF13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF12",281, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // COLUMNDEF12 ::= ROWGUIDCOL COLUMNDEF13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF12",281, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // COLUMNDEF11 ::= COLUMNDEF12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF11",280, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // COLUMNDEF11 ::= NOT NULL COLUMNDEF12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF11",280, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // COLUMNDEF11 ::= NULL COLUMNDEF12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF11",280, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // COLUMNDEF10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF10",279, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // COLUMNDEF10 ::= HIDDEN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF10",279, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // COLUMNDEF9 ::= COLUMNDEF11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF9",278, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // COLUMNDEF9 ::= GENERATED ALWAYS AS ROW END COLUMNDEF10 COLUMNDEF11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF9",278, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // COLUMNDEF9 ::= GENERATED ALWAYS AS ROW START COLUMNDEF10 COLUMNDEF11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF9",278, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // COLUMNDEF8 ::= COLUMNDEF9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF8",277, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // COLUMNDEF8 ::= NOT FOR REPLICATION COLUMNDEF9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF8",277, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // COLUMNDEF7 ::= COLUMNDEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF7",276, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // COLUMNDEF7 ::= IDENTITY PARENTESISIZQ ENTERODECIMAL COMA ENTERODECIMAL PARENTESISDER COLUMNDEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF7",276, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // COLUMNDEF6 ::= COLUMNDEF7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF6",275, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // COLUMNDEF6 ::= CONSTRAINT OBJECT DEFAULT E3 COLUMNDEF7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF6",275, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // COLUMNDEF5 ::= COLUMNDEF6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF5",274, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // COLUMNDEF5 ::= MASKED WITH PARENTESISIZQ FUNCTION IGUAL STRINGA PARENTESISDER COLUMNDEF6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF5",274, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // COLUMNDEF4 ::= COLUMNDEF5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF4",273, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // COLUMNDEF4 ::= SPARSE COLUMNDEF5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF4",273, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // COLUMNDEF3 ::= COLUMNDEF4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF3",272, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // COLUMNDEF3 ::= COLLATE IDENTIFICADOR COLUMNDEF4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF3",272, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // COLUMNDEF2 ::= COLUMNDEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF2",271, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // COLUMNDEF2 ::= FILESTREAM COLUMNDEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF2",271, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // DATA_TYPE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE4",301, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // DATA_TYPE4 ::= PARENTESISIZQ ENTERODECIMAL COMA ENTERODECIMAL PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE4",301, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // DATA_TYPE4 ::= PARENTESISIZQ ENTERODECIMAL PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE4",301, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // DATA_TYPE3 ::= NCHAR DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // DATA_TYPE3 ::= CHAR DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // DATA_TYPE3 ::= TIME DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // DATA_TYPE3 ::= SMALLINT DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // DATA_TYPE3 ::= NUMERIC DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // DATA_TYPE3 ::= DECIMAL DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // DATA_TYPE3 ::= REAL DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // DATA_TYPE3 ::= DATE DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // DATA_TYPE3 ::= VARCHAR DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // DATA_TYPE3 ::= FLOAT DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // DATA_TYPE3 ::= INTEGER DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // DATA_TYPE3 ::= INT DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // DATA_TYPE3 ::= BIT DATA_TYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // DATA_TYPE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE2",299, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // DATA_TYPE2 ::= PUNTO IDENTIFICADOR PARENTESISIZQ ENTERODECIMAL COMA ENTERODECIMAL PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE2",299, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // DATA_TYPE2 ::= PARENTESISIZQ ENTERODECIMAL COMA ENTERODECIMAL PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE2",299, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // DATA_TYPE2 ::= PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE2",299, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // DATA_TYPE2 ::= PARENTESISIZQ ENTERODECIMAL PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE2",299, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // DATA_TYPE2 ::= PUNTO IDENTIFICADOR PARENTESISIZQ ENTERODECIMAL PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE2",299, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // DATA_TYPE ::= DATA_TYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE",298, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // DATA_TYPE ::= IDENTIFICADOR DATA_TYPE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATA_TYPE",298, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // COLUMNDEF ::= DATA_TYPE COLUMNDEF2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLUMNDEF",270, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // TCONSTRAINT12 ::= CHECK PARENTESISIZQ E3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT12",307, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // TCONSTRAINT12 ::= CHECK NOT FOR REPLICATION PARENTESISIZQ E3 PARENTESISIZQ 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT12",307, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // TCONSTRAINT11 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT11",267, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // TCONSTRAINT11 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT11",267, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // TCONSTRAINT10 ::= TCONSTRAINT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT10",266, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // TCONSTRAINT10 ::= ON UPDATE OPCIONESC TCONSTRAINT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT10",266, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // TCONSTRAINT9 ::= TCONSTRAINT10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT9",265, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // TCONSTRAINT9 ::= ON DELETE OPCIONESC TCONSTRAINT10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT9",265, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // TCONSTRAINT8 ::= REFERENCES OBJECT TCONSTRAINT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT8",264, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // TCONSTRAINT8 ::= REFERENCES OBJECT PARENTESISIZQ COLUMNSLIST PARENTESISDER TCONSTRAINT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT8",264, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // TCONSTRAINT7 ::= FOREIGN KEY PARENTESISIZQ COLUMNSLIST PARENTESISDER TCONSTRAINT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT7",263, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // TCONSTRAINT6 ::= ONCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT6",262, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // TCONSTRAINT5 ::= TCONSTRAINT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT5",261, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // TCONSTRAINT5 ::= WITH FILLFACTOR IGUAL ENTERODECIMAL TCONSTRAINT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT5",261, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // TCONSTRAINT4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT4",260, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // TCONSTRAINT4 ::= COMA IDENTIFICADOR ASCDESC TCONSTRAINT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT4",260, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // TCONSTRAINT3 ::= PARENTESISIZQ IDENTIFICADOR ASCDESC TCONSTRAINT4 PARENTESISDER TCONSTRAINT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT3",259, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // TCONSTRAINT2 ::= TCONSTRAINT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT2",258, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // TCONSTRAINT2 ::= NONCLUSTERED TCONSTRAINT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT2",258, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // TCONSTRAINT2 ::= CLUSTERED TCONSTRAINT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT2",258, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // TCONSTRAINT1 ::= DEFAULT PARENTESISIZQ E3 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT1",257, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // TCONSTRAINT1 ::= CHECK TCONSTRAINT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT1",257, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // TCONSTRAINT1 ::= FOREIGN KEY TCONSTRAINT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT1",257, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // TCONSTRAINT1 ::= UNIQUE TCONSTRAINT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT1",257, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // TCONSTRAINT1 ::= PRIMARY KEY TCONSTRAINT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TCONSTRAINT1",257, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // TABLECONSTRAINT ::= TCONSTRAINT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLECONSTRAINT",256, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // TABLECONSTRAINT ::= CONSTRAINT OBJECT TCONSTRAINT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLECONSTRAINT",256, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // COMPUTEDDEF ::= AS E3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPUTEDDEF",268, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // COMPUTEDDEF ::= AS E3 PERSISTED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPUTEDDEF",268, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // COMPUTEDDEF ::= AS E3 PERSISTED NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPUTEDDEF",268, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // COMPUTEDDEF ::= AS E3 COLUMNCONSTRAINT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPUTEDDEF",268, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // COMPUTEDDEF ::= AS E3 PERSISTED COLUMNCONSTRAINT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPUTEDDEF",268, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // COMPUTEDDEF ::= AS E3 PERSISTED NOT NULL COLUMNCONSTRAINT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPUTEDDEF",268, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // TEXTIMAGECLAUSE ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTIMAGECLAUSE",251, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // TEXTIMAGECLAUSE ::= TEXTIMAGE_ON NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTIMAGECLAUSE",251, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // TEXTIMAGECLAUSE ::= TEXTIMAGE_ON PRIMARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTIMAGECLAUSE",251, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // TEXTIMAGECLAUSE ::= TEXTIMAGE_ON DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTIMAGECLAUSE",251, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // TEXTIMAGECLAUSE ::= TEXTIMAGE_ON STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTIMAGECLAUSE",251, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // TEXTIMAGECLAUSE ::= TEXTIMAGE_ON IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TEXTIMAGECLAUSE",251, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // CTABLE6 ::= COLUMNDEF CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE6",303, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // CTABLE6 ::= COMPUTEDDEF CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE6",303, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // CTABLE4 ::= IDENTIFICADOR COLUMNDEF CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE4",250, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // CTABLE4 ::= IDENTIFICADOR COMPUTEDDEF CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE4",250, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // CTABLE4 ::= TABLECONSTRAINT CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE4",250, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // CTABLE4 ::= TABLEINDEX CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE4",250, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // CTABLE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE3",249, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // CTABLE3 ::= COMA CTABLE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE3",249, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // CTABLE5 ::= COLUMNDEF CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE5",302, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // CTABLE5 ::= COMPUTEDDEF CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE5",302, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // CTABLE2 ::= TABLECONSTRAINT CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE2",248, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // CTABLE2 ::= TABLEINDEX CTABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE2",248, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // CTABLE2 ::= IDENTIFICADOR CTABLE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE2",248, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // CTABLE1 ::= OBJECT PARENTESISIZQ CTABLE2 PARENTESISDER ONCLAUSE TEXTIMAGECLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE1",247, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // CTABLE1 ::= OBJECT AS IDENTIFICADOR PARENTESISIZQ CTABLE2 PARENTESISDER ONCLAUSE TEXTIMAGECLAUSE FILESTREAMCLAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CTABLE1",247, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // SQLSTATEMENT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT3",328, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // SQLSTATEMENT3 ::= INSERT INSERT2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT3",328, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // SQLSTATEMENT3 ::= DELETE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT3",328, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // SQLSTATEMENT3 ::= SELECT20 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT3",328, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // SQLSTATEMENT3 ::= UPDATE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT3",328, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // SQLSTATEMENT2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT2",327, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // SQLSTATEMENT2 ::= INSERT INSERT2 FINAL SQLSTATEMENT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT2",327, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // SQLSTATEMENT2 ::= DELETE11 SQLSTATEMENT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT2",327, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // SQLSTATEMENT2 ::= SELECT20 SQLSTATEMENT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT2",327, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // SQLSTATEMENT2 ::= UPDATE11 SQLSTATEMENT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT2",327, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // SQLSTATEMENT ::= INSERT INSERT2 FINAL SQLSTATEMENT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT",326, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // SQLSTATEMENT ::= DELETE11 SQLSTATEMENT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT",326, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // SQLSTATEMENT ::= SELECT20 SQLSTATEMENT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT",326, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // SQLSTATEMENT ::= UPDATE11 SQLSTATEMENT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SQLSTATEMENT",326, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // PROCEDURE12 ::= AS SQLSTATEMENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE12",321, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // PROCEDURE12 ::= AS BEGIN SQLSTATEMENT END FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE12",321, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // PROCEDURE11 ::= PROCEDURE12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",320, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // PROCEDURE11 ::= FOR REPLICATION PROCEDURE12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",320, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // PROCEDURE10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",319, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // PROCEDURE10 ::= COMA ARROBA IDENTIFICADOR DATA_TYPE PROCEDURE6 PROCEDURE7 PROCEDURE8 PROCEDURE9 PROCEDURE10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",319, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // PROCEDURE9 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",318, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // PROCEDURE9 ::= READONLY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",318, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // PROCEDURE8 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",317, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // PROCEDURE8 ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",317, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // PROCEDURE8 ::= OUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",317, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // PROCEDURE7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",316, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // PROCEDURE7 ::= IGUAL DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",316, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // PROCEDURE6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",315, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // PROCEDURE6 ::= VARYING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",315, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // EXECUTECLAUSE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE3",347, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // EXECUTECLAUSE3 ::= COMA IDENTIFICADOR EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE3",347, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // EXECUTECLAUSE3 ::= COMA STRINGA EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE3",347, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // EXECUTECLAUSE3 ::= COMA OWNER EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE3",347, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // EXECUTECLAUSE3 ::= COMA SELF EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE3",347, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // EXECUTECLAUSE3 ::= COMA CALLER EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE3",347, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // EXECUTECLAUSE2 ::= IDENTIFICADOR EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE2",325, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // EXECUTECLAUSE2 ::= STRINGA EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE2",325, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // EXECUTECLAUSE2 ::= OWNER EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE2",325, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // EXECUTECLAUSE2 ::= SELF EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE2",325, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // EXECUTECLAUSE2 ::= CALLER EXECUTECLAUSE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE2",325, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // EXECUTECLAUSE ::= EXECUTE AS EXECUTECLAUSE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE",324, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // EXECUTECLAUSE ::= EXEC AS EXECUTECLAUSE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTECLAUSE",324, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // PROCEDURE14 ::= PROCEDURE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE14",323, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // PROCEDURE14 ::= WITH EXECUTECLAUSE PROCEDURE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE14",323, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // PROCEDURE14 ::= WITH RECOMPILE PROCEDURE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE14",323, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // PROCEDURE14 ::= WITH ENCRYPTION PROCEDURE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE14",323, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // PROCEDURE5 ::= PROCEDURE14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",314, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // PROCEDURE5 ::= ARROBA IDENTIFICADOR DATA_TYPE PROCEDURE6 PROCEDURE7 PROCEDURE8 PROCEDURE9 PROCEDURE10 PROCEDURE14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",314, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // PROCEDURE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE4",313, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // PROCEDURE4 ::= PUNTOCOMA ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE4",313, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // PROCEDURE3 ::= PROCEDURE OBJECT PROCEDURE4 PROCEDURE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",312, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // PROCEDURE3 ::= PROC OBJECT PROCEDURE4 PROCEDURE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",312, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // PROCEDURE2 ::= PROCEDURE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",311, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // PROCEDURE2 ::= OR ALTER PROCEDURE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",311, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // FUNCTION10 ::= AS1 RETURN SELECT20 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION10",377, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // FUNCTION10 ::= AS1 RETURN PARENTESISIZQ SELECT20 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION10",377, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // FUNCTION9 ::= AS1 BEGIN SQLSTATEMENT RETURN SCALAREXP END FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION9",376, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // FUNCTION8 ::= RETURNS TABLE FUNCTION10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION8",375, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // FUNCTION8 ::= RETURNS DATA_TYPE FUNCTION9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION8",375, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // FUNCTION7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION7",374, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // FUNCTION7 ::= COMA ARROBA IDENTIFICADOR AS1 DATA_TYPE FUNCTION5 FUNCTION6 FUNCTION7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION7",374, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // FUNCTION6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION6",373, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // FUNCTION6 ::= READONLY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION6",373, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // FUNCTION5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION5",372, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // FUNCTION5 ::= IGUAL DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION5",372, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // FUNCTION4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION4",371, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // FUNCTION4 ::= ARROBA IDENTIFICADOR AS1 DATA_TYPE FUNCTION5 FUNCTION6 FUNCTION7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION4",371, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // FUNCTION3 ::= FUNCTION OBJECT PARENTESISIZQ FUNCTION4 PARENTESISDER FUNCTION8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION3",370, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // AS1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AS1",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // AS1 ::= AS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AS1",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // FUNCTION2 ::= FUNCTION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION2",369, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // FUNCTION2 ::= OR ALTER FUNCTION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION2",369, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // CREATE1 ::= FUNCTION2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // CREATE1 ::= FUNCTION2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // CREATE1 ::= PROCEDURE2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // CREATE1 ::= PROCEDURE2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // CREATE1 ::= TABLE CTABLE1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // CREATE1 ::= TABLE CTABLE1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // CREATE1 ::= CINDEX1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // CREATE1 ::= CINDEX1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // CREATE1 ::= VIEW OBJECT CVIEW1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // CREATE1 ::= VIEW OBJECT CVIEW1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // CREATE1 ::= USER IDENTIFICADOR CUSER1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // CREATE1 ::= USER IDENTIFICADOR CUSER1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // CREATE1 ::= DATABASE IDENTIFICADOR CDATABASE1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // CREATE1 ::= DATABASE IDENTIFICADOR CDATABASE1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CREATE1",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // FILE_AND_FILEGROUP3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP3",236, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // FILE_AND_FILEGROUP3 ::= TO FILEGROUP IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP3",236, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // FILE_AND_FILEGROUP3 ::= TO FILEGROUP STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP3",236, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // FILE_AND_FILEGROUP2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP2",235, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // FILE_AND_FILEGROUP2 ::= COMA FILESPEC FILE_AND_FILEGROUP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP2",235, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // FILE_AND_FILEGROUP ::= MODIFY FILE FILESPEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP",234, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // FILE_AND_FILEGROUP ::= REMOVE FILE STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP",234, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // FILE_AND_FILEGROUP ::= REMOVE FILE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP",234, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // FILE_AND_FILEGROUP ::= ADD LOG FILE FILESPEC FILEGROUP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP",234, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // FILE_AND_FILEGROUP ::= ADD FILE FILESPEC FILE_AND_FILEGROUP2 FILE_AND_FILEGROUP3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FILE_AND_FILEGROUP",234, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // ALTERD2 ::= FILE_AND_FILEGROUP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERD2",233, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // ALTERD2 ::= COLLATE STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERD2",233, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // ALTERD2 ::= COLLATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERD2",233, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // ALTERD2 ::= MODIFY NAME IGUAL IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERD2",233, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // ALTERD1 ::= CURRENT ALTERD2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERD1",232, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // ALTERD1 ::= OBJECT ALTERD2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERD1",232, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // PASS1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PASS1",240, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // PASS1 ::= OLD_PASSWORD IGUAL STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PASS1",240, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // SET_ITEM2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM2",239, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // SET_ITEM2 ::= COMA SET_ITEM SET_ITEM2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM2",239, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // SET_ITEM ::= ALLOW_ENCRYPTED_VALUE_MODIFICATIONS IGUAL OFF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // SET_ITEM ::= ALLOW_ENCRYPTED_VALUE_MODIFICATIONS IGUAL ON 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // SET_ITEM ::= DEFAULT_LANGUAGE IGUAL IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // SET_ITEM ::= DEFAULT_LANGUAGE IGUAL NONE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // SET_ITEM ::= PASSWORD IGUAL STRINGA PASS1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // SET_ITEM ::= LOGIN IGUAL IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // SET_ITEM ::= DEFAULT_SCHEMA IGUAL NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // SET_ITEM ::= DEFAULT_SCHEMA IGUAL IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // SET_ITEM ::= NAME IGUAL IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_ITEM",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // ALTERU1 ::= WITH SET_ITEM SET_ITEM2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERU1",237, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // SET_INDEX_OPTION2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION2",246, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // SET_INDEX_OPTION2 ::= COMA SET_INDEX_OPTION SET_INDEX_OPTION2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION2",246, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // SET_INDEX_OPTION ::= STATISTICS_NORECOMPUTE IGUAL OFF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // SET_INDEX_OPTION ::= STATISTICS_NORECOMPUTE IGUAL ON 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // SET_INDEX_OPTION ::= IGNORE_DUP_KEY IGUAL OFF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // SET_INDEX_OPTION ::= IGNORE_DUP_KEY IGUAL ON 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // SET_INDEX_OPTION ::= OPTIMIZE_FOR_SEQUENTIAL_KEY IGUAL OFF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // SET_INDEX_OPTION ::= OPTIMIZE_FOR_SEQUENTIAL_KEY IGUAL ON 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // SET_INDEX_OPTION ::= ALLOW_PAGE_LOCKS IGUAL OFF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // SET_INDEX_OPTION ::= ALLOW_PAGE_LOCKS IGUAL ON 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // SET_INDEX_OPTION ::= ALLOW_ROW_LOCKS IGUAL OFF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // SET_INDEX_OPTION ::= ALLOW_ROW_LOCKS IGUAL ON 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SET_INDEX_OPTION",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // PARTITION1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PARTITION1",244, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // PARTITION1 ::= PARTITION IGUAL DOUBLENUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PARTITION1",244, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // PARTITION1 ::= PARTITION IGUAL ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PARTITION1",244, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // PARTITION1 ::= PARTITION IGUAL ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PARTITION1",244, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // ALTERI3 ::= ABORT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI3",243, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ALTERI3 ::= PAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI3",243, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // ALTERI3 ::= RESUME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI3",243, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // ALTERI3 ::= SET PARENTESISIZQ SET_INDEX_OPTION SET_INDEX_OPTION2 PARENTESISDER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI3",243, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // ALTERI3 ::= REORGANIZE PARTITION1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI3",243, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // ALTERI3 ::= DISABLE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI3",243, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // ALTERI3 ::= REBUILD PARTITION1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI3",243, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // ALTERI2 ::= ON OBJECT ALTERI3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI2",242, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // ALTERI1 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI1",241, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // ALTERI1 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERI1",241, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // ALTERT14 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT14",398, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // ALTERT14 ::= COMA IDENTIFICADOR ALTERT14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT14",398, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // ALTERT13 ::= CONSTRAINT ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT13",397, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // ALTERT13 ::= NOCHECK CONSTRAINT ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT13",397, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // ALTERT13 ::= CHECK CONSTRAINT ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT13",397, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // ALTERT13 ::= CONSTRAINT IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT13",397, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // ALTERT13 ::= NOCHECK CONSTRAINT IDENTIFICADOR ALTERT14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT13",397, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // ALTERT13 ::= CHECK CONSTRAINT IDENTIFICADOR ALTERT14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT13",397, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // ALTERT12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT12",396, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // ALTERT12 ::= COMA ALTERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT12",396, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // ALTERT10 ::= IDENTIFICADOR ALTERT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT10",394, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // ALTERT11 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT11",395, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // ALTERT11 ::= COMA DROP ALTERT8 ALTERT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT11",395, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // ALTERT11 ::= COMA ADD CTABLE4 ALTERT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT11",395, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // ALTERT11 ::= COMA ALTER COLUMN OBJECT ALTERT20 ALTERT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT11",395, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // ALTERT11 ::= COMA ALTERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT11",395, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // ALTERT11 ::= COMA IDENTIFICADOR ALTERT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT11",395, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // ALTERT9 ::= IDENTIFICADOR ALTERT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT9",393, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // ALTERT8 ::= ALTERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT8",392, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // ALTERT8 ::= COLUMN ALTERT10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT8",392, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // ALTERT8 ::= COLUMN IF EXISTS ALTERT10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT8",392, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // ALTERT8 ::= IF EXISTS ALTERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT8",392, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // ALTERT8 ::= CONSTRAINT ALTERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT8",392, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // ALTERT8 ::= CONSTRAINT IF EXISTS ALTERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT8",392, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // ALTERT7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT7",391, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // ALTERT7 ::= COMA ALTERT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT7",391, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // ALTERT6 ::= TABLECONSTRAINT ALTERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT6",390, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // ALTERT6 ::= IDENTIFICADOR COMPUTEDDEF ALTERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT6",390, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // ALTERT6 ::= IDENTIFICADOR COLUMNDEF ALTERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT6",390, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // ALTERT5 ::= MASKED WITH FUNCTION IGUAL STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT5",389, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // ALTERT5 ::= MASKED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT5",389, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // ALTERT5 ::= HIDDEN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT5",389, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // ALTERT5 ::= SPARSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT5",389, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // ALTERT5 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT5",389, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // ALTERT5 ::= PERSISTED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT5",389, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // ALTERT5 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT5",389, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // ALTERT4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT4",388, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // ALTERT4 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT4",388, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ALTERT4 ::= NOT NULL SPARSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT4",388, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // ALTERT4 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT4",388, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // ALTERT4 ::= NULL SPARSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT4",388, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // ALTERT3 ::= ALTERT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT3",387, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // ALTERT3 ::= COLLATE IDENTIFICADOR ALTERT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT3",387, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // ALTERT15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT15",385, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // ALTERT15 ::= COMA DROP ALTERT8 ALTERT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT15",385, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // ALTERT15 ::= COMA ADD CTABLE4 ALTERT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT15",385, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // ALTERT15 ::= COMA ALTER COLUMN OBJECT DATA_TYPE ALTERT3 ALTERT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT15",385, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ALTERT20 ::= DROP ALTERT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT20",399, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // ALTERT20 ::= ADD ALTERT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT20",399, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // ALTERT20 ::= DATA_TYPE ALTERT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT20",399, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // ALTERT2 ::= SET FILESTREAMCLAUSE ALTERT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT2",386, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ALTERT2 ::= DROP ALTERT8 ALTERT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT2",386, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // ALTERT2 ::= ADD CTABLE4 ALTERT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT2",386, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ALTERT2 ::= ALTER COLUMN OBJECT ALTERT20 ALTERT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTERT2",386, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ALTER1 ::= TABLE OBJECT ALTERT2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ALTER1 ::= TABLE OBJECT ALTERT2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ALTER1 ::= PROCEDURE3 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ALTER1 ::= PROCEDURE3 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ALTER1 ::= FUNCTION3 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ALTER1 ::= FUNCTION3 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ALTER1 ::= INDEX ALTERI1 ALTERI2 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ALTER1 ::= INDEX ALTERI1 ALTERI2 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ALTER1 ::= USER OBJECT ALTERU1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ALTER1 ::= USER OBJECT ALTERU1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // ALTER1 ::= VIEW OBJECT CVIEW1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ALTER1 ::= VIEW OBJECT CVIEW1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ALTER1 ::= DATABASE ALTERD1 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ALTER1 ::= DATABASE ALTERD1 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // PALABRASCURSOR5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR5",367, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // PALABRASCURSOR5 ::= TYPE_WARNING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR5",367, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // PALABRASCURSOR4 ::= PALABRASCURSOR5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR4",366, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // PALABRASCURSOR4 ::= OPTIMISTIC PALABRASCURSOR5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR4",366, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // PALABRASCURSOR4 ::= SCROLL_LOCKS PALABRASCURSOR5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR4",366, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // PALABRASCURSOR4 ::= READ_ONLY PALABRASCURSOR5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR4",366, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // PALABRASCURSOR3 ::= PALABRASCURSOR4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR3",365, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // PALABRASCURSOR3 ::= FAST_FORWARD PALABRASCURSOR4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR3",365, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // PALABRASCURSOR3 ::= DYNAMIC PALABRASCURSOR4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR3",365, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // PALABRASCURSOR3 ::= KEYSET PALABRASCURSOR4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR3",365, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // PALABRASCURSOR3 ::= STATIC PALABRASCURSOR4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR3",365, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // PALABRASCURSOR2 ::= PALABRASCURSOR3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR2",364, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // PALABRASCURSOR2 ::= SCROLL PALABRASCURSOR3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR2",364, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // PALABRASCURSOR2 ::= FORWARD_ONLY PALABRASCURSOR3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR2",364, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // PALABRASCURSOR ::= PALABRASCURSOR2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR",363, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // PALABRASCURSOR ::= GLOBAL PALABRASCURSOR2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR",363, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // PALABRASCURSOR ::= LOCAL PALABRASCURSOR2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PALABRASCURSOR",363, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CURSOR7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR7",354, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // CURSOR7 ::= COMA IDENTIFICADOR CURSOR7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR7",354, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // CURSOR6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR6",353, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // CURSOR6 ::= FOR UPDATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR6",353, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // CURSOR6 ::= FOR UPDATE OF IDENTIFICADOR CURSOR7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR6",353, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CURSOR13 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR13",360, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CURSOR13 ::= CLOSE OBJECT DEALLOCATE OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR13",360, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CURSOR12 ::= SQLSTATEMENT CURSOR13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR12",359, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // CURSOR12 ::= BEGIN SQLSTATEMENT END CURSOR13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR12",359, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // CURSOR11 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR11",358, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // CURSOR11 ::= WHILE E3 SQLSTATEMENT CURSOR13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR11",358, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // CURSOR11 ::= WHILE ARROBA ARROBA FETCH_STATUS IGUAL ENTERODECIMAL CURSOR12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR11",358, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // DECLARE4 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE4",401, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // DECLARE4 ::= STRINGA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE4",401, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // DECLARE4 ::= DOUBLENUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE4",401, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // DECLARE4 ::= ENTERODECIMAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE4",401, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // DECLARE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE3",362, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // DECLARE3 ::= COMA ARROBA IDENTIFICADOR CURSOR DECLARE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE3",362, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // DECLARE3 ::= COMA ARROBA IDENTIFICADOR AS1 DATA_TYPE DECLARE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE3",362, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // DECLARE3 ::= COMA ARROBA IDENTIFICADOR AS1 DATA_TYPE IGUAL DECLARE4 DECLARE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE3",362, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // DECLARE1 ::= ARROBA IDENTIFICADOR CURSOR DECLARE3 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE1",400, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // DECLARE1 ::= ARROBA IDENTIFICADOR CURSOR DECLARE3 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE1",400, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // DECLARE1 ::= ARROBA IDENTIFICADOR AS1 DATA_TYPE DECLARE3 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE1",400, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // DECLARE1 ::= ARROBA IDENTIFICADOR AS1 DATA_TYPE DECLARE3 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE1",400, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // DECLARE1 ::= ARROBA IDENTIFICADOR AS1 DATA_TYPE IGUAL DECLARE4 DECLARE3 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE1",400, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // DECLARE1 ::= ARROBA IDENTIFICADOR AS1 DATA_TYPE IGUAL DECLARE4 DECLARE3 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DECLARE1",400, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CURSOR10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR10",357, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CURSOR10 ::= COMA ARROBA IDENTIFICADOR CURSOR10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR10",357, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CURSOR9 ::= ARROBA IDENTIFICADOR CURSOR10 CURSOR11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR9",356, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CURSOR8 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR8",355, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CURSOR8 ::= INTO CURSOR9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR8",355, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CURSOR5 ::= FETCH NEXT FROM OBJECT CURSOR8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR5",352, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CURSOR4 ::= CURSOR6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR4",351, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CURSOR4 ::= OPEN OBJECT CURSOR5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR4",351, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CURSOR3 ::= FOR SELECT20 CURSOR4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR3",350, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CURSOR2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR2",349, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CURSOR2 ::= SCROLL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR2",349, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CURSOR2 ::= INSENSITIVE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR2",349, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CURSOR1 ::= OBJECT CURSOR2 CURSOR PALABRASCURSOR CURSOR3 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR1",348, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CURSOR1 ::= OBJECT CURSOR2 CURSOR PALABRASCURSOR CURSOR3 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CURSOR1",348, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // EXECUTE20 ::= EXECUTE2 EXECUTE3 FINAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE20",384, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // EXECUTE20 ::= EXECUTE2 EXECUTE3 FINAL INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXECUTE20",384, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // INICIO ::= error 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // INICIO ::= error INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // INICIO ::= EXECUTE20 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // INICIO ::= DECLARE DECLARE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // INICIO ::= DECLARE CURSOR1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // INICIO ::= CREATE CREATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // INICIO ::= SELECT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // INICIO ::= DELETE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // INICIO ::= UPDATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INICIO ::= ALTER ALTER1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INICIO ::= INSERT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INICIO ::= BEGIN1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INICIO ::= SAVE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIO ::= ROLLBACK1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= COMMIT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= DROP DROP1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // INICIO ::= TRUNCATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

