

package analizador;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class minisql extends javax.swing.JFrame {

    /** Creates new form interfaz */
    List<identificador> tokenslist;
    File ArchivoSelec;
    String nombre;
    File ArchivoSelec2;
    String nombre2;
    String errores;
    
    public minisql() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("Analizador LÃ©xico");

        jButton2.setText("Buscar Archivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Buscar .Flex");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Generar Lexer");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jButton3)
                        .addGap(13, 13, 13)
                        .addComponent(jButton4)
                        .addGap(28, 28, 28)
                        .addComponent(jButton2)
                        .addGap(23, 23, 23)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton1))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
             probarLexerFile();
        }
        catch (IOException ex){
            System.out.println(ex.getMessage());
        }
        tablaResultado();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       JFileChooser file2 = new JFileChooser();
       file2.showOpenDialog(this);
       File abre = file2.getSelectedFile();
       if(abre != null)
       {
           ArchivoSelec = abre;
           nombre = abre.getName();
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String path = "C:\\Users\\jadel\\Desktop\\Compiladores2-8e713f3561940b32d774e4ef39bb211e5a779c36\\src\\analizador\\Lexer.flex";
        File file=new File(path);
        JFlex.Main.generate(ArchivoSelec2);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       JFileChooser file3 = new JFileChooser();
       file3.showOpenDialog(this);
       File abre2 = file3.getSelectedFile();
       if(abre2 != null)
       {
           ArchivoSelec2 = abre2;
           nombre2 = abre2.getName();
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new minisql().setVisible(true);
            }
        });
    }
    public void probarLexerFile() throws IOException{
        int ContadorLineas = 1;
        int ContadorCaracteres = 0;
        int ContadorCaracterInicio = 0;
        int caract;
        int contIDs=0;
        tokenslist = new LinkedList<identificador>();
//        File fichero = new File ("fichero.txt");
//        PrintWriter writer;
//        try {
//            writer = new PrintWriter(fichero);
//            writer.print(jTextField1.getText());
//            writer.close();
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(interfaz.class.getName()).log(Level.SEVERE, null, ex);
//        }
        Reader reader = new BufferedReader(new FileReader(ArchivoSelec));
        Lexer lexer = new Lexer (reader);
        String resultado="";
        while (true){
            Token token =lexer.yylex();
            if (token == null){
                for(int i=0;i<tokenslist.size();i++){
                    System.out.println(tokenslist.get(i).nombre + "=" + tokenslist.get(i).ID);
                }
                Imprimir(resultado);
                return;
            }
        
            
            switch (token){
                case T_WHITE:
                    ContadorCaracterInicio = lexer.lexeme.length() + ContadorCaracterInicio; 
                    break;
                case T_ENTER:
                    ContadorLineas++;
                    ContadorCaracteres = 0;
                    ContadorCaracterInicio = 0;
                    break;
                case T_ADD:
                    
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado= resultado+ lexer.lexeme + "      Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ADD\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ALL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ALL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ALTER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ALTER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;           
                case T_AND:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado=resultado + lexer.lexeme + "      Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_AND\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ANY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ANY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_AS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_AS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ASC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ASC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                
                case T_AUTHORIZATION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_AUTHORIZATION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BACKUP:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_BACKUP\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BEGIN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_BEGIN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BETWEEN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_BETWEEN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BREAK:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_BREAK\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BROWSE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado=resultado + lexer.lexeme + "      Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_BROWSE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BULK:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_BULK\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_BY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CASCADE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CASCADE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CASE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CASE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CHECK:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CHECK\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CHECKPOINT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CHECKPOINT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CLOSE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CLOSE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CLUSTERED:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CLUSTERED\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_COALESCE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_COALESCE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_COLLATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_COLLATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_COLUMN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_COLUMN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_COMMIT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_COMMIT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_COMPUTE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_COMPUTE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CONSTRAINT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CONSTRAINT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CONTAINS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CONTAINS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CONTAINSTABLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CONTAINSTABLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CONTINUE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CONTINUE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CONVERT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CONVERT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CREATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CREATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CROSS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CROSS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CURRENT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CURRENT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CURRENT_DATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CURRENT_DATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CURRENT_TIME:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CURRENT_TIME\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CURRENT_TIMESTAMP:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CURRENT_TIMESTAMP\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CURRENT_USER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CURRENT_USER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CURSOR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CURSOR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DATABASE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DATABASE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DBCC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DBCC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DEALLOCATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DEALLOCATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DECLARE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DECLARE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DEFAULT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DEFAULT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DELETE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DELETE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DENY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DENY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DESC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DESC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DISK:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DISK\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DISTINCT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DISTINCT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DISTRIBUTED:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DISTRIBUTED\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DOUBLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DOUBLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DROP:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DROP\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DUMP:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_DUMP\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ELSE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ELSE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_END:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_END\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ERRLVL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ERRLVL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ESCAPE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ESCAPE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_EXCEPT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_EXCEPT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_EXEC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_EXEC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_EXECUTE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_EXECUTE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_EXISTS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_EXISTS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_EXIT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_EXIT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_EXTERNAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_EXTERNAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FETCH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FETCH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FILE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FILE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FILLFACTOR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FILLFACTOR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FOR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FOR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FOREIGN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FOREIGN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FREETEXT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FREETEXT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FREETEXTTABLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FREETEXTTABLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FROM:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FROM\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FULL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FULL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FUNCTION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_FUNCTION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_GOTO:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_GOTO\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_GRANT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_GRANT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_GROUP:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_GROUP\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_HAVING:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_HAVING\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_HOLDLOCK:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_HOLDLOCK\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_IDENTITY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_IDENTITY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_IDENTITY_INSERT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_IDENTITY_INSERT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_IDENTITYCOL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_IDENTITYCOL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_IF:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_IF\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_IN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_IN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INDEX:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_INDEX\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INNER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_INNER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INSERT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_INSERT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INTERSECT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_INTERSECT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INTO:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_INTO\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_IS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_IS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_JOIN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_JOIN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_KEY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_KEY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_KILL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_KILL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LEFT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_LEFT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LIKE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_LIKE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LINENO:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_LINENO\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LOAD:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_LOAD\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_MERGE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_MERGE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NATIONAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_NATIONAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NOCHECK:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_NOCHECK\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NONCLUSTERED:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_NONCLUSTERED\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NOT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_NOT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NULL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_NULL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NULLIF:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_NULLIF\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OF:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OF\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OFF:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OFF\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OFFSETS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OFFSETS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ON:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ON\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPEN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OPEN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPENDATASOURCE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OPENDATASOURCE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPENQUERY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OPENQUERY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPENROWSET:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OPENROWSET\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPENXML:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OPENXML\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPTION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OPTION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ORDER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ORDER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OUTER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OUTER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OVER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_OVER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PERCENT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PERCENT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PIVOT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PIVOT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PLAN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PLAN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PRECISION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PRECISION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PRIMARY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PRIMARY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PRINT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PRINT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PROC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PROC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PROCEDURE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PROCEDURE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PUBLIC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_PUBLIC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_RAISERROR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_RAISERROR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_READ:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_READ\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_READTEXT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_READTEXT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_RECONFIGURE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_RECONFIGURE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_REFERENCES:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_REFERENCES\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_REPLICATION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_REPLICATION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_RESTORE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_RESTORE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_RESTRICT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_RESTRICT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_RETURN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_RETURN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_REVERT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_REVERT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_REVOKE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_REVOKE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_RIGHT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_RIGHT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ROLLBACK:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ROLLBACK\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ROWCOUNT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ROWCOUNT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ROWGUIDCOL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ROWGUIDCOL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_RULE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_RULE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SAVE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SAVE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SCHEMA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SCHEMA\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SECURITYAUDIT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SECURITYAUDIT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SELECT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SELECT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SEMANTICKEYPHRASETABLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SEMANTICKEYPHRASETABLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SEMANTICSIMILARITYDETAILSTABLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SEMANTICSIMILARITYDETAILSTABLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SEMANTICSIMILARITYTABLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SEMANTICSIMILARITYTABLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SESSION_USER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SESSION_USER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SET:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SET\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SETUSER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SETUSER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SHUTDOWN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SHUTDOWN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SOME:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SOME\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_STATISTICS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_STATISTICS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SYSTEM_USER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_SYSTEM_USER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TABLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TABLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TABLESAMPLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TABLESAMPLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TEXTSIZE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TEXTSIZE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_THEN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_THEN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TO:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TO\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TOP:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TOP\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRAN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TRAN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRANSACTION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TRANSACTION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRIGGER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TRIGGER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRUNCATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TRUNCATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRY_CONVERT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TRY_CONVERT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TSEQUAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_TSEQUAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_UNION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_UNION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_UNIQUE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_UNIQUE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_UNPIVOT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_UNPIVOT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_UPDATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_UPDATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_UPDATETEXT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_UPDATETEXT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_USE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_USE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_USER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_USER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_VALUES:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_VALUES\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_VARYING:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_VARYING\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_VIEW:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_VIEW\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_WAITFOR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_WAITFOR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_WHEN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_WHEN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_WHERE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_WHERE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;    
                case T_WHILE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_WHILE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;    
                case T_WITH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_WITH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;        
                case T_WITHIN_GROUP:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_WITHIN_GROUP\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;      
                case T_WRITETEXT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_WRITETEXT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                    
                //Aqui empiezan las de odbc
                    
                case T_ABSOLUTE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ABSOLUTE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ACTION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ACTION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ADA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ADA\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ALLOCATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ALLOCATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ARE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ARE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ASSERTION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ASSERTION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_AT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_AT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_AVG:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_AVG\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BIT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_BIT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BIT_LENGTH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_BIT_LENGTH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_BOTH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_BOTH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CASCADED:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CASCADED\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CAST:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CAST\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CATALOG:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CATALOG\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CHAR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CHAR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CHAR_LENGTH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CHAR_LENGTH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CHARACTER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CHARACTER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CHARACTER_LENGTH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CHARACTER_LENGTH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_COLLATION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_COLLATION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CONNECT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CONNECT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CONNECTION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CONNECTION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CONSTRAINTS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CONSTRAINTS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_CORRESPONDING:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_CORRESPONDING\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_COUNT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_COUNT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DAY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DAY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DEC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DEC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DECIMAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DECIMAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DEFERRABLE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DEFERRABLE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DEFERRED:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DEFERRED\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DESCRIBE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DESCRIBE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DESCRIPTOR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DESCRIPTOR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DIAGNOSTICS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DIAGNOSTICS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DISCONNECT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DISCONNECT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DOMAIN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_DOMAIN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_END_EXEC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_END_EXEC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_EXCEPTION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_EXCEPTION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_EXTRACT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_EXTRACT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FALSE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_FALSE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FIRST:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_FIRST\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FLOAT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_FLOAT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FORTRAN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_FORTRAN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_FOUND:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_FOUND\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_GET:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_GET\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_GLOBAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_GLOBAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_GO:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_GO\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_HOUR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_HOUR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_IMMEDIATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_IMMEDIATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INCLUDE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_INCLUDE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INDICATOR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_INDICATOR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INITIALLY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_INITIALLY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INPUT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_INPUT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INSENSITIVE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_INSENSITIVE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_INT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INTEGER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_INTEGER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_INTERVAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_INTERVAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ISOLATION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ISOLATION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LANGUAGE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_LANGUAGE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LAST:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_LAST\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LEADING:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_LEADING\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LEVEL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_LEVEL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LOCAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_LOCAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_LOWER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_LOWER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_MATCH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_MATCH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_MAX:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_MAX\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_MIN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_MIN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_MINUTE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_MINUTE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_MODULE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_MODULE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_MONTH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_MONTH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NAMES:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_NAMES\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NATURAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_NATURAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NCHAR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_NCHAR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NEXT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_NEXT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NO:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_NO\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NONE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_NONE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_NUMERIC:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_NUMERIC\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OCTET_LENGTH:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_OCTET_LENGTH\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ONLY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ONLY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OUTPUT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_OUTPUT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OVERLAPS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_OVERLAPS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PAD:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_PAD\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PARTIAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_PARTIAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PASCAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_PASCAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_POSITION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_POSITION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PREPARE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_PREPARE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PRESERVE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_PRESERVE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PRIOR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_PRIOR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_PRIVILEGES:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_PRIVILEGES\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_REAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_REAL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_RELATIVE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_RELATIVE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ROWS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ROWS\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SCROLL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SCROLL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SECOND:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SECOND\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SECTION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SECTION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SESSION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SESSION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SIZE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SIZE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SMALLINT:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SMALLINT\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SPACE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SPACE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SQL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SQL\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SQLCA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SQLCA\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SQLCODE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SQLCODE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SQLERROR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SQLERROR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SQLSTATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SQLSTATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SQLWARNING:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SQLWARNING\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SUBSTRING:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SUBSTRING\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_SUM:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_SUM\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TEMPORARY:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TEMPORARY\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TIME:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TIME\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TIMESTAMP:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TIMESTAMP\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TIMEZONE_HOUR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TIMEZONE_HOUR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TIMEZONE_MINUTE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TIMEZONE_MINUTE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRAILING:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TRAILING\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRANSLATE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TRANSLATE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRANSLATION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TRANSLATION\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRIM:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TRIM\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_TRUE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_TRUE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_UNKNOWN:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_UNKNOWN\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_UPPER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_UPPER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_USAGE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_USAGE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_USING:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_USING\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_VALUE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_VALUE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_VARCHAR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_VARCHAR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_WHENEVER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_WHENEVER\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_WORK:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_WORK\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_WRITE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_WRITE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_YEAR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_YEAR\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_ZONE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ZONE\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                    
              
                case T_COMENTARIOS:
                    //resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_COMENTARIOS\r\n";
                    break;
                case T_COMENTARIOS2:
                    int ContEnt = 0;
                    //resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_COMENTARIOS\r\n";
                    int car = lexer.lexeme.length();
                    for (int i = 0; i < car; i++) 
                    {
                        if(lexer.lexeme.charAt(i) == '\n')
                        {
                            ContEnt++;
                        }
                        
                    }
                    ContadorLineas = ContadorLineas + ContEnt;
                    
                    break;
                case T_ERRORCOMENTARIOS:
                    resultado= resultado + "***Error*** Linea: " + ContadorLineas + " Columna: " +ContadorCaracterInicio + "-" + ContadorCaracteres + " no esta cerrado el comentario" + "\r\n";
                    Imprimir(resultado);
                    errores = errores + "***Error*** Linea: " + ContadorLineas + " Columna: " +ContadorCaracterInicio + "-" + ContadorCaracteres + " no esta cerrado el comentario" + "\r\n";
                    return;
                case T_STRINGA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres + " T_STRINGA (valor = " + lexer.lexeme + " )\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                 case T_ENTEROHEX:
                     ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ENTEROHEX (valor = " + lexer.lexeme + " )\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;

                    break;
                case T_ENTERODECIMAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " T_ENTERODECIMAL (valor = " + lexer.lexeme + " )\r\n" ;
                    ContadorCaracterInicio = ContadorCaracteres ;

                    break;
                case T_CONSTBOOL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_CONSTBOOL (valor = " + lexer.lexeme + " )\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPSUMA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'+\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPRESTA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " \'-\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPMULTI:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'*\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPDIV:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'/\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPPORCENTAJE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " \'%\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPMENORQUE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres + " \'<\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPMENORIGUAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " \'<=\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPMAYORQUE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " \'>\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPMAYORIGUAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " \'>=\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_IGUAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'=\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPDOBLEIGUAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'==\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPDIFERENTE:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'!=\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPAND:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " \'&&\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPOR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado =resultado + lexer.lexeme + "         Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " \'||\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPADMIRACION:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'!\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPPUNTOCOMA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " ';'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPCOMA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \',\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPPUNTO:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'.\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPBRACKETIZQ:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'[\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPBRACKETDER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \']\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPPARENTESISIZQ:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'(\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPPARENTESISDER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \')\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPCORCHETEIZQ:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +  " \'{\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPCORCHETEDER:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'}\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPBRACKETS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                        resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " + ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'[]\'\r\n";
                        ContadorCaracterInicio = ContadorCaracteres ;
                        break;
                case T_OPPARENTESIS:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'()\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_OPCORCHETES:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'{}\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                 case T_NUMERAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'#\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                 case T_DOBLENUMERAL:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'##\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                 case T_ARROBA:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " \'@\'\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case T_DOUBLENUM:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +   " T_DOUBLENUM (valor = " + lexer.lexeme + " )\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    break;
                case ERROR:
                    ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                    ContadorCaracterInicio++;
                    resultado= resultado + "***Error*** Linea: " + ContadorLineas + " Columna: " +ContadorCaracterInicio + "-" + ContadorCaracteres + " simbolo no reconocido: " + lexer.lexeme + "\r\n";
                    ContadorCaracterInicio = ContadorCaracteres ;
                    errores = errores + "***Error*** Linea: " + ContadorLineas + " Columna: " +ContadorCaracterInicio + "-" + ContadorCaracteres + " simbolo no reconocido: " + lexer.lexeme + "\r\n";
                    break;
                case T_IDENTIFICADOR: {
                    String cadenafinal = lexer.lexeme;
                    contIDs++;
                    identificador tokenitem=new identificador();
                    tokenitem.nombre=lexer.lexeme;
                    tokenitem.ID=contIDs;
                    tokenslist.add(tokenitem);
                    //resultado=ContadorLineas + " " + resultado+ "<ID" + contIDs + "> ";
                    int contcaracteres = lexer.lexeme.length();
                    if (contcaracteres > 31)
                    {
                        ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                        ContadorCaracterInicio++;
                        cadenafinal = lexer.lexeme.substring(0, 31);
                        resultado = resultado + cadenafinal + "         Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ID " + "\r\n" + "***Identificador Truncado*** Linea: " + ContadorLineas + " Columna: " +ContadorCaracterInicio + "-" + ContadorCaracteres + "\r\n";
                        ContadorCaracterInicio = ContadorCaracteres ;
                        errores = errores + "***Identificador Truncado*** Linea: " + ContadorLineas + " Columna: " +ContadorCaracterInicio + "-" + ContadorCaracteres + "\r\n";
                    }
                    else
                    {
                        ContadorCaracteres = lexer.lexeme.length() + ContadorCaracterInicio;
                        ContadorCaracterInicio++;
                        resultado = resultado + lexer.lexeme + "        Linea: " + ContadorLineas + " Columna: " +  ContadorCaracterInicio + "-" + ContadorCaracteres +  " T_ID\r\n";
                        ContadorCaracterInicio = ContadorCaracteres ;
                    }
                    break;
                }
                default:
                    resultado=ContadorLineas + " " + resultado+ "<"+ lexer.lexeme + "> ";
            }
            
            
               
           }
        
           
    }
 
    public void Imprimir (String resultado)
    {
        int tamaÃ±o = nombre.length();
        int punto = 0;
        for (int i = 0; i < tamaÃ±o; i++) 
        {
            if(nombre.charAt(i) == '.')
            {
                punto = i;
            }                      
        }
        nombre = nombre.substring(0, punto);
        File fichero2 = new File(nombre + ".out");
            PrintWriter writer2; 

            try 
            {
                writer2 = new PrintWriter(fichero2);
                writer2.print(resultado);
                writer2.close();
                JOptionPane.showMessageDialog(null,errores);
                errores = "";
            } catch (FileNotFoundException ex) 
            {
            }
    }
    public void tablaResultado(){
        Object[][] matriz = new Object [tokenslist.size()][2];
        for(int i =0; i<tokenslist.size();i++){
            matriz[i][0] = tokenslist.get(i).nombre;
            matriz[i][1] = tokenslist.get(i).ID;
        }
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
